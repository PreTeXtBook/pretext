<substitutes>
    <substitute xml:id='asgn_viz1'>
        <div class="runestone codelens ">
            <div class="alert alert-warning cd_section" data-component="codelens" data-question_label="1">
                <div class="pytutorVisualizer" id="asgn_viz1" data-params='{"embeddedMode": true, "lang": "java", "jumpToEnd": false}'>
                </div>
                <p class="runestone_caption">
                    <span class="runestone_caption_text">Activity: CodeLens 1 (asgn_viz1)</span>
                </p>
            </div>

            <script>
var asgn_viz1_vis;

if (allTraceData === undefined) {
   var allTraceData = {};
}

allTraceData["asgn_viz1"] = {"code":"public class Test2\n{\n  public static void main(String[] args)\n  {\n    int x = 3;\n    int y = 2;\n    System.out.println(x);\n    System.out.println(y);\n    x = y;\n    System.out.println(x);\n    System.out.println(y);\n    y = 5;\n    System.out.println(x);\n    System.out.println(y);\n  }\n}","stdin":"","trace":[{"stdout":"","event":"call","line":5,"stack_to_render":[{"func_name":"main:5","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"1","frame_id":1}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":5,"stack_to_render":[{"func_name":"main:5","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"2","frame_id":2}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":6,"stack_to_render":[{"func_name":"main:6","encoded_locals":{"x":3},"ordered_varnames":["x"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"4","frame_id":4}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":7,"stack_to_render":[{"func_name":"main:7","encoded_locals":{"x":3,"y":2},"ordered_varnames":["x","y"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"7","frame_id":7}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"3\n","event":"step_line","line":8,"stack_to_render":[{"func_name":"main:8","encoded_locals":{"x":3,"y":2},"ordered_varnames":["x","y"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"11","frame_id":11}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"3\n2\n","event":"step_line","line":9,"stack_to_render":[{"func_name":"main:9","encoded_locals":{"x":3,"y":2},"ordered_varnames":["x","y"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"14","frame_id":14}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"3\n2\n","event":"step_line","line":10,"stack_to_render":[{"func_name":"main:10","encoded_locals":{"x":2,"y":2},"ordered_varnames":["x","y"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"16","frame_id":16}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"3\n2\n2\n","event":"step_line","line":11,"stack_to_render":[{"func_name":"main:11","encoded_locals":{"x":2,"y":2},"ordered_varnames":["x","y"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"20","frame_id":20}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"3\n2\n2\n2\n","event":"step_line","line":12,"stack_to_render":[{"func_name":"main:12","encoded_locals":{"x":2,"y":2},"ordered_varnames":["x","y"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"23","frame_id":23}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"3\n2\n2\n2\n","event":"step_line","line":13,"stack_to_render":[{"func_name":"main:13","encoded_locals":{"x":2,"y":5},"ordered_varnames":["x","y"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"25","frame_id":25}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"3\n2\n2\n2\n2\n","event":"step_line","line":14,"stack_to_render":[{"func_name":"main:14","encoded_locals":{"x":2,"y":5},"ordered_varnames":["x","y"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"29","frame_id":29}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"3\n2\n2\n2\n2\n5\n","event":"step_line","line":15,"stack_to_render":[{"func_name":"main:15","encoded_locals":{"x":2,"y":5},"ordered_varnames":["x","y"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"32","frame_id":32}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"3\n2\n2\n2\n2\n5\n","event":"return","line":15,"stack_to_render":[{"func_name":"main:15","encoded_locals":{"x":2,"y":5,"__return__":["VOID"]},"ordered_varnames":["x","y","__return__"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"33","frame_id":33}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}}],"userlog":"Debugger VM maxMemory: 444M\n"};
            </script>
        </div>
    </substitute>
    <substitute xml:id='over_codelens1'>
        <div class="runestone codelens ">
            <div class="alert alert-warning cd_section" data-component="codelens" data-question_label="2">
                <div class="pytutorVisualizer" id="over_codelens1" data-params='{"embeddedMode": true, "lang": "python", "jumpToEnd": false}'>
                </div>
                <p class="runestone_caption">
                    <span class="runestone_caption_text">Activity: CodeLens 2 (over_codelens1)</span>
                </p>
            </div>

            <script>
var over_codelens1_vis;

if (allTraceData === undefined) {
   var allTraceData = {};
}

allTraceData["over_codelens1"] = {"code": "print(\"My first program adds two numbers, 2 and 3:\")\nprint(2 + 3)", "trace": [{"line": 1, "event": "step_line", "func_name": "&lt;module&gt;", "globals": {}, "ordered_globals": [], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 2, "event": "step_line", "func_name": "&lt;module&gt;", "globals": {}, "ordered_globals": [], "stack_to_render": [], "heap": {}, "stdout": "My first program adds two numbers, 2 and 3:\n"}, {"line": 2, "event": "return", "func_name": "&lt;module&gt;", "globals": {}, "ordered_globals": [], "stack_to_render": [], "heap": {}, "stdout": "My first program adds two numbers, 2 and 3:\n5\n"}]};
            </script>
        </div>
    </substitute>
</substitutes>
