
if (allTraceData === undefined) {
    var allTraceData = {};
}
(function() { // IIFE to avoid variable collision
    let codelensID = "rs-python-code-lens-questions";  //fallback
    let partnerCodelens = document.currentScript.parentElement.querySelector(".pytutorVisualizer");
    if (partnerCodelens) {
        codelensID = partnerCodelens.id;
    }
    allTraceData[codelensID] = {"code": "def foo(n):\n    n = n + 1\n    return n\nx = 7\ny = x // 3\nz = foo(y)\n", "trace": [{"line": 1, "event": "step_line", "func_name": "<module>", "globals": {}, "ordered_globals": [], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"foo": ["REF", 1]}, "ordered_globals": ["foo"], "stack_to_render": [], "heap": {"1": ["FUNCTION", "foo(n)", null]}, "stdout": "", "question": {"text": "What variable is being assigned to?", "correctText": "x"}}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"foo": ["REF", 1], "x": 7}, "ordered_globals": ["foo", "x"], "stack_to_render": [], "heap": {"1": ["FUNCTION", "foo(n)", null]}, "stdout": "", "question": {"text": "What value will be assigned to <code class=\"code-inline tex2jax_ignore\">y</code>?", "correct": "globals.y", "feedback": "<code class=\"code-inline tex2jax_ignore\">//</code> does integer division"}}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"foo": ["REF", 1], "x": 7, "y": 2}, "ordered_globals": ["foo", "x", "y"], "stack_to_render": [], "heap": {"1": ["FUNCTION", "foo(n)", null]}, "stdout": ""}, {"line": 1, "event": "call", "func_name": "foo", "globals": {"foo": ["REF", 1], "x": 7, "y": 2}, "ordered_globals": ["foo", "x", "y"], "stack_to_render": [{"func_name": "foo", "is_parent": false, "frame_id": 1, "parent_frame_id_list": [], "encoded_locals": {"n": 2}, "ordered_varnames": ["n"], "is_zombie": false, "is_highlighted": true, "unique_hash": "foo_f1"}], "heap": {"1": ["FUNCTION", "foo(n)", null]}, "stdout": ""}, {"line": 2, "event": "step_line", "func_name": "foo", "globals": {"foo": ["REF", 1], "x": 7, "y": 2}, "ordered_globals": ["foo", "x", "y"], "stack_to_render": [{"func_name": "foo", "is_parent": false, "frame_id": 1, "parent_frame_id_list": [], "encoded_locals": {"n": 2}, "ordered_varnames": ["n"], "is_zombie": false, "is_highlighted": true, "unique_hash": "foo_f1"}], "heap": {"1": ["FUNCTION", "foo(n)", null]}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "foo", "globals": {"foo": ["REF", 1], "x": 7, "y": 2}, "ordered_globals": ["foo", "x", "y"], "stack_to_render": [{"func_name": "foo", "is_parent": false, "frame_id": 1, "parent_frame_id_list": [], "encoded_locals": {"n": 3}, "ordered_varnames": ["n"], "is_zombie": false, "is_highlighted": true, "unique_hash": "foo_f1"}], "heap": {"1": ["FUNCTION", "foo(n)", null]}, "stdout": "", "question": {"text": "What value will be returned?", "correct": "current_frame.n", "feedback": "What is <code class=\"code-inline tex2jax_ignore\">n</code> right now?"}}, {"line": 3, "event": "return", "func_name": "foo", "globals": {"foo": ["REF", 1], "x": 7, "y": 2}, "ordered_globals": ["foo", "x", "y"], "stack_to_render": [{"func_name": "foo", "is_parent": false, "frame_id": 1, "parent_frame_id_list": [], "encoded_locals": {"n": 3, "__return__": 3}, "ordered_varnames": ["n", "__return__"], "is_zombie": false, "is_highlighted": true, "unique_hash": "foo_f1"}], "heap": {"1": ["FUNCTION", "foo(n)", null]}, "stdout": ""}, {"line": 6, "event": "return", "func_name": "<module>", "globals": {"foo": ["REF", 1], "x": 7, "y": 2, "z": 3}, "ordered_globals": ["foo", "x", "y", "z"], "stack_to_render": [], "heap": {"1": ["FUNCTION", "foo(n)", null]}, "stdout": ""}], "startingInstruction": 0};
})();