%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.42.0 (http://poppler.freedesktop.org)
%%Creator: TeX
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 195 151
%%HiResBoundingBox: 0 0 195 151
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 195 151 re
W
q
q
[1 0 0 1 -120 -580] cm
q
[1 0 0 1 0 0] cm
0 0 612 792 re
W
q
[1 0 0 1 72 720] cm
q
[1 0 0 1 48.695 -146.994] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
0.3985 w
q
q
Q
q
Q
q
q
[-1 0 0 -1 0 0] cm
q
Q
q
[1 0 0 1 48.695 -146.994] cm
[-1 0 0 -1 0 0] cm
q
Q
0 J
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
Q
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 48.695 -146.994] cm
Q
Q
Q
Q
q
Q
q
Q
q
Q
q
Q
q
q
[-1 0 0 -1 0 0] cm
q
Q
q
[1 0 0 1 48.695 -146.994] cm
[-1 0 0 -1 0 0] cm
q
Q
0 J
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
q
[1 0 0 1 48.695 -146.994] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
0.3985 w
q
q
0 0 194.2676 161.39636 re
W
q
/DeviceRGB {} CS
[0.6196 0.0471 0.0588] SC
/DeviceRGB {} cs
[0.6196 0.0471 0.0588] sc
/DeviceRGB {} cs
[0.8859 0.7141 0.7176] sc
32.37793 10.08727 43.17058 80.69818 re
f
32.37793 10.08727 43.17058 80.69818 re
S
Q
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} cs
[1] sc
69.07292 18.15709 m
64.75586 18.15709 l
64.75586 13.11345 l
69.07292 13.11345 l
69.07292 18.15709 l
64.75586 18.15709 l
66.91438 18.15709 l
66.91438 13.11345 l
66.91438 15.63525 l
64.75586 15.63525 l
69.07292 15.63525 l
f
69.07292 18.15709 m
64.75586 18.15709 l
64.75586 13.11345 l
69.07292 13.11345 l
69.07292 18.15709 l
64.75586 18.15709 l
66.91438 18.15709 l
66.91438 13.11345 l
66.91438 15.63525 l
64.75586 15.63525 l
69.07292 15.63525 l
S
Q
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} cs
[1] sc
43.17058 18.15709 m
38.85352 18.15709 l
38.85352 13.11345 l
43.17058 13.11345 l
43.17058 18.15709 l
38.85352 18.15709 l
41.01204 18.15709 l
41.01204 13.11345 l
41.01204 15.63525 l
38.85352 15.63525 l
43.17058 15.63525 l
f
43.17058 18.15709 m
38.85352 18.15709 l
38.85352 13.11345 l
43.17058 13.11345 l
43.17058 18.15709 l
38.85352 18.15709 l
41.01204 18.15709 l
41.01204 13.11345 l
41.01204 15.63525 l
38.85352 15.63525 l
43.17058 15.63525 l
S
Q
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} cs
[0.6] sc
49.64616 10.08727 8.63411 9.07855 re
f
49.64616 10.08727 8.63411 9.07855 re
S
Q
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
53.96321 10.08727 m
53.96321 19.16582 l
S
Q
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} cs
[1] sc
43.17058 28.24435 m
38.85352 28.24435 l
38.85352 23.20071 l
43.17058 23.20071 l
43.17058 28.24435 l
38.85352 28.24435 l
41.01204 28.24435 l
41.01204 23.20071 l
41.01204 25.72253 l
38.85352 25.72253 l
43.17058 25.72253 l
f
43.17058 28.24435 m
38.85352 28.24435 l
38.85352 23.20071 l
43.17058 23.20071 l
43.17058 28.24435 l
38.85352 28.24435 l
41.01204 28.24435 l
41.01204 23.20071 l
41.01204 25.72253 l
38.85352 25.72253 l
43.17058 25.72253 l
S
Q
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} cs
[1] sc
43.17058 38.33163 m
38.85352 38.33163 l
38.85352 33.288 l
43.17058 33.288 l
43.17058 38.33163 l
38.85352 38.33163 l
41.01204 38.33163 l
41.01204 33.288 l
41.01204 35.8098 l
38.85352 35.8098 l
43.17058 35.8098 l
f
43.17058 38.33163 m
38.85352 38.33163 l
38.85352 33.288 l
43.17058 33.288 l
43.17058 38.33163 l
38.85352 38.33163 l
41.01204 38.33163 l
41.01204 33.288 l
41.01204 35.8098 l
38.85352 35.8098 l
43.17058 35.8098 l
S
Q
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} cs
[1] sc
43.17058 48.4189 m
38.85352 48.4189 l
38.85352 43.37526 l
43.17058 43.37526 l
43.17058 48.4189 l
38.85352 48.4189 l
41.01204 48.4189 l
41.01204 43.37526 l
41.01204 45.89708 l
38.85352 45.89708 l
43.17058 45.89708 l
f
43.17058 48.4189 m
38.85352 48.4189 l
38.85352 43.37526 l
43.17058 43.37526 l
43.17058 48.4189 l
38.85352 48.4189 l
41.01204 48.4189 l
41.01204 43.37526 l
41.01204 45.89708 l
38.85352 45.89708 l
43.17058 45.89708 l
S
Q
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} cs
[1] sc
43.17058 58.50618 m
38.85352 58.50618 l
38.85352 53.46254 l
43.17058 53.46254 l
43.17058 58.50618 l
38.85352 58.50618 l
41.01204 58.50618 l
41.01204 53.46254 l
41.01204 55.98434 l
38.85352 55.98434 l
43.17058 55.98434 l
f
43.17058 58.50618 m
38.85352 58.50618 l
38.85352 53.46254 l
43.17058 53.46254 l
43.17058 58.50618 l
38.85352 58.50618 l
41.01204 58.50618 l
41.01204 53.46254 l
41.01204 55.98434 l
38.85352 55.98434 l
43.17058 55.98434 l
S
Q
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} cs
[1] sc
43.17058 68.59344 m
38.85352 68.59344 l
38.85352 63.5498 l
43.17058 63.5498 l
43.17058 68.59344 l
38.85352 68.59344 l
41.01204 68.59344 l
41.01204 63.5498 l
41.01204 66.07162 l
38.85352 66.07162 l
43.17058 66.07162 l
f
43.17058 68.59344 m
38.85352 68.59344 l
38.85352 63.5498 l
43.17058 63.5498 l
43.17058 68.59344 l
38.85352 68.59344 l
41.01204 68.59344 l
41.01204 63.5498 l
41.01204 66.07162 l
38.85352 66.07162 l
43.17058 66.07162 l
S
Q
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} cs
[1] sc
43.17058 78.68073 m
38.85352 78.68073 l
38.85352 73.63708 l
43.17058 73.63708 l
43.17058 78.68073 l
38.85352 78.68073 l
41.01204 78.68073 l
41.01204 73.63708 l
41.01204 76.15889 l
38.85352 76.15889 l
43.17058 76.15889 l
f
43.17058 78.68073 m
38.85352 78.68073 l
38.85352 73.63708 l
43.17058 73.63708 l
43.17058 78.68073 l
38.85352 78.68073 l
41.01204 78.68073 l
41.01204 73.63708 l
41.01204 76.15889 l
38.85352 76.15889 l
43.17058 76.15889 l
S
Q
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} cs
[1] sc
56.12175 28.24435 m
51.80469 28.24435 l
51.80469 23.20071 l
56.12175 23.20071 l
56.12175 28.24435 l
51.80469 28.24435 l
53.96321 28.24435 l
53.96321 23.20071 l
53.96321 25.72253 l
51.80469 25.72253 l
56.12175 25.72253 l
f
56.12175 28.24435 m
51.80469 28.24435 l
51.80469 23.20071 l
56.12175 23.20071 l
56.12175 28.24435 l
51.80469 28.24435 l
53.96321 28.24435 l
53.96321 23.20071 l
53.96321 25.72253 l
51.80469 25.72253 l
56.12175 25.72253 l
S
Q
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} cs
[1] sc
56.12175 38.33163 m
51.80469 38.33163 l
51.80469 33.288 l
56.12175 33.288 l
56.12175 38.33163 l
51.80469 38.33163 l
53.96321 38.33163 l
53.96321 33.288 l
53.96321 35.8098 l
51.80469 35.8098 l
56.12175 35.8098 l
f
56.12175 38.33163 m
51.80469 38.33163 l
51.80469 33.288 l
56.12175 33.288 l
56.12175 38.33163 l
51.80469 38.33163 l
53.96321 38.33163 l
53.96321 33.288 l
53.96321 35.8098 l
51.80469 35.8098 l
56.12175 35.8098 l
S
Q
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} cs
[1] sc
56.12175 48.4189 m
51.80469 48.4189 l
51.80469 43.37526 l
56.12175 43.37526 l
56.12175 48.4189 l
51.80469 48.4189 l
53.96321 48.4189 l
53.96321 43.37526 l
53.96321 45.89708 l
51.80469 45.89708 l
56.12175 45.89708 l
f
56.12175 48.4189 m
51.80469 48.4189 l
51.80469 43.37526 l
56.12175 43.37526 l
56.12175 48.4189 l
51.80469 48.4189 l
53.96321 48.4189 l
53.96321 43.37526 l
53.96321 45.89708 l
51.80469 45.89708 l
56.12175 45.89708 l
S
Q
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} cs
[1] sc
56.12175 58.50618 m
51.80469 58.50618 l
51.80469 53.46254 l
56.12175 53.46254 l
56.12175 58.50618 l
51.80469 58.50618 l
53.96321 58.50618 l
53.96321 53.46254 l
53.96321 55.98434 l
51.80469 55.98434 l
56.12175 55.98434 l
f
56.12175 58.50618 m
51.80469 58.50618 l
51.80469 53.46254 l
56.12175 53.46254 l
56.12175 58.50618 l
51.80469 58.50618 l
53.96321 58.50618 l
53.96321 53.46254 l
53.96321 55.98434 l
51.80469 55.98434 l
56.12175 55.98434 l
S
Q
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} cs
[1] sc
56.12175 68.59344 m
51.80469 68.59344 l
51.80469 63.5498 l
56.12175 63.5498 l
56.12175 68.59344 l
51.80469 68.59344 l
53.96321 68.59344 l
53.96321 63.5498 l
53.96321 66.07162 l
51.80469 66.07162 l
56.12175 66.07162 l
f
56.12175 68.59344 m
51.80469 68.59344 l
51.80469 63.5498 l
56.12175 63.5498 l
56.12175 68.59344 l
51.80469 68.59344 l
53.96321 68.59344 l
53.96321 63.5498 l
53.96321 66.07162 l
51.80469 66.07162 l
56.12175 66.07162 l
S
Q
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} cs
[1] sc
56.12175 78.68073 m
51.80469 78.68073 l
51.80469 73.63708 l
56.12175 73.63708 l
56.12175 78.68073 l
51.80469 78.68073 l
53.96321 78.68073 l
53.96321 73.63708 l
53.96321 76.15889 l
51.80469 76.15889 l
56.12175 76.15889 l
f
56.12175 78.68073 m
51.80469 78.68073 l
51.80469 73.63708 l
56.12175 73.63708 l
56.12175 78.68073 l
51.80469 78.68073 l
53.96321 78.68073 l
53.96321 73.63708 l
53.96321 76.15889 l
51.80469 76.15889 l
56.12175 76.15889 l
S
Q
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} cs
[1] sc
69.07292 28.24435 m
64.75586 28.24435 l
64.75586 23.20071 l
69.07292 23.20071 l
69.07292 28.24435 l
64.75586 28.24435 l
66.91438 28.24435 l
66.91438 23.20071 l
66.91438 25.72253 l
64.75586 25.72253 l
69.07292 25.72253 l
f
69.07292 28.24435 m
64.75586 28.24435 l
64.75586 23.20071 l
69.07292 23.20071 l
69.07292 28.24435 l
64.75586 28.24435 l
66.91438 28.24435 l
66.91438 23.20071 l
66.91438 25.72253 l
64.75586 25.72253 l
69.07292 25.72253 l
S
Q
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} cs
[1] sc
69.07292 38.33163 m
64.75586 38.33163 l
64.75586 33.288 l
69.07292 33.288 l
69.07292 38.33163 l
64.75586 38.33163 l
66.91438 38.33163 l
66.91438 33.288 l
66.91438 35.8098 l
64.75586 35.8098 l
69.07292 35.8098 l
f
69.07292 38.33163 m
64.75586 38.33163 l
64.75586 33.288 l
69.07292 33.288 l
69.07292 38.33163 l
64.75586 38.33163 l
66.91438 38.33163 l
66.91438 33.288 l
66.91438 35.8098 l
64.75586 35.8098 l
69.07292 35.8098 l
S
Q
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} cs
[1] sc
69.07292 48.4189 m
64.75586 48.4189 l
64.75586 43.37526 l
69.07292 43.37526 l
69.07292 48.4189 l
64.75586 48.4189 l
66.91438 48.4189 l
66.91438 43.37526 l
66.91438 45.89708 l
64.75586 45.89708 l
69.07292 45.89708 l
f
69.07292 48.4189 m
64.75586 48.4189 l
64.75586 43.37526 l
69.07292 43.37526 l
69.07292 48.4189 l
64.75586 48.4189 l
66.91438 48.4189 l
66.91438 43.37526 l
66.91438 45.89708 l
64.75586 45.89708 l
69.07292 45.89708 l
S
Q
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} cs
[1] sc
69.07292 58.50618 m
64.75586 58.50618 l
64.75586 53.46254 l
69.07292 53.46254 l
69.07292 58.50618 l
64.75586 58.50618 l
66.91438 58.50618 l
66.91438 53.46254 l
66.91438 55.98434 l
64.75586 55.98434 l
69.07292 55.98434 l
f
69.07292 58.50618 m
64.75586 58.50618 l
64.75586 53.46254 l
69.07292 53.46254 l
69.07292 58.50618 l
64.75586 58.50618 l
66.91438 58.50618 l
66.91438 53.46254 l
66.91438 55.98434 l
64.75586 55.98434 l
69.07292 55.98434 l
S
Q
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} cs
[1] sc
69.07292 68.59344 m
64.75586 68.59344 l
64.75586 63.5498 l
69.07292 63.5498 l
69.07292 68.59344 l
64.75586 68.59344 l
66.91438 68.59344 l
66.91438 63.5498 l
66.91438 66.07162 l
64.75586 66.07162 l
69.07292 66.07162 l
f
69.07292 68.59344 m
64.75586 68.59344 l
64.75586 63.5498 l
69.07292 63.5498 l
69.07292 68.59344 l
64.75586 68.59344 l
66.91438 68.59344 l
66.91438 63.5498 l
66.91438 66.07162 l
64.75586 66.07162 l
69.07292 66.07162 l
S
Q
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} cs
[1] sc
69.07292 78.68073 m
64.75586 78.68073 l
64.75586 73.63708 l
69.07292 73.63708 l
69.07292 78.68073 l
64.75586 78.68073 l
66.91438 78.68073 l
66.91438 73.63708 l
66.91438 76.15889 l
64.75586 76.15889 l
69.07292 76.15889 l
f
69.07292 78.68073 m
64.75586 78.68073 l
64.75586 73.63708 l
69.07292 73.63708 l
69.07292 78.68073 l
64.75586 78.68073 l
66.91438 78.68073 l
66.91438 73.63708 l
66.91438 76.15889 l
64.75586 76.15889 l
69.07292 76.15889 l
S
Q
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
0 10.08727 m
194.2676 10.08727 l
S
Q
q
/DeviceRGB {} CS
[0 0.5019 0.6] SC
/DeviceRGB {} cs
[0 0.5019 0.6] sc
64.75586 90.78545 m
64.75586 90.78545 70.32567 106.52785 72.46489 111.78343 c
74.60411 117.03903 78.0347 124.5511 80.17392 128.66418 c
82.31314 132.77727 85.74374 138.45714 87.88297 141.42769 c
90.02219 144.39825 93.45277 148.24588 95.592 150.07391 c
97.73122 151.90193 101.1618 153.91737 103.30103 154.60287 c
105.44025 155.28839 108.87083 155.4716 111.01006 155.0146 c
113.14928 154.5576 116.57988 152.90855 118.7191 151.30904 c
120.85832 149.70952 124.28891 146.2283 126.42813 143.48627 c
128.56735 140.74423 131.99794 135.43088 134.13716 131.5463 c
136.27638 127.66173 139.70697 120.51599 141.84619 115.48888 c
143.98541 110.46176 147.41602 101.48392 149.55524 95.31429 c
151.69446 89.14465 155.12505 78.3345 157.26427 71.02237 c
159.40349 63.71024 162.83408 51.0681 164.9733 42.61345 c
167.11252 34.1588 172.68233 10.0871 172.68233 10.0871 c
S
Q
Q
q
/DeviceRGB {} CS
[0 0.5019 0.6] SC
/DeviceRGB {} cs
[0 0.5019 0.6] sc
/DeviceRGB {} CS
[0 0.5019 0.6] SC
/DeviceRGB {} cs
[0 0.5019 0.6] sc
66.74841 90.78545 m
66.74841 91.88593 65.85634 92.778 64.75586 92.778 c
63.6554 92.778 62.7633 91.88593 62.7633 90.78545 c
62.7633 89.68498 63.6554 88.7929 64.75586 88.7929 c
65.85634 88.7929 66.74841 89.68498 66.74841 90.78545 c
h
f
66.74841 90.78545 m
66.74841 91.88593 65.85634 92.778 64.75586 92.778 c
63.6554 92.778 62.7633 91.88593 62.7633 90.78545 c
62.7633 89.68498 63.6554 88.7929 64.75586 88.7929 c
65.85634 88.7929 66.74841 89.68498 66.74841 90.78545 c
h
S
74.45744 111.78343 m
74.45744 112.88391 73.56535 113.77599 72.46489 113.77599 c
71.36443 113.77599 70.47234 112.88391 70.47234 111.78343 c
70.47234 110.68297 71.36443 109.79088 72.46489 109.79088 c
73.56535 109.79088 74.45744 110.68297 74.45744 111.78343 c
h
f
74.45744 111.78343 m
74.45744 112.88391 73.56535 113.77599 72.46489 113.77599 c
71.36443 113.77599 70.47234 112.88391 70.47234 111.78343 c
70.47234 110.68297 71.36443 109.79088 72.46489 109.79088 c
73.56535 109.79088 74.45744 110.68297 74.45744 111.78343 c
h
S
82.16647 128.66418 m
82.16647 129.76466 81.27438 130.65674 80.17392 130.65674 c
79.07344 130.65674 78.18137 129.76466 78.18137 128.66418 c
78.18137 127.56372 79.07344 126.67163 80.17392 126.67163 c
81.27438 126.67163 82.16647 127.56372 82.16647 128.66418 c
h
f
82.16647 128.66418 m
82.16647 129.76466 81.27438 130.65674 80.17392 130.65674 c
79.07344 130.65674 78.18137 129.76466 78.18137 128.66418 c
78.18137 127.56372 79.07344 126.67163 80.17392 126.67163 c
81.27438 126.67163 82.16647 127.56372 82.16647 128.66418 c
h
S
89.87552 141.42769 m
89.87552 142.52817 88.98343 143.42024 87.88297 143.42024 c
86.78249 143.42024 85.89041 142.52817 85.89041 141.42769 c
85.89041 140.32722 86.78249 139.43513 87.88297 139.43513 c
88.98343 139.43513 89.87552 140.32722 89.87552 141.42769 c
h
f
89.87552 141.42769 m
89.87552 142.52817 88.98343 143.42024 87.88297 143.42024 c
86.78249 143.42024 85.89041 142.52817 85.89041 141.42769 c
85.89041 140.32722 86.78249 139.43513 87.88297 139.43513 c
88.98343 139.43513 89.87552 140.32722 89.87552 141.42769 c
h
S
97.58455 150.07391 m
97.58455 151.17438 96.69246 152.06647 95.592 152.06647 c
94.49152 152.06647 93.59944 151.17438 93.59944 150.07391 c
93.59944 148.97343 94.49152 148.08136 95.592 148.08136 c
96.69246 148.08136 97.58455 148.97343 97.58455 150.07391 c
h
f
97.58455 150.07391 m
97.58455 151.17438 96.69246 152.06647 95.592 152.06647 c
94.49152 152.06647 93.59944 151.17438 93.59944 150.07391 c
93.59944 148.97343 94.49152 148.08136 95.592 148.08136 c
96.69246 148.08136 97.58455 148.97343 97.58455 150.07391 c
h
S
105.29358 154.60287 m
105.29358 155.70335 104.40149 156.59543 103.30103 156.59543 c
102.20055 156.59543 101.30847 155.70335 101.30847 154.60287 c
101.30847 153.50241 102.20055 152.61032 103.30103 152.61032 c
104.40149 152.61032 105.29358 153.50241 105.29358 154.60287 c
h
f
105.29358 154.60287 m
105.29358 155.70335 104.40149 156.59543 103.30103 156.59543 c
102.20055 156.59543 101.30847 155.70335 101.30847 154.60287 c
101.30847 153.50241 102.20055 152.61032 103.30103 152.61032 c
104.40149 152.61032 105.29358 153.50241 105.29358 154.60287 c
h
S
113.00261 155.0146 m
113.00261 156.11507 112.11052 157.00716 111.01006 157.00716 c
109.90958 157.00716 109.0175 156.11507 109.0175 155.0146 c
109.0175 153.91412 109.90958 153.02205 111.01006 153.02205 c
112.11052 153.02205 113.00261 153.91412 113.00261 155.0146 c
h
f
113.00261 155.0146 m
113.00261 156.11507 112.11052 157.00716 111.01006 157.00716 c
109.90958 157.00716 109.0175 156.11507 109.0175 155.0146 c
109.0175 153.91412 109.90958 153.02205 111.01006 153.02205 c
112.11052 153.02205 113.00261 153.91412 113.00261 155.0146 c
h
S
120.71165 151.30904 m
120.71165 152.40952 119.81956 153.30159 118.7191 153.30159 c
117.61862 153.30159 116.72655 152.40952 116.72655 151.30904 c
116.72655 150.20857 117.61862 149.31648 118.7191 149.31648 c
119.81956 149.31648 120.71165 150.20857 120.71165 151.30904 c
h
f
120.71165 151.30904 m
120.71165 152.40952 119.81956 153.30159 118.7191 153.30159 c
117.61862 153.30159 116.72655 152.40952 116.72655 151.30904 c
116.72655 150.20857 117.61862 149.31648 118.7191 149.31648 c
119.81956 149.31648 120.71165 150.20857 120.71165 151.30904 c
h
S
128.42068 143.48627 m
128.42068 144.58673 127.5286 145.47882 126.42813 145.47882 c
125.32765 145.47882 124.43558 144.58673 124.43558 143.48627 c
124.43558 142.3858 125.32765 141.49371 126.42813 141.49371 c
127.5286 141.49371 128.42068 142.3858 128.42068 143.48627 c
h
f
128.42068 143.48627 m
128.42068 144.58673 127.5286 145.47882 126.42813 145.47882 c
125.32765 145.47882 124.43558 144.58673 124.43558 143.48627 c
124.43558 142.3858 125.32765 141.49371 126.42813 141.49371 c
127.5286 141.49371 128.42068 142.3858 128.42068 143.48627 c
h
S
136.12971 131.5463 m
136.12971 132.64677 135.23763 133.53885 134.13716 133.53885 c
133.03668 133.53885 132.1446 132.64677 132.1446 131.5463 c
132.1446 130.44583 133.03668 129.55374 134.13716 129.55374 c
135.23763 129.55374 136.12971 130.44583 136.12971 131.5463 c
h
f
136.12971 131.5463 m
136.12971 132.64677 135.23763 133.53885 134.13716 133.53885 c
133.03668 133.53885 132.1446 132.64677 132.1446 131.5463 c
132.1446 130.44583 133.03668 129.55374 134.13716 129.55374 c
135.23763 129.55374 136.12971 130.44583 136.12971 131.5463 c
h
S
143.83875 115.48888 m
143.83875 116.58934 142.94666 117.48143 141.84619 117.48143 c
140.74571 117.48143 139.85364 116.58934 139.85364 115.48888 c
139.85364 114.3884 140.74571 113.49632 141.84619 113.49632 c
142.94666 113.49632 143.83875 114.3884 143.83875 115.48888 c
h
f
143.83875 115.48888 m
143.83875 116.58934 142.94666 117.48143 141.84619 117.48143 c
140.74571 117.48143 139.85364 116.58934 139.85364 115.48888 c
139.85364 114.3884 140.74571 113.49632 141.84619 113.49632 c
142.94666 113.49632 143.83875 114.3884 143.83875 115.48888 c
h
S
151.54779 95.31429 m
151.54779 96.41475 150.6557 97.30684 149.55524 97.30684 c
148.45476 97.30684 147.56268 96.41475 147.56268 95.31429 c
147.56268 94.2138 148.45476 93.32173 149.55524 93.32173 c
150.6557 93.32173 151.54779 94.2138 151.54779 95.31429 c
h
f
151.54779 95.31429 m
151.54779 96.41475 150.6557 97.30684 149.55524 97.30684 c
148.45476 97.30684 147.56268 96.41475 147.56268 95.31429 c
147.56268 94.2138 148.45476 93.32173 149.55524 93.32173 c
150.6557 93.32173 151.54779 94.2138 151.54779 95.31429 c
h
S
159.25682 71.02237 m
159.25682 72.12285 158.36473 73.01492 157.26427 73.01492 c
156.16379 73.01492 155.27171 72.12285 155.27171 71.02237 c
155.27171 69.9219 156.16379 69.02982 157.26427 69.02982 c
158.36473 69.02982 159.25682 69.9219 159.25682 71.02237 c
h
f
159.25682 71.02237 m
159.25682 72.12285 158.36473 73.01492 157.26427 73.01492 c
156.16379 73.01492 155.27171 72.12285 155.27171 71.02237 c
155.27171 69.9219 156.16379 69.02982 157.26427 69.02982 c
158.36473 69.02982 159.25682 69.9219 159.25682 71.02237 c
h
S
166.96585 42.61345 m
166.96585 43.71391 166.07376 44.606 164.9733 44.606 c
163.87282 44.606 162.98074 43.71391 162.98074 42.61345 c
162.98074 41.51297 163.87282 40.6209 164.9733 40.6209 c
166.07376 40.6209 166.96585 41.51297 166.96585 42.61345 c
h
f
166.96585 42.61345 m
166.96585 43.71391 166.07376 44.606 164.9733 44.606 c
163.87282 44.606 162.98074 43.71391 162.98074 42.61345 c
162.98074 41.51297 163.87282 40.6209 164.9733 40.6209 c
166.07376 40.6209 166.96585 41.51297 166.96585 42.61345 c
h
S
174.67488 10.0871 m
174.67488 11.18758 173.78279 12.07965 172.68233 12.07965 c
171.58185 12.07965 170.68977 11.18758 170.68977 10.0871 c
170.68977 8.98663 171.58185 8.09454 172.68233 8.09454 c
173.78279 8.09454 174.67488 8.98663 174.67488 10.0871 c
h
f
174.67488 10.0871 m
174.67488 11.18758 173.78279 12.07965 172.68233 12.07965 c
171.58185 12.07965 170.68977 11.18758 170.68977 10.0871 c
170.68977 8.98663 171.58185 8.09454 172.68233 8.09454 c
173.78279 8.09454 174.67488 8.98663 174.67488 10.0871 c
h
S
Q
Q
Q
Q
Q
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 48.695 -146.994] cm
Q
Q
Q
Q
q
Q
q
Q
Q
Q
Q
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
