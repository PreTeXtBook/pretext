<?xml version="1.0" encoding="UTF-8"?>

<!--   This file is part of the documentation of PreTeXt      -->
<!--                                                          -->
<!--      PreTeXt Author's Guide                              -->
<!--                                                          -->
<!-- Copyright (C) 2013-2016  Robert A. Beezer                -->
<!-- See the file COPYING for copying conditions.             -->

<chapter xml:id="topics">
    <title>Topics</title>

    <introduction>
        <p>This long chapter provides the main documentation for a variety of the features of <pretext />.  Some sections are just stubs and need to be written.  Requests for sections to prioritize are welcome, though some sections are waiting for features to stabilize.</p>
    </introduction>

    <section xml:id="topic-paragraphs">
        <title>Paragraphs</title>

        <introduction>
            <p>Much of your writing will happen in paragraphs, delimited by the simple tag, <tag>p</tag>.  You are reading one right now.  They are a basic building block of divisions, and also a basic building block of other structures.  For example, an ordered list, <tag>ol</tag>, contains a sequence of list items, <tag>li</tag>, and a typical list item might be a sequence of paragraphs.  (Do not confuse this element with the anomalous <tag>paragraphs</tag> subdivision, <xref ref="topic-divisions" />).</p>

            <p>Paragraphs are a choke-point of sorts.  Many tags can <em>only</em> be used within paragraphs, and many others <em>cannot</em> be used within paragraphs.  Notice too, that we do a certain amount of manipulation of whitespace in a paragraph, in ways that you may not even notice.</p>

            <p>The following subsections together contain allowed, or encouraged, markup within a paragraph.  Many of these may be used in captions and titles, but some of the more complicated constructions (which appear later here) cannot be used in captions or titles.</p>

            <!-- Rutter, "Web Typography", "em dash", "en dash" (no hyphen) -->
            <p>One more comment: typewriters, computer keyboards, and the <acro>ASCII</acro> character set have together conspired to limit the full range of characters that typographers and printers have used historically.  A case in point is the hyphen, which is a single key on a keyboard.  However, there are at least three common dashes of differing lengths (hyphen, en dash, and em dash), and in the context of mathematics or a computer program, the hyphen might be the binary operation of subtraction or the unary operation of negation.  Another example is the <q>upright</q>, or <q>dumb</q>, quote mark that is a single key on a keyboard, while careful typography will employ <q>smart</q>, or <q>curly</q>, quote marks that have left and right variants.  (Sometimes called <q>66</q> and <q>99</q> based on their shape.)  <pretext /> will help you navigate this complexity, but you will want to use keyboard characters or markup appropriately.  So if you care about communicating clearly, and making your writing easy for a reader to use, absorb the details that follow and the philosophy they implement.</p>

            <p>We will say it again.  <pretext /> is a markup language, and our various output formats (<latex />, <init>HTML</init>, <init>EPUB</init>, Jupyter notebooks) in turn employ markup languages.  These use different escape characters and give different characters special meanings.  Our job is to insulate you from this variety, so you can concentrate on authoring your <em>ideas</em>.</p>

            <p>We begin with some simple <q>grouping</q> elements which contain several excellent examples of the importance and utility of careful markup.  There is a plethora of empty tags for individual characters, and these are very important (see <xref ref="topic-character-elements" />).  We defer them to the end of this section, since they are not as instructive, but do not think this means they are an afterthought.  They can be extremely critical for successful conversions.  Also do not miss <xref ref="practice-careful-markup" /> in the conclusion of this section.</p>
        </introduction>

        <subsection>
            <title>Simple Markup in Paragraphs</title>

            <p>Beyond empty tags that translate to various characters, there are relatively simple tags that can call attention to various <em>portions</em> of a sentence, or generate more complicated constructions than described above.</p>

            <p>Most, if not all, of the markup in this subsection may also be used within titles and captions, though they might lose some of their features when used in a title, especially when the title is duplicated in other contexts, such as a Table of Contents.</p>

            <!-- fragment names, and their elements, from schema source
            delimiter-group: q, sq, braces, angles, brackets, dblbrackets
            highlight-group: em, term, alert, pubtitle, articletitle, foreign
            abbreviation-group: abbr, acro, init
            editing-group: delete, insert, stale
            xml-group: tag, tage, attr
            scientific-name-group: taxon
            footnotes: fn
            mathematics: m
            verbatim: c, email
            -->

            <!-- Groupings via symbols or characters -->

            <paragraphs>
                <title><tag>q</tag>, quotes, <q>group</q></title>
                <p>This is the first of several grouping tags, using characters with left and right variants, and some of the most common markup in your writing.  Presentation uses double quote marks that are <term>smart quotes</term>, meaning that they look different in their opening and closing variants.  (See <tag>blockquote</tag> for extensive runs of quoted text that can stand alone, and which can carry an attribution.)</p>
            </paragraphs>

            <paragraphs>
                <title><tag>sq</tag>, single quotes, <sq>group</sq></title>
                <p>Perhaps less-often used than <tag>q</tag>, so a couple more characters to type.  Presentation is paired single-quotes, opening and closing.</p>
            </paragraphs>

            <paragraphs>
                <title><tag>angles</tag>, angle brackets, <angles>group</angles></title>
                <p>Left and right angle brackets to enclose a phrase.  This is not for creating a set of generators in mathematics, use the appropriate mathematics tag and syntax for that.  Note also that the characters used here are definitely distinct from the inequality symbols, &lt; and &gt;.</p>
            </paragraphs>

            <paragraphs>
                <title><tag>dblbrackets</tag>, double square brackets, <dblbrackets>group</dblbrackets></title>
                <p>Double left and right square brackets to enclose a phrase.  This is not for grouping expressions in mathematics, use the appropriate mathematics tag and syntax for that.  These are used in the analysis of texts to note various restorations or deletions.  Inquire if you feel there should be more semantic markup for this purpose.</p>
            </paragraphs>

            <!-- Font-face-changing markup -->

            <paragraphs>
                <title><tag>em</tag>, emphasis, <em>important</em></title>
                <p>Use this element to surround characters in a phrase that is to be emphasized.  This will typically be rendered in italics, though this choice is left to the implementation of a particular conversion.  See also, <tag>alert</tag>.</p>

                <p>If you are new to using a markup language, this is a place to stop and think.  As a <pretext /> author you are never able to say, <q>I want this text to appear in italics.</q>  Rather, you specify that certain text has a certain purpose or meaning.  Emphasis is a way of <em>calling attention</em> to a portion of a sentence or paragraph.  A font change (to italic) is a common and effective device.  But a particular format might have a better, or different, way to achieve this.  Perhaps in an electronic format, the letters are animated and dance up and down.  (Just kidding.  But you may be reminded of frequent blinking text in the early days of web design, supported by a non-standard <tag>blink</tag> element.)  Seriously, now would be a good time to review <xref ref="philosophy" />.</p>
            </paragraphs>

            <paragraphs>
                <title><tag>alert</tag>, alert, <alert>critical</alert></title>
                <p>Use this to heavily emphasize something to a greater degree than just emphasis.  Maybe think of it as <alert>SHOUTING</alert>.  Bold italic font, or a bright color, or both, would be normal choices for presentation.  Overuse of this tag will dilute its effectiveness.</p>
            </paragraphs>

            <paragraphs>
                <title><tag>term</tag>, terminology, <term>larvae</term></title>
                <p>Use this to identify a word or phrase that is being defined, in contrast to actually using a structured <tag>definition</tag>.  Typical presentation is a bold font.  Caution: the use of this tag is to communicate a defined term and converters may make use of this interpretation, given the importance of definitions in scholarly work.  It would be considered <term>tag abuse</term> to use this tag to simply bold a word or phrase for some other reason, perhaps as an alternative to <tag>em</tag> or <tag>alert</tag>.</p>
            </paragraphs>

            <paragraphs>
                <title><tag>foreign</tag>, foreign words, idioms, phrases, <foreign>Hola</foreign></title>
                <p>This tag is used to identify words or phrases from a language other than the main one used for the overall document.  It is best practice to use a <attr>xml:lang</attr> attribute to identify the language, since this will assist screen readers and hyphenation algorithms.  We may also recognize the need for a different script (font).  Usual presentation is italics for languages using a Latin script.  This should not be used for entire paragraphs as a way of assisting with a translation of an entire document.</p>

                <p>Note that when we use italics for emphasis <em>and</em> to point out foreign words or phrases, there is a loss of information in our output.  In other words, we can no longer reliably (in an automated way) convert our output back to equivalent PreTeXt source from its visual representations.  <foreign xml:lang="fr-FR">C'est la vie</foreign>.  See <xref ref="philosophy" /> again.</p>
            </paragraphs>

            <paragraphs>
                <title><tag>pubtitle</tag>, <tag>articletitle</tag>, titles of books and articles</title>
                <p>These provide the ability to typographically distinguish the title of another work, and are not a replacement for careful bibliographies and citations.  Use <tag>pubtitle</tag> for longer, complete works, such as books, plays, or entire websites.  Use <tag>articletitle</tag> for shorter, component works, such as a chapter of a book, a research article, or a single webpage.</p>

                <p>Presentation for a longer work will be italics or an oblique (slanted) font, and for a shorter work, the title will simply be quoted.</p>
            </paragraphs>

            <!-- Font-size changing group -->

            <paragraphs>
                <title><tag>abbr</tag>, <tag>init</tag>, <tag>acro</tag>, abbreviation, initialism, acronym, <abbr>Mr.</abbr>, <init>XML</init>, <acro>SCUBA</acro></title>
                <p>An abbreviation is a condensed or shortened version of some word or phrase, such as <abbr>Mr.</abbr> for <q>Mister.</q>  Converters should take care with periods (full stop) inside an <tag>abbr</tag> as distinguished from the end of a sentence (which may not always be clear given the absence of a tag delimiting sentences).  An initialism is an abbreviation read as a sequence of letters, often the first letter of words in a phrase, such as <init>HTML</init> for <q>HyperText Markup Language.</q>  An acronym is much like an initialism, but the letters are read as a pronounceable word (which sometimes actually enters the language as a word, such as <q>radar</q> which began as RAdio Detection And Ranging).  An example is <acro>SCUBA</acro> which stands for <q>Self-Contained Underwater Breathing Apparatus.</q>  Initialisms and acronyms may be presented in a small-capitals font or as regular capitals reduced in size.</p>
            </paragraphs>

            <!-- Editing group -->

            <paragraphs>
                <title><tag>delete</tag>, <tag>insert</tag>, <tag>stale</tag>, editing assistance, <delete>gone</delete>, <insert>new</insert>, <stale>old</stale></title>
                <p>These denote portions of a text that is being changed in some way, presumably as part of an editing process.  Conceivably, they could be managed by some other tool acting on your source.  Stale text is that which is slated for removal eventually, but is left in place so that it may be consulted.  There is no support presently for actually deleting or incorporating text, though that would be a reasonable feature request.</p>

                <p>Red and green, for leaving and entering, are natural choices for presentation.  But in consideration of those readers who cannot always distinguish different colors, other devices, such as strikethrough or underlining, should also be employed.</p>
            </paragraphs>

            <!-- XML syntax group -->

            <paragraphs>
                <title><tag>tag</tag>, <tag>tage</tag>, <tag>attr</tag>, tag, empty tag, attribute, <tag>section</tag>, <tage>hash</tage>, <attr>width</attr></title>
                <p>These are <pretext /> tags for when we write about <pretext /> and need to discuss tags, empty tags, and attributes.  Given how we design <pretext /> tags the content of these elements should only be the 26 lower-case letters and a dash/hyphen.  These should render in ways that make the three types of language elements obvious without much further discussion.  Just a bit self-serving, but not unjustified.</p>
            </paragraphs>

            <!-- Scientific names -->

            <paragraphs>
                <title><tag>taxon</tag>, scientific names, <taxon>Escherichia coli</taxon></title>
                <p>This element may surround a full scientific name, resulting in presentation in italics.  There are subelements <tag>genus</tag> and <tag>species</tag> which may be used to delineate those components.</p>

                <p>A <attr>ncbi</attr> attribute on <tag>taxon</tag> accepts an identifier from the <url href="https://www.ncbi.nlm.nih.gov/" visual="www.ncbi.nlm.nih.gov">National Center for Biotechnology Information</url>.  Feature requests for ways to make this more useful are welcome.</p>
            </paragraphs>

            <!-- Footnotes -->

            <paragraphs>
                <title><tag>fn</tag>, footnotes</title>
                <idx>footnotes</idx>
                <p>A footnote can be inserted in a paragraph and a mark will be left behind.  Where the content of the footnote goes depends on the capabilities of the output format.  Because a footnote allows you to begin a new piece of text <em>anywhere</em>, it can be difficult to handle technically.  For this reason it is banned from places like titles and its possible content is limited (for openers, no paragraphs).</p>

                <p>A footnote is the farthest thing from structured writing that we can think of.  It can go anywhere.  Resist the temptation to use it, and your writing will improve.  We frequently entertain the thought of making footnotes impossible in <pretext />.  See the <tag>aside</tag> element for a possible alternative.</p>
            </paragraphs>

            <!-- Inline mathematics -->

            <paragraphs>
                <title><tag>m</tag>, mathematics, <m>x^2+y^2</m></title>
                <p>Simple, inline expressions using mathematical notation may be used in paragraphs, and in titles and captions.  The syntax is <latex />.  See <xref ref="topic-mathematics" /> for full details.</p>
            </paragraphs>

            <!-- Inline verbatim -->

            <paragraphs>
                <title><tag>c</tag>, code, verbatim text, literal text, <c>import</c></title>
                <p>Short bursts of raw, or verbatim, text can be wrapped in the <tag>c</tag> element.  Strictly speaking, <q>code</q> is a misnomer, as the text may be anything you need to communicate exactly as one would type it at a keyboard or as input to a computer program.  Anything longer than a handful of characters, or needing accurate line breaks should consider the <tag>cd</tag>, <tag>pre</tag>, <tag>program</tag> or <tag>console</tag> tags.  Presentation is normally a monospaced sans serif font, perhaps of a slightly heavier weight, and designed for the job with features such as unambiguous zeros (versus the letter <sq>oh</sq>).  See <xref ref="topic-verbatim-literal" /> for details.</p>
            </paragraphs>

            <paragraphs>
                <title><tag>email</tag>, email address, <email>nobody@example.com</email></title>
                <p>Very similar to the <tag>c</tag> tag, this may be used to get a monospace presentation of an email address, possibly as an active link in some formats.</p>
            </paragraphs>

        </subsection>

        <subsection>
            <title>Cross-References and Paragraphs</title>

            <!-- fragment names, and their elements, from schema source
            reference: url, xref, notation
            index: idx
            -->

            <p>There are several devices for creating cross-references.  Generally, these are unwise (or banned) in titles, and if allowed may be inactive in certain portions of an electronic output format (such as when migrating to a Table of Contents).</p>

            <paragraphs>
                <title><tag>url</tag>, linking external resources</title>
                <p>This is a cross-reference <em>to</em> some item separate and distinct for your document.</p>

                <p>A Uniform Resource Locator (<init>URL</init>) is, loosely speaking, an Internet address for some item.  Presentation depends on the capabilities of the output format to serve the resource.  There is a mandatory attribute, <attr>href</attr>, that contains the full <init>URL</init>, including a protocol (such as <c>http://</c>).  Used as an empty tag, the visual text will be the exact contents of the <attr>href</attr> attribute.  So, <url href="http://www.example.com" /> can be achieved with
                    <cd>&lt;url href="http://www.example.com"/&gt;</cd>
                </p>

                <p>You may also wish to provide some text other than the actual <init>URL</init>, which you can specify as the content of the <tag>url</tag> element.  For example, <url href="http://www.example.com">IANA Test Site</url> can be achieved with
                    <cd>&lt;url href="http://www.example.com"&gt;IANA Test Site&lt;/url&gt;</cd>
                In order to have a URL occur in print output in a useful way, and in electronic output in an active way, the <attr>visual</attr> attribute can be used to display the visual portion as verbatim text in a footnote.
                So illustrating again, we get <url href="http://www.example.com" visual="example.com"/> from
                    <cd>&lt;url href="http://www.example.com" visual="example.com"/&gt;</cd>
                Notice the necessity and/or desirability of marking the text in a way that distinguishes it as literal text.</p>

                <p>Note also that this tag is meant for <em>external</em> resources, so see the <tag>xref</tag> element (below) or <xref ref="topic-cross-referencing" /> for ways to link internally (<ie /> within your document).</p>
            </paragraphs>

            <paragraphs>
                <title><tag>xref</tag>, cross-references</title>
                <p>This is a cross-reference <em>to</em> some item contained within your document.</p>

                <p>Extensive and intuitive capabilities for cross-referencing are a primary feature of <pretext />.  Typical use is an empty tag with the <attr>ref</attr> attribute specifying the value of an <attr>xml:id</attr> on the <term>target</term> of the cross-reference.  This should work easily without much more instruction, but familiarize yourself with the details in <xref ref="topic-cross-referencing" /> to get the most out of some the available options. </p>
            </paragraphs>

            <paragraphs>
                <title><tag>idx</tag>, index target</title>

                <p>This indicates that the containing structure (theorem, example, etc.), or top-level paragraph, should be the <em>target</em> of an entry of the index (a special sort of cross-reference).  See <xref ref="overview-index-notation"/> and <xref ref="topic-index"/> for general details.</p>
            </paragraphs>

            <paragraphs>
                <title><tag>notation</tag>, index target</title>

                <p>This indicates that the containing definition, or top-level paragraph, should be the <em>target</em> of an entry of the list of notation (a special sort of cross-reference).  See <xref ref="overview-index-notation"/> and <xref ref="topic-notation"/> for general details.</p>
            </paragraphs>
        </subsection>

        <subsection xml:id="topic-structure-in-paragraph">
            <title>Structured Markup in Paragraphs</title>

            <!-- Schema, reference groups:      -->
            <!-- List, MathDisplay, CodeDisplay -->

            <p>There are three categories of items which typically are structured further, and which are almost entirely restricted to appearing in a paragraph.  Given their complexity, details are covered in other sections of this guide.</p>

            <paragraphs>
                <title>Lists</title>
                <p>With only one major exception (and three minor ones), a list <em>must</em> appear within a paragraph.  See <xref ref="overview-lists" /> for an introduction and <xref ref="topic-lists" /> for precise details.</p>
            </paragraphs>

            <paragraphs>
                <title>Display Mathematics</title>
                <p>Displayed mathematics, which is a single equation or a sequence of (aligned) equations, can only be placed within a paragraph.  The relevant tags are <tag>me</tag>, <tag>men</tag>, <tag>md</tag>, and <tag>mdn</tag>, with the latter two necessarily structured with <tag>mrow</tag> elements.  See <xref ref="overview-math" /> for an introduction and <xref ref="topic-mathematics" /> for precise details.</p>
            </paragraphs>

            <paragraphs>
                <title>Display Verbatim</title>
                <p>The <tag>cd</tag> tag, by analogy with the <tag>md</tag> tag for displayed mathematics, may be used to display one or more lines of verbatim text (such as a series of commands), possibly structured with the <tag>cline</tag> tag.  See <xref ref="overview-verbatim-literal" /> for an introduction and <xref ref="topic-verbatim-literal" /> for precise details.</p>

                <p>This should not be confused with the <tag>pre</tag>, <tag>console</tag>, or <tag>program</tag> tags, which have slightly different uses, and all of which must be used <em>outside</em> of a paragraph.</p>
            </paragraphs>
        </subsection>

        <subsection xml:id="topic-character-elements">
            <title>Characters in Paragraphs</title>

            <!-- Unambiguous:  ~, !, @, #, $, %, ^, (, ), _, =, +, [, ], {, }, \, |, :, ;, and , -->
            <!-- Exceptional:  <, & -->

            <!-- fragment names, and their elements, from schema source
            dash-character:       nbsp, ndash, mdash
            xml-character:        ampersand, less, greater
            latex-character:      hash, dollar, percent, tilde, underscore,
                                  circumflex, backslash, lbrace, rbrace
            delimiter-character:  lsq, rsq, rq, lq
            exotic-character:     ellipsis, asterisk, backtick, slash, midpoint,
                                  swungdash, permille, pilcrow, section-mark,
                                  copyright, registered, trademark
            generator:            today, timeofday, tex, latex, pretext, webwork,
                                  eg, ie, circa, etc
            arithmetic-character: minus, solidus, times, obelus, plusminus
                                  degree, prime, dblprime
            siunit:               (deferred to its own section)
            music-character:      (deferred to its own section)
            -->

            <introduction>
                <p>Some keyboard characters are unambiguous, for example, the percent sign, %.  Other keyboard characters are poor replacements for several different characters.  Is a slash, /, being used to separate information/ideas, or is it a <term>solidus</term> being used to form a fraction such as 3<solidus/>4?  Other characters, such as per-mille, <permille/>, are not present on keyboards at all.  We organize this section according to these types of distinctions.</p>
            </introduction>

            <subsubsection>
                <title>Unambiguous Keyboard Characters</title>

                <p>The keyboard characters `, ~, !, @, #, $, %, ^, *, (, ), _, =, +, [, ], {, }, \, |, :, ;, and , are entered as-is and are only rendered one way.  Easy.</p>

                <p>Of course, the fifty-two Latin letters, and ten decimal digits, are also in this category.  If you have an international, or bilingual, or country-specific keyboard, then common accented versions of Latin letters (as used in Europe and the Western Hemisphere) may also be used directly from your keyboard.</p>
            </subsubsection>

            <subsubsection xml:id="topic-exceptional-characters">
                <title>Exceptional Keyboard Characters</title>
                <idx>exceptional characters</idx>
                <idx><h>characters</h><h>exceptional</h></idx>
                <idx>CDATA</idx>

                <p><init>XML</init> is a <term>markup language</term>, which in part means that some keyboard characters are co-opted to signal the start of markup.  For <init>XML</init> this character is the less-than symbol, &lt;.  It signals the start of a <term>tag</term>, and then an opening tag ends with a greater-than symbol, &gt;, while a closing tag has an extra / right after the &lt;.</p>

                <p>This begs the question:  if a &lt; is used in our <init>XML</init> source to signal the start of a tag, then how did we get one to appear here in this sentence without mistakenly starting a tag?  Once a markup language gives some characters special meanings, then there needs to be an <term>escape character</term>.  For <init>XML</init> the escape character is the ampersand, &amp;.  So to author the &lt; and &gt; symbols, we type <term>escaped</term> versions: <c>&amp;lt;</c> and <c>&amp;gt;</c>.</p>

                <p>I hear you now say, <q>But now we just took the &amp; out of the running and gave it a special meaning.  How do we get an ampersand?</q>  Easy, use the escaped version:  <c>&amp;amp;</c>.</p>

                <p>So the short answer is: never, ever type the &lt; or &amp; keyboard characters in isolation.  The very beginning of the processing of <init>XML</init> (<ie/> <pretext/>) will fail fatally on these characters.  Instead, always use the sequences <c>&amp;lt;</c> and  <c>&amp;amp;</c> and then very early the <init>XML</init> processing will convert them to characters, <em>without</em> interpreting them as signals for aspects of the markup.</p>

                <p>It does not seem necessary to author &gt; as <c>&amp;gt;</c>, though there is no real harm in doing so.  The two other characters with escaped versions are the single and double quotes, <c>&apos;</c> and <c>&quot;</c>, which have escaped version of <c>&amp;apos;</c> and <c>&amp;quot;</c> (respectively).  These are only necessary for attribute values, and we have been careful to design <pretext/> so that they are not necessary.</p>

                <remark>
                    <title>Excessive Escaped Characters</title>

                    <p>If you know another markup language, such as <tex/>, <latex/>, Markdown, <init>JSON</init>, or <init>PGML</init>, think about how many characters have been given special meanings, and the subsequent necessity to use escaped versions.  And if you want to write about computer languages, realize that each such language also gives certain keyboard characters special meanings.</p>

                    <p><init>XML</init> only has five exceptional characters, and in your daily use, <pretext/> really only requires you to be aware of two, the minimum necessary for a markup language.</p>
                </remark>

                <note>
                    <title>A <init>CDATA</init> Section is Never Necessary</title>

                    <p>We hate to mention it, but sooner or later, we need to have an uncomfortable discussion about the misunderstood <init>CDATA</init> section, and risk confusing the rest of this subsubsection.  And this is the place.  But you can come back later, if you wish.</p>

                    <p>You will read other places about very special markup known as a <init>CDATA</init> section.  The name stands for <term>character data</term>, which means <q>all characters, no markup</q>.  Think of it as switching off the <init>XML</init> processing for a while, so in particular, <c>&amp;</c>, <c>&lt;</c>, <c>&gt;</c> no longer have any special meaning at all.  That <em>could</em> be nice, but realize that now there is no opportunity to have any markup present using <init>XML</init> syntax, since it is ineffective.</p>

                    <p><em>A <init>CDATA</init> section is always a convenience and is never necessary.</em></p>

                    <p>When would it be convenient?  Maybe you have some <latex/> inside an <tag>md</tag> with a large matrix that uses lots of ampersands to separate the entries.  Inside a <init>CDATA</init> you can author it with bare &amp; rather than a plethora of <c>&amp;amp;</c> or <c>\amp</c>.  But you lose the ability to include an <tag>xref</tag> in that <init>CDATA</init>, so you need to be surgical about its scope.  Perhaps a Tikz diagram in a <tag>latex-image</tag> has a multitude of <c>&lt;-&gt;</c> or a chunk of Sage code in an <tag>input</tag> has a lot of finitely-generated algebraic structures authored as <c>R.&lt;x&gt; = ...</c> (which is not even legal Python syntax either!).  These places where there is little, or no, markup could be <em>convenient</em> places to use a <init>CDATA</init>.  Be sure to read the warning at <xref ref="deprecation-fixer-cdata"/> in <xref ref="processing-updating-source"/> before you go all-in.</p>
                </note>
            </subsubsection>

            <subsubsection>
                <title>Ambiguous Keyboard Characters</title>

                <p>Some keyboard characters have a primary interpretation, and are imitations of other typographic characters.  Your output will be of higher quality if you understand these distinctions and employ the proper variant.</p>

                <!-- / forward slash, solidus        -->
                <!-- ' apostrophe, rsq               -->
                <!-- ` backtick,  lsq                -->
                <!-- . period, sentence/abbreviation -->
                <!-- - hyphen, see ...........       -->
                <!-- ~ tilde, swungdash              -->
                <!-- " do not use, lq, rq            -->

                <table xml:id="table-ambiguous-characters">
                    <title>Ambiguous Keyboard Characters and Alternatives</title>
                    <tabular>
                        <row bottom="medium">
                            <cell>Keyboard</cell>
                            <cell>Primary</cell>
                            <cell>Notes</cell>
                        </row>
                        <row>
                            <cell><c>/</c></cell>
                            <cell>(forward) slash</cell>
                            <cell><tage>solidus</tage> is a fraction bar, <solidus/></cell>
                        </row>
                        <row>
                            <cell><c>'</c></cell>
                            <cell>apostrophe</cell>
                            <cell><tage>rsq</tage> is a right single quote, <rsq/></cell>
                        </row>
                        <row>
                            <cell><c>`</c></cell>
                            <cell>backtick</cell>
                            <cell><tage>lsq</tage> is a right single quote, <lsq/></cell>
                        </row>
                        <row>
                            <cell><c>.</c></cell>
                            <cell>period</cell>
                            <cell>abbreviations <em>and</em> end-of-sentence</cell>
                        </row>
                        <row>
                            <cell><c>-</c></cell>
                            <cell>hyphen</cell>
                            <cell>See dashes, and arithmetic</cell>
                        </row>
                        <row>
                            <cell><c>"</c></cell>
                            <cell>upright double quote</cell>
                            <cell><tage>lq</tage> is <lq/>, <tage>rq</tage> is <rq/></cell>
                        </row>
                    </tabular>
                </table>

                <p>Note that the four quote marks (left/right, single/double) are meant for the actual characters.  Always use the grouping constructions described above (<ie/> <tag>q</tag> and <tag>sq</tag>) when grouping a phrase with quote marks.  Note, too, that there is never a good reason to use the keyboard quote character (<c>"</c>) unless you are creating some sort of verbatim text, such as a program listing or describing literal keyboard input.</p>

                <p>When creating print or <init>PDF</init> via <latex/> a period may get different trailing space depending on location and context, generally being its use in abbreviations or to conclude a sentence.  We do not yet have this dual-use under control.</p>
            </subsubsection>

            <subsubsection>
                <title>Extraordinary Characters</title>

                <p>Some characters or symbols are typically not available on a keyboard, so we provide empty elements.  Many of these may be entered directly into your source as Unicode characters, and they will do well in your <init>HTML</init> output.  However, these may fail entirely if you create print or <init>PDF</init> via <latex/> using the <c>pdflatex</c> engine.  Furthermore, even for <init>HTML</init> output there may be several Unicode characters that are very similar.</p>

                <p>So again, for the best quality output be aware of these elements and use them.  Please suggest additions if you do not find what you need and are resorting to Unicode characters.</p>

                <paragraphs>
                    <title><tage>ellipsis</tage>, <ellipsis />, ellipsis</title>
                    <p>Typically three low dots with no intervening space, to indicate a continuation.  This will always perform better than three consecutive periods.</p>
                </paragraphs>

                <paragraphs>
                    <title><tage>midpoint</tage>, <midpoint />, midpoint</title>
                    <p>A small centered (vertically) dot, which can be used to separate pieces of information, especially in displayed text (<ie /> outside of paragraphs).  Not to be confused with a bullet preceding a list item, or multiplication in mathematics.</p>
                </paragraphs>

                <paragraphs>
                    <title><tage>swungdash</tage>, <swungdash />, swung dash</title>
                    <p>Another decorative separator, not to be confused with the keyboard tilde character since it is wider and thicker.</p>
                </paragraphs>

                <paragraphs>
                    <title><tage>permille</tage>, <permille />, per mille</title>
                    <p>Like per cent, but now a number expressed as its product with <m>1000</m> (rather than with <m>100</m>).</p>
                </paragraphs>

                <paragraphs>
                    <title><tage>pilcrow</tage>, <pilcrow />, pilcrow, paragraph mark</title>
                    <p>Mark used historically to indicate the start of an internal paragraph, and in a more modern use, to indicate a permalink.</p>
                </paragraphs>

                <paragraphs>
                    <title><tage>section-mark</tage>, <section-mark />, section mark</title>
                    <p>Used to prefix the number of a section, or other division.  (So the word section is being used generically here.)</p>
                </paragraphs>

                <paragraphs>
                    <title><tage>copyright</tage>, <copyright />, copyright</title>
                    <p>The symbol used in publishing, legal, or business contexts.  For a <pretext /> project, copyright information can be specified within the <tag>colophon</tag> portion of the <tag>frontmatter</tag>.</p>
                </paragraphs>

                <paragraphs>
                    <title><tage>trademark</tage>, <trademark />, trademark</title>
                    <p>The symbol used in legal or business contexts.</p>
                </paragraphs>

                <paragraphs>
                    <title><tage>registered</tage>, <registered />, registered</title>
                    <p>The symbol used in legal or business contexts.</p>
                </paragraphs>

                <table>
                    <title>Extraordinary Characters and Their Empty Elements</title>
                    <tabular>
                        <row bottom="medium">
                            <cell>Character</cell>
                            <cell>Name</cell>
                            <cell>Element</cell>
                        </row>
                        <row>
                            <cell><ellipsis/></cell>
                            <cell>ellipsis</cell>
                            <cell><tage>ellipsis</tage></cell>
                        </row>

                        <row>
                            <cell><midpoint/></cell>
                            <cell>midpoint</cell>
                            <cell><tage>midpoint</tage></cell>
                        </row>

                        <row>
                            <cell><swungdash/></cell>
                            <cell>swung dash</cell>
                            <cell><tage>swungdash</tage></cell>
                        </row>

                        <row>
                            <cell><permille/></cell>
                            <cell>per-mille</cell>
                            <cell><tage>permille</tage></cell>
                        </row>

                        <row>
                            <cell><pilcrow/></cell>
                            <cell>pilcrow</cell>
                            <cell><tage>pilcrow</tage></cell>
                        </row>

                        <row>
                            <cell><section-mark/></cell>
                            <cell>section-mark</cell>
                            <cell><tage>section-mark</tage></cell>
                        </row>

                        <row>
                            <cell><copyright/></cell>
                            <cell>copyright</cell>
                            <cell><tage>copyright</tage></cell>
                        </row>

                        <row>
                            <cell><trademark/></cell>
                            <cell>trademark</cell>
                            <cell><tage>trademark</tage></cell>
                        </row>

                        <row>
                            <cell><registered/></cell>
                            <cell>registered</cell>
                            <cell><tage>registered</tage></cell>
                        </row>
                    </tabular>
                </table>
            </subsubsection>

            <subsubsection>
                <title>Accented Characters</title>

                <p>The second 128 Unicode characters (hex <c>80</c> to <c>FF</c>) contain many of the most frequently-used accented characters in Western languages, along with niceties such as the German <foreign>eszett</foreign>, &#xDF;, or the Scandinavian <foreign>æsc</foreign>, &#xE6;, an a-e ligature.  Like the fifty-two Latin letters (part of the <em>first</em> 128 Unicode characters), these may be used as-is.  They may be present on your keyboard, or you may need to learn keyboard shortcuts or specifics of your operating system to enter them as Unicode characters.  In a pinch, you can often cut-and-paste a few characters from web pages.</p>

                <p>This table is indexed by the Unicode number, in hexadecimal notation.  The first 32 of the 128 (<c>U+0080</c><ndash/><c>U+009F</c>) are control codes and <c>U+00A0</c> is a non-breaking space, so is invisible, while <c>U+00AD</c> is a soft hyphen (which we have not implemented and so is excluded).</p>

                <!-- ex &#x0080; - &#x009F; controls -->
                <!-- ex &#x00A0; non-breaking space  -->
                <!-- ex &#x00AD; soft hyphen         -->
                <table>
                    <title>Latin-1 Supplement, Unicode <c>U+00A0</c><ndash/><c>U+00FF</c></title>
                <tabular>
                    <row><cell />
                    <cell><c>0</c></cell>
                    <cell><c>1</c></cell>
                    <cell><c>2</c></cell>
                    <cell><c>3</c></cell>
                    <cell><c>4</c></cell>
                    <cell><c>5</c></cell>
                    <cell><c>6</c></cell>
                    <cell><c>7</c></cell>
                    <cell><c>8</c></cell>
                    <cell><c>9</c></cell>
                    <cell><c>A</c></cell>
                    <cell><c>B</c></cell>
                    <cell><c>C</c></cell>
                    <cell><c>D</c></cell>
                    <cell><c>E</c></cell>
                    <cell><c>F</c></cell></row>
                    <row><cell><c>00A_</c></cell><cell><nbsp /></cell><cell>&#x00A1;</cell><cell>&#x00A2;</cell><cell>&#x00A3;</cell><cell>&#x00A4;</cell><cell>&#x00A5;</cell><cell>&#x00A6;</cell><cell>&#x00A7;</cell>
                                                 <cell>&#x00A8;</cell><cell>&#x00A9;</cell><cell>&#x00AA;</cell><cell>&#x00AB;</cell><cell>&#x00AC;</cell><cell>        </cell><cell>&#x00AE;</cell><cell>&#x00AF;</cell></row>
                    <row><cell><c>00B_</c></cell><cell>&#x00B0;</cell><cell>&#x00B1;</cell><cell>&#x00B2;</cell><cell>&#x00B3;</cell><cell>&#x00B4;</cell><cell>&#x00B5;</cell><cell>&#x00B6;</cell><cell>&#x00B7;</cell>
                                                 <cell>&#x00B8;</cell><cell>&#x00B9;</cell><cell>&#x00BA;</cell><cell>&#x00BB;</cell><cell>&#x00BC;</cell><cell>&#x00BD;</cell><cell>&#x00BE;</cell><cell>&#x00BF;</cell></row>
                    <row><cell><c>00C_</c></cell><cell>&#x00C0;</cell><cell>&#x00C1;</cell><cell>&#x00C2;</cell><cell>&#x00C3;</cell><cell>&#x00C4;</cell><cell>&#x00C5;</cell><cell>&#x00C6;</cell><cell>&#x00C7;</cell>
                                                 <cell>&#x00C8;</cell><cell>&#x00C9;</cell><cell>&#x00CA;</cell><cell>&#x00CB;</cell><cell>&#x00CC;</cell><cell>&#x00CD;</cell><cell>&#x00CE;</cell><cell>&#x00CF;</cell></row>
                    <row><cell><c>00D_</c></cell><cell>&#x00D0;</cell><cell>&#x00D1;</cell><cell>&#x00D2;</cell><cell>&#x00D3;</cell><cell>&#x00D4;</cell><cell>&#x00D5;</cell><cell>&#x00D6;</cell><cell>&#x00D7;</cell>
                                                 <cell>&#x00D8;</cell><cell>&#x00D9;</cell><cell>&#x00DA;</cell><cell>&#x00DB;</cell><cell>&#x00DC;</cell><cell>&#x00DD;</cell><cell>&#x00DE;</cell><cell>&#x00DF;</cell></row>
                    <row><cell><c>00E_</c></cell><cell>&#x00E0;</cell><cell>&#x00E1;</cell><cell>&#x00E2;</cell><cell>&#x00E3;</cell><cell>&#x00E4;</cell><cell>&#x00E5;</cell><cell>&#x00E6;</cell><cell>&#x00E7;</cell>
                                                 <cell>&#x00E8;</cell><cell>&#x00E9;</cell><cell>&#x00EA;</cell><cell>&#x00EB;</cell><cell>&#x00EC;</cell><cell>&#x00ED;</cell><cell>&#x00EE;</cell><cell>&#x00EF;</cell></row>
                    <row><cell><c>00F_</c></cell><cell>&#x00F0;</cell><cell>&#x00F1;</cell><cell>&#x00F2;</cell><cell>&#x00F3;</cell><cell>&#x00F4;</cell><cell>&#x00F5;</cell><cell>&#x00F6;</cell><cell>&#x00F7;</cell>
                                                 <cell>&#x00F8;</cell><cell>&#x00F9;</cell><cell>&#x00FA;</cell><cell>&#x00FB;</cell><cell>&#x00FC;</cell><cell>&#x00FD;</cell><cell>&#x00FE;</cell><cell>&#x00FF;</cell></row>
                    </tabular>
                </table>
            </subsubsection>

            <subsubsection>
                <title>Arithmetic</title>

                <p>If you are writing about technical subjects, then you will want to avail yourself of <pretext/>'s extensive support for mathematics.  Otherwise, you may wish to write <em>really simple</em> arithmetic within sentences without extra formatting.  Notice that there is no provision for preventing line-breaks in the midst of these expressions.</p>

                <p>So you can author (2<times/>6)<obelus/>3+10<minus/>15 = -1, but that is about the limit of the complexity of expressions you should author without using the extensive capabilities designed for <em>mathematics</em>, rather than <em>arithmetic</em>.  Note that the spaces around the equal sign have been supplied in the source, but no spaces have been provided around the operators.  Also, the minus sign and the negative are slightly different because the subtraction uses the <tage>minus</tage> element, while the negative answer uses a plain keyboard hyphen/dash.</p>

                <p>Using the <tag>m</tag> element instead, the above is <m>(2\times 6)\div 3+10-15=-1</m>.  Note the more careful spacing, and the appropriate symbols for subtraction and negation, with no special care in the <latex/> syntax used in the source.</p>

                <p>Note also that the plus sign, <c>+</c> and the equals sign, <c>=</c>, can be provided in text as the unambiguous keyboard characters.</p>

                <p>The <tage>degree</tage>, <tage>prime</tage>, <tage>dblprime</tage> elements support simple coordinates with degrees, minutes, seconds, or temperature, or distance in feet and inches.  <q>We parked the car at 36<degree/>16<prime/>0.83<dblprime/>N, 122<degree/>35<prime/>47.27<dblprime/>W, and since it was 93<degree/>F, we walked 505<prime/>3.6<dblprime/> so we could swim in the bay.</q></p>

                <paragraphs>
                    <title><tage>minus</tage>, <minus/>, minus, subtraction, negation</title>
                    <p>For simple arithmetic expressions in text, this symbol may be used.  Note that the keyboard hyhpen (or dash) might be acceptable for your purposes, but they are different.</p>
                </paragraphs>

                <paragraphs>
                    <title><tage>times</tage>, <times />, times, multiplication</title>
                    <p>For simple arithmetic expressions in text, this symbol may be used.  Or it may be used to specify dimensions, as in <q>I bought a 2<times />4 at the lumber yard.</q></p>
                </paragraphs>

                <paragraphs>
                    <title><tage>solidus</tage>, <solidus />, solidus, virgule, fraction bar</title>
                    <p>For simple arithmetic expressions in text, this symbol may be used to form a fraction.  It should appear to have a significantly shallower slope than the forward slash, /.</p>
                </paragraphs>

                <paragraphs>
                    <title><tage>obelus</tage>, <obelus/>, obelus, division sign</title>
                    <p>For simple arithmetic expressions in text, this symbol may be used to indicate division.</p>
                </paragraphs>

                <paragraphs>
                    <title><tage>plusminus</tage>, <plusminus/>, plus-minus sign</title>
                    <p>For simple arithmetic expressions in text, this symbol may be used to indicate a tolerance or a choice of two values, one the negative of the other.</p>
                </paragraphs>

                <paragraphs>
                    <title><tage>degree</tage>, <degree/>, degree symbol</title>
                    <p>A raised open circle for temperature or for angles used in coordinates.</p>
                </paragraphs>

                <paragraphs>
                    <title><tage>prime</tage>, <prime/>, prime symbol</title>
                    <p>A straight mark that is placed like an exponent.  For use in coordinates or statements of linear measure in feet and inches.  Not an apostrophe, and not mathematics (like, say, not to denote a derivative).</p>
                </paragraphs>

                <paragraphs>
                    <title><tage>dblprime</tage>, <dblprime/>, double prime symbol</title>
                    <p>Two straight marks that are placed like an exponent.  For use in coordinates or statements of linear measure in feet and inches.  Not an apostrophe, and not mathematics (like, say, not to denote a second derivative).</p>
                </paragraphs>

                <!--
                http://gcp.fcaglp.unlp.edu.ar/_media/integrantes:psantamaria:latex:textcomp.pdf
                + regular
                - negative
                - subtract \textminus
                <times/>  \texttimes
                <solidus/> \textfractionsolidus
                <division/> F7 \textdiv
                <plusminus/> b1 \textpm
                -->
            </subsubsection>

            <subsubsection xml:id="topics-separators">
                <title>Separators</title>

                <paragraphs>
                    <title><tage>ndash</tage>, <ndash />, en dash</title>
                    <p>A dash, the width of a lowercase <sq>n</sq>, or exactly half the width of the em dash.  This is typically used to express a range, such as <c>1955&lt;ndash /&gt;1975</c>, with no intervening spaces.  It is often expressed as two hyphens when typed.  Bringhurst suggests an ndash surrounded by spaces <ndash /> thusly <ndash /> when setting off phrases.</p>
                </paragraphs>

                <paragraphs>
                    <title><tage>mdash</tage>, <mdash />, em dash</title>
                    <p>A dash, the width of a lowercase <sq>m</sq>, or twice the width of the en dash.  This is typically used to express a secondary part of a phrase, much like the use of a semi-colon or parentheses.</p>

                    <p>Style guides suggest that there should be no spaces, before or after, an em dash, while some allow for a <q>thin</q> space on either side.  You should always leave no space around an <tage>mdash</tage> element in your <pretext/> source.  Then a publication file entry can be used to elect the automatic addition of a thin space, should your publisher so desire.  See <xref ref="common-emdash-width-options"/> for the syntax of the publisher file entry.</p>
                </paragraphs>

                <paragraphs>
                    <title><tage>nbsp</tage>, non-breaking space</title>
                    <p>A space, but which ties two words together and discourages a line break when formatted, such as <c>Summer&lt;nbsp /&gt;1967</c>.  This can also be used to discourage a period in an abbreviation from being interpreted as the end of a sentence, such as <c>C.R.&lt;nbsp /&gt;Darwin</c>.</p>
                </paragraphs>

                <paragraphs>
                    <title><tage>midpoint</tage>, <tage>swungdash</tage>, <midpoint/>, <swungdash/>, midpoint, swung dash</title>
                    <p>These can be used<midpoint/>as more decorative<swungdash/>separators.</p>
                </paragraphs>
            </subsubsection>
        </subsection>

        <subsection>
            <title>Keyboard Keys</title>
            <idx>keyboard keys</idx>
            <idx><h>keys</h><h>keyboard</h></idx>

            <p>If you are writing a software manual, or writing about how to use a calculator as part of a science textbook, then you might want to make it very clear which keys to press on a keyboard.  The <tag>kbd</tag> element can hold content like <c>Z</c> or <c>Caps Lock</c> and your output will have a very nice looking keyboard key with the desired label.  For example, <kbd>Z</kbd> and <kbd>Caps Lock</kbd>.  For keys labeled with graphics, like the arrow keys, instead of content, provide the <attr>name</attr> attribute with a value from the following table.  Request additions to this table if you are using this feature (2019-11-22).</p>

            <table>
                <title>Keyboard Keys Specified by <attr>name</attr> Attribute</title>
                <!-- IMPORTANT: long names in the last column to keep table-width under control -->
                <tabular>
                    <row>
                        <cell><c>left</c></cell>
                        <cell><kbd name="left"/></cell>
                        <cell><c>right</c></cell>
                        <cell><kbd name="right"/></cell>
                        <cell><c>up</c></cell>
                        <cell><kbd name="up"/></cell>
                        <cell><c>down</c></cell>
                        <cell><kbd name="down"/></cell>
                    </row>
                    <row>
                        <cell><c>enter</c></cell>
                        <cell><kbd name="enter"/></cell>
                        <cell><c>shift</c></cell>
                        <cell><kbd name="shift"/></cell>
                        <cell><c>solidus</c></cell>
                        <cell><kbd name="solidus"/></cell>
                        <cell></cell>
                        <cell></cell>
                    </row>
                    <row>
                        <cell><c>plus</c></cell>
                        <cell><kbd name="plus"/></cell>
                        <cell><c>minus</c></cell>
                        <cell><kbd name="minus"/></cell>
                        <cell><c>times</c></cell>
                        <cell><kbd name="times"/></cell>
                        <cell><c>left-paren</c></cell>
                        <cell><kbd name="left-paren"/></cell>
                    </row>
                    <row>
                        <cell><c>obelus</c></cell>
                        <cell><kbd name="obelus"/></cell>
                        <cell><c>squared</c></cell>
                        <cell><kbd name="squared"/></cell>
                        <cell><c>inverse</c></cell>
                        <cell><kbd name="inverse"/></cell>
                        <cell><c>right-paren</c></cell>
                        <cell><kbd name="right-paren"/></cell>
                    </row>
                </tabular>
            </table>
        </subsection>

        <subsection>
            <title>User-Interface Icons</title>

            <p>When writing about software, you may wish to call attention to icons used in the interface.  Similar to graphical keyboard keys, use the <tag>icon</tag> element with a <attr>name</attr> attribute with a value from the following table.  See <xref ref="latex-icons"/> for information about using icons as part of <latex/> output.</p>

            <!-- Keep table skinny with short names left and long names right -->
            <table>
                <title>User-Interface Icons available with <tage>icon</tage></title>

                <tabular>
                    <col/>
                    <col halign="center" right="medium"/>
                    <col/>
                    <col halign="center" right="medium"/>
                    <col/>
                    <col halign="center"/>
                    <row bottom="medium">
                        <cell>Name</cell>
                        <cell>Icon</cell>
                        <cell>Name</cell>
                        <cell>Icon</cell>
                        <cell>Name</cell>
                        <cell>Icon</cell>
                    </row>
                    <row>
                        <cell><c>file-save</c></cell>
                        <cell><icon name="file-save"/></cell>
                        <cell><c>arrow-left</c></cell>
                        <cell><icon name="arrow-left"/></cell>
                        <cell><c>media-rewind</c></cell>
                        <cell><icon name="media-rewind"/></cell>
                    </row>
                    <row>
                        <cell><c>arrow-up</c></cell>
                        <cell><icon name="arrow-up"/></cell>
                        <cell><c>arrow-right</c></cell>
                        <cell><icon name="arrow-right"/></cell>
                        <cell><c>media-fast-forward</c></cell>
                        <cell><icon name="media-fast-forward"/></cell>
                    </row>
                    <row>
                        <cell><c>menu</c></cell>
                        <cell><icon name="menu"/></cell>
                        <cell><c>arrow-down</c></cell>
                        <cell><icon name="arrow-down"/></cell>
                        <cell><c>media-skip-to-start</c></cell>
                        <cell><icon name="media-skip-to-start"/></cell>
                    </row>
                    <row>
                        <cell><c>wrench</c></cell>
                        <cell><icon name="wrench"/></cell>
                        <cell><c>media-stop</c></cell>
                        <cell><icon name="media-stop"/></cell>
                        <cell><c>media-pause</c></cell>
                        <cell><icon name="media-pause"/></cell>
                    </row>
                    <row>
                        <cell><c>gear</c></cell>
                        <cell><icon name="gear"/></cell>
                        <cell><c>media-play</c></cell>
                        <cell><icon name="media-play"/></cell>
                        <cell><c>media-skip-to-end</c></cell>
                        <cell><icon name="media-skip-to-end"/></cell>
                    </row>
                    <row>
                        <cell><c>power</c></cell>
                        <cell><icon name="power"/></cell>
                        <cell/>
                        <cell/>
                        <cell/>
                        <cell/>
                    </row>
                   <!-- <cell><c></c></cell><cell><icon name=""/></cell> -->
                   <!-- Keep rows full (w/ empty cells) to please HTML validator -->
                </tabular>
             </table>

        </subsection>

        <subsection>
            <title>Other Markup in Paragraphs</title>

                <!-- <title>Generators</title> -->

            <paragraphs>
                <title><tage>today</tage>, <tage>timeofday</tage>, <today />, <timeofday /></title>
                <p>Values at the time of <init>XML</init> processing.  Useful for marking drafts or other frequently revised material such as online versions.</p>
            </paragraphs>

            <paragraphs>
                <title><tage>tex</tage>, <tage>latex</tage>, <tage>xetex</tage>, <tage>xelatex</tage>, <tage>pretext</tage>, <tage>webwork</tage>, <tex />, <latex />, <xetex/>, <xelatex/>, <pretext />, <webwork/></title>
                <p>Conveniences for frequently-mentioned accessories to <pretext />.</p>
            </paragraphs>

            <paragraphs>
                <title><tage>fillin</tage>, <fillin characters="5" />, fill-in blank</title>
                <p>A <q>fill in the blank</q> blank.  May be used in normal text or within mathematics contexts.  The <attr>characters</attr> attribute may be used to hint at how long the line will be.  Here we have set <attr>characters</attr> to the value <c>5</c>.</p>

                <p>If used inside math, a <attr>fill</attr> attribute (in lieu of <attr>characters</attr>) may be some string of math that will be used to determine width, height, and depth of the blank. In text, the default value of <c>10</c> is used for <attr>characters</attr>. In math, the default value of <c>XXX</c> is used for <attr>fill</attr>.</p>

                <p>If used in normal text, a <attr>rows</attr> and/or <attr>cols</attr> attribute may be present, each a positive integer. When either is greater than one, there will be an indication that the expected content to fill in the blank is a <attr>rows</attr><nbsp/><times/><nbsp/><attr>cols</attr> array.</p>
            </paragraphs>

            <paragraphs>
                <title><tage>ie</tage>, <tage>eg</tage>, <tage>ca</tage>, <tage>vs</tage>, <tage>etc</tage>, <ie />, <eg />, <ca />, <vs />, <etc /></title>
                <p>A small collection of frequently-used Latin abbreviations, with attempts to handle the tricky periods wisely in <latex /> output.  Strictly speaking <bc /> is not Latin, but we include it for completeness.  Tags are always lowercase, no punctuation, usually two letters.</p>
                <tabular>
                    <row><cell>Tag</cell><cell>Realization</cell><cell>Meaning</cell></row>
                    <!--  -->
                    <row><cell><c>ad</c></cell>    <cell><ad/>    </cell><cell><foreign>anno Domini</foreign>, in the year of the Lord</cell>      </row>
                    <row><cell><c>am</c></cell>    <cell><am/>    </cell><cell><foreign>ante meridiem</foreign>, before midday</cell>              </row>
                    <row><cell><c>bc</c></cell>    <cell><bc/>    </cell><cell>English, before Christ</cell>                                       </row>
                    <row><cell><c>ca</c></cell>    <cell><ca/>    </cell><cell><foreign>circa</foreign>, about</cell>                              </row>
                    <row><cell><c>eg</c></cell>    <cell><eg/>    </cell><cell><foreign>exempli gratia</foreign>, for example</cell>               </row>
                    <row><cell><c>etal</c></cell>  <cell><etal/>  </cell><cell><foreign>et alia</foreign>, and others</cell>                       </row>
                    <row><cell><c>etc</c></cell>   <cell><etc/>   </cell><cell><foreign>et caetera</foreign>, and the rest</cell>                  </row>
                    <row><cell><c>ie</c></cell>    <cell><ie/>    </cell><cell><foreign>id est</foreign>, in other words</cell>                    </row>
                    <row><cell><c>nb</c></cell>    <cell><nb/>    </cell><cell><foreign>nota bene</foreign>, note well</cell>                      </row>
                    <row><cell><c>pm</c></cell>    <cell><pm/>    </cell><cell><foreign>post meridiem</foreign>, after midday</cell>               </row>
                    <row><cell><c>ps</c></cell>    <cell><ps/>    </cell><cell><foreign>post scriptum</foreign>, after what has been written</cell></row>
                    <row><cell><c>vs</c></cell>    <cell><vs/>    </cell><cell><foreign>versus</foreign>, against</cell>                           </row>
                    <row><cell><c>viz</c></cell>   <cell><viz/>   </cell><cell><foreign>videlicet</foreign>, namely</cell>                         </row>
                </tabular>
            </paragraphs>

            <paragraphs>
                <title>SI Units</title>
                <p><foreign xml:lang="fr-FR">Système international (d'unités)</foreign> (International System of Units) is a system of measurement used universally in science.  <pretext /> has comprehensive support for this system and its notation and abbreviations.  See <xref ref="overview-si-units" /> for a short introduction and <xref ref="topic-units-measure" /> for detailed descriptions of the relevant elements and their use.</p>
            </paragraphs>

            <paragraphs>
                <!-- <title>music notation</title> -->
                <title><doublesharp/>, <sharp/>, <natural/>, <flat/>, <doubleflat/>, music notation</title>
                <p>Notes, chords, and other notation may appear within sentences as part of a discussion.  See <xref ref="topic-music" /> for detailed descriptions of the relevant elements.</p>
            </paragraphs>
        </subsection>

        <conclusion>
            <note xml:id="practice-careful-markup">
                <title>Understand the Importance of Careful Markup</title>

                <p>There is a lot of detailed information in this section.  Much of it is critically important.  If you are new to thinking in terms of markup (rather than <acro>WYSIWYG</acro> tools), it might be overwhelming, a lot to digest, and hard to separate the wheat from the chaff.  Careful here means using the necessary markup, not using it for other purposes different than its intent (<term>tag abuse</term>), planning ahead for different output formats, but not becoming a slave to over-doing it.</p>

                <p>So come back here often for a re-read.  And keep in mind that <pretext /> is designed around principles (<xref ref="list-principles" />), and that it is markup (<xref ref="principle-markup" />) which enables multiple outputs (<xref ref="principle-multiple-outputs" />) and effective and beautiful online versions (<xref ref="principle-web-versions"/>).</p>
            </note>
        </conclusion>
    </section>

    <section xml:id="topic-blocks">
        <title>Blocks</title>
        <idx>blocks</idx>

        <subsection>
            <title>Introduction to Blocks</title>

            <p>A division (<xref ref="overview-structure"/>), that is not further subdivided, is primarly, but not exclusively, composed of paragraphs and <term>blocks</term>.  We document the types of blocks here, even though we do not intend to ever provide a rigorous definition of the term.  Here is a list of characteristics, which is not prescriptive.</p>

            <list>
                <title>Characteristics of a Block</title>

                <ul>
                    <li>Visually set-off from a run of <q>plain</q> paragraphs.  Often earning a number, and ideally provided a title or caption (<xref ref="best-practice-titles"/>).</li>

                    <li>Reflowable lines of text, such as an <tag>example</tag>, <em>or</em> a more rigid, more spatial, more <term>planar</term> object, such as a <tag>figure</tag> or <tag>table</tag>.</li>

                    <li>Usually a child of a division (<xref ref="topic-divisions"/>).  But see just below.</li>

                    <li>Typically a block does not contain another block, except that the more planar ones can appear as part of a more textual one.</li>

                    <li>When numbered, all blocks generally run consecutively.  (In <latex/>-speak, <q>on the same counter.</q>)  Numbering FIGURE-LIKE and PROJECT-LIKE independently is in transition at this writing (2021-07-07).</li>
                    <li>Depending on the output format of your document, some block types may be initially hidden to improve the visual flow.  The reader must click on the heading for the block to reveal its contents.  You can change this behavior by configuring your publication file.  See <xref ref="publication-file-online"/>.  We will make note of the elements that are hidden by default for <init>HTML</init> output.</li>
                </ul>
            </list>

            <p>The following is somewhat general, and we have not extensively cross-referenced to the particular types of blocks, so use the Table of Contents or the Index to learn more specifics.</p>
        </subsection>

        <subsection>
            <title>Isomorphic Blocks</title>

            <p>The structure of a block is described carefully in the schema (<xref ref="schema"/>).  There are approximately forty blocks that are arranged into ten groups, within which they behave identically, except for their displayed names.  An exception is the group of four <q>figure-like</q> items which are very similar, but have differences beyond just their displayed names.  These groupings are defined in the <c>xsl/entities.ent</c> file, which we summarize in the next table.  The category name is taken from the entities file, and the notes are meant to describe the distinctive capabilities of the category.</p>

            <list xml:id="block-summary">
                <title>Summary of Blocks</title>

                <dl>
                    <li>
                        <title>REMARK-LIKE</title>
                        <p><tag>remark</tag>, <tag>convention</tag>, <tag>note</tag>, <tag>observation</tag>, <tag>warning</tag>, <tag>insight</tag></p>
                        <p>The most basic, generic, block.</p>
                    </li>

                    <li>
                        <title>EXAMPLE-LIKE</title>
                        <p><tag>example</tag>, <tag>question</tag>, <tag>problem</tag></p>
                        <p>A worked problem meant as exposition.  It can be structured with <tag>task</tag>, <tag>hint</tag>, <tag>answer</tag>, and <tag>solution</tag> just like an <tag>exercise</tag> or PROJECT-LIKE, but the <tag>hint</tag>, <tag>answer</tag>, and <tag>solution</tag> cannot be electively removed from output, and they do not migrate to collections of solutions elsewhere. Hidden by default for <init>HTML</init> output formats.</p>
                    </li>

                    <li>
                        <title>PROJECT-LIKE</title>
                        <p><tag>project</tag>, <tag>activity</tag>, <tag>exploration</tag>, <tag>investigation</tag></p>
                        <p>These are similar to an <tag>exercise</tag>, but the name suggests a slightly different undertaking, and they cannot be placed in an <tag>exercises</tag> division.  The current default is that they are numbered independently from other blocks, but this is planned to switch to elective behavior.  The <tag>hint</tag>, <tag>answer</tag>, and <tag>solution</tag> behave more like those for an <tag>exercise</tag> and can be removed from output, and can migrate to collections of solutions.</p>
                    </li>

                    <li>
                        <title>FIGURE-LIKE</title>
                        <p><tag>figure</tag>, <tag>table</tag>, <tag>listing</tag>, <tag>list</tag></p>
                        <p>An object that is a container for other atomic objects, which are typically somewhat rigid (not reflowable) or two-dimensional.  Typically with a number, and provided with a title or caption.  But each is slightly different in what it can contain and how it is rendered.  A <tag>table</tag> can only hold a <tag>tabular</tag>, while a <tag>listing</tag> is meant for <tag>program</tag> and <tag>console</tag>.  A <tag>list</tag> is not the list itself, but a container for one of the three possible lists (see <xref ref="topic-lists"/> and especially <xref ref="topic-named-list"/>).  A <tag>figure</tag> is the most liberal, allowing a wide variety of contents, with <tag>image</tag> being the prototypical example.  These are not designed with the expectation that they can be renamed.</p>
                    </li>

                    <li>
                        <title>THEOREM-LIKE</title>
                        <p><tag>theorem</tag>, <tag>corollary</tag>, <tag>lemma</tag>, <tag>algorithm</tag>, <tag>proposition</tag>, <tag>claim</tag>, <tag>fact</tag>, <tag>identity</tag></p>
                        <p>Mathematical results, which can have an (optional) <tag>proof</tag>.  Proofs are hidden by default in <init>HTML</init> output.</p>
                    </li>

                    <li>
                        <title>AXIOM-LIKE</title>
                        <p><tag>axiom</tag>, <tag>conjecture</tag>, <tag>principle</tag>, <tag>heuristic</tag>, <tag>hypothesis</tag>, <tag>assumption</tag></p>
                        <p>A mathematical statement, which does not have a proof.</p>
                    </li>

                    <li>
                        <title>DEFINITION-LIKE</title>
                        <p><tag>definition</tag></p>
                        <p>A definition of a (mathematical) object.</p>
                    </li>

                    <li>
                        <title>ASIDE-LIKE</title>
                        <p><tag>aside</tag>, <tag>biographical</tag>, <tag>historical</tag></p>
                        <p>Parenthetical content that is structured beyond what a footnote can contain.</p>
                    </li>

                    <li>
                        <title>COMPUTATION-LIKE</title>
                        <p><tag>computation</tag>, <tag>technology</tag>, <tag>data</tag></p>
                        <p>For descriptions of activities or data for use with computers, calculators, or other devices.</p>
                    </li>

                    <li>
                        <title>GOAL-LIKE</title>
                        <p><tag>objectives</tag>, <tag>outcomes</tag></p>
                        <p>These are structured primarily as lists, and may only appear early (<tag>objectives</tag>) or late (<tag>outcomes</tag>) within a division.</p>
                    </li>

                </dl>
            </list>
        </subsection>

        <subsection>
            <title>Other Blocks</title>

            <p>There are other blocks which can be achieved using just one element.  Examples are <tag>poem</tag> and <tag>assemblage</tag>.  An <tag>exercise</tag> can take on different behaviors, depending on its placement (see <xref ref="topic-exercises"/>).  One such placement is as a child of a division, which we call an <term>inline exercise</term>, and this would be regarded as a block, very similar to a PROJECT-LIKE.  Inline exercises are hidden by default in <init>HTML</init> output.</p>

            <p>A paragraph (<tag>p</tag>) can appear many places and is a primary component of blocks.  But when it is a child of a division, it shares some charateristics with other blocks.  There are a number of peers of a <tag>p</tag> which would then also qualify:  <tag>pre</tag>, <tag>blockquote</tag>, <tag>image</tag>, <tag>video</tag>, <tag>program</tag>, <tag>console</tag>, and <tag>tabular</tag>.  None of these can have a title or number, making them less useful, but widening the possibilities for placement.</p>
        </subsection>

        <subsection xml:id="renaming-blocks">
            <title>Renaming Blocks</title>
            <idx>renaming blocks</idx>

            <p>A common desire of authors new to <pretext/> is a new block.  Authors extending <pretext/> to add a new one is not supported, and it is not even straightforward for a <pretext/> developer to provide comprehensive support for a new block.  One of the reasons for multiple versions of blocks, with common behaviors, is that you can appropriate one for use with your project and give it a new name.  So for example, a biology textbook might want to use <tag>activity</tag> for a laboratory, but rename it to <q>Laboratory</q>.   Of course, this means you will forego having any <q>Activity</q> in your book.  (But if you <em>are the first</em> to write a biology textbook in <pretext/> perhaps you should talk to us about a real <tag>laboratory</tag> element that behaves well for all the physical and biological sciences!)  Here is the procedure:<ol>
                <li>Choose a block from <xref ref="block-summary"/> that has behavior similar to your intended use, and which you do not forsee using as-is in your project.</li>

                <li>In the <tag>docinfo</tag> section use a <tag>rename</tag> element.  The content should be the new name (<q>Laboratory</q> above), while the <attr>element</attr> attribute should be the name of the element renamed (<c>activity</c> above).</li>

                <li>The <attr>xml:lang</attr> attribute should be used to specify a value of the code for use with documents authored in languages other than US English.  If absent, the default vslue <c>en-US</c> is used.  Multiple <tag>rename</tag> elements for the same element, in different languages, is supported.</li>
            </ol>So, continuing and extending our example, an author would use<cd>
                <cline>&lt;rename @element="activity" xml:lang="fr-FR"&gt;Laboratoire&lt;/rename&gt;</cline>
            </cd></p>

            <p>The most popular block to rename is <tag>exercise</tag>.  We have exercises inside <tag>exercises</tag> divisions, which we call <term>divisional exercises</term>, and exercises inside divisions, which we call <term>inline exercises</term>.   It is possible to have one of each that have identical numbers.  So in cross-references the former is an <q>Exercise</q>, while the latter is a <q>Checkpoint</q>.  If you only have inline exercises, you might prefer that they be called Exercise rather than Checkpoint.  For the <attr>element</attr> attribute of the <tag>rename</tag> element, use a <term>pseudo-element</term>, in this case <c>inlineexercise</c>.  Other pseudo-elements which can be used to distinguish the various types of exercises are:  <c>divisionexercise</c>, <c>worksheetexercise</c>, and <c>readingquestion</c>.</p>

            <p>Choose the element you rename carefully, trying to match it to the purpose of your content.  It can be useful for other purposes, such as automatic lists (<xref ref="topic-automatic-lists"/>), and you may decide later to use other properties of the element you have chosen.</p>
        </subsection>
    </section>

    <section xml:id="topic-exercises">
        <title>(*) Exercises, Inline and Divisional</title>
        <p></p>
    </section>

    <section xml:id="topic-verbatim-literal">
        <title>Verbatim and Literal Text</title>

        <introduction>

            <p>This section expands on parts of <xref ref="overview-verbatim-literal" />.  For descriptions of more involved uses, such as program listings and console sessions, see <xref ref="topic-program-console"/>.</p>

            <p>The tags described here contain <em>only raw characters</em>.  By that we typically mean the first 128 characters of the <acro>ASCII</acro> code.  Unicode characters are likely to migrate to HTML output just fine, but results for <latex /> output will be variable.  The restriction to character data has two consequences.  First, any markup mistakenly included will have its content silently ignored and dropped.  Second, you need to observe the rules on exceptional characters and escaped characters for <init>XML</init> for literal text, which are mercifully simple.</p>

            <blockquote>
                <p>In your source, use <c>&amp;amp;</c> for an &amp;, use <c>&amp;lt;</c> for &lt;, and optionally use <c>&amp;gt;</c> for &gt;.  Otherwise, every other <acro>ASCII</acro> character will render faithfully across all possible formats.</p>
            </blockquote>

            <p>See <xref ref="topic-exceptional-characters"/> for more detail and explanation.</p>
        </introduction>

        <subsection xml:id="short-verbatim-text">
            <title>Short, Inline, Verbatim Text</title>
            <idx>verbatim text</idx>
            <idx>literal text</idx>

            <p>The <tag>c</tag> tag is a mnemonic for <q>code</q>, but is really meant to be any chunk of literal characters that you want to emphasise that way.  So a <q>typewriter</q> font of fixed-width characters would be a typical presentation.  It is meant for use within a sentence or caption (<q>inline</q>) so its use is limited to those situations, and others that are similar, such as a title or a cell of a table.  Typically these pieces of text do not hyphenate words, and so can lead to spillover into a right margin.  In these situations, consider options below for longer pieces of text.</p>
        </subsection>

        <subsection xml:id="long-verbatim-text">
            <title>Longer, Inline, Verbatim Text</title>

            <p>For longer pieces of verbatim text, use the <tag>cd</tag> tag, which is short for <q>code display</q>, analogous to the <tag>md</tag> for mathematics.  It is used within sentences of a paragraph and will be presented with a vertical break above and below, but without interrupting the paragraph.  Because of the display presentation, it cannot be used other places, such as a <tag>title</tag>, where a vertical gap is not appropriate.  All of the previous discussion about exceptional characters applies for this tag.</p>

            <p>You have two options in use.  You may author inline with the rest of a sentence, with no extra newlines or whitespace before, after, or within the content.  The result will be a single displayed line.</p>

            <p>Or you may structure the content using one, or more, of the <tag>cline</tag> tag, which is meant to be similar to the <tag>line</tag> tag used elsewhere.  You should still take care to not place any extra whitespace before or after the <tag>cd</tag> element, but in between the <tag>cline</tag> you may use as much visual formatting of your source as you wish, especially if you like your source to mirror your output.</p>
        </subsection>

        <subsection xml:id="block-verbatim-text">
            <title>Blocks of Verbatim Text</title>

            <p>If you want to isolate large chunks of verbatim text outside of paragraphs, the <tag>pre</tag> tag is the one to use.  It can be used as a peer of paragraphs (and other structures) as a child of a division, or it can be placed into a <tag>listing</tag> to receive a caption, title and number.</p>

            <p>You can structure the contents with <tag>cline</tag> in exactly the same manner as for <tag>cd</tag>.  But you may find this tedious.  Instead, you can make the content of <tag>pre</tag> a sequence of lines separated by newlines.  So that you can preserve the indentation of your source, the line closest to the left margin is taken to actually be the left margin, and a corresponding amount of leading whitespace will be removed from every line.  This will work well if you recognize two caveats.  First, results will be unpredictable if you mix spaces and tabs for indentation.  Sticking with spaces is best.  Second, if your first characters of content immediately follow the <tag>pre</tag> tag then there is no leading whitespace and it is as if that line is already at the left margin.  Then subsequent indentation may seem too severe to you.</p>

            <p>As previously mentioned, <xref ref="topic-program-console"/> discusses the <tag>console</tag> and <tag>program</tag> tags which are more specific, and hence more capable.  Review the possibilities before you decide between <tag>pre</tag>, <tag>console</tag>, and <tag>program</tag>.</p>
        </subsection>
    </section>

    <section xml:id="topic-cross-referencing">
        <title>Cross-References and Citations</title>
        <idx>cross-reference</idx>
        <idx>citation</idx>

        <introduction>
            <p>When you read a novel, you would likely read it cover-to-cover (in one sitting?) and then put it away and never read it again.  But for a textbook, you may read cover-to-cover, but you may also frequently skip around, especially at exam time.  And once read, it might become a reference work for you, since you know it so well.  So years later you might come back looking for something.  Cross-references help with all this, so use them liberally.  Recognize that an index is really just a specialized way to provide an abundance of cross-references.</p>
        </introduction>

        <subsection>
            <title>Creating a Cross-Reference</title>

            <p>It is a two-step process to make a cross-reference.<ol>
                <li>Put an <attr>xml:id</attr> attribute on any element you think you might want to reference later.  Be organized about the values of these attributes, and in particular do not number them, as this has no place in your source, and you do not want to maintain the changing numbers over the life of your project.  See the advice in <xref ref="overview-cross-references" /> about banned characters.  Some elements do not accept this attribute because the element has nothing to identify it (no number, no title).  Typically these are <term>containers</term><idx>container</idx> such as <tag>sidebyside</tag>, <tag>statement</tag>, or <tag>ol</tag>.  In these cases, put the attribute on the closest enclosing element.</li>

                <li>To make a cross reference, you create an <tage>xref</tage> element with a <attr>ref</attr> attribute with the same value as <attr>xml:id</attr> attribute on the element you want to reference.</li>
            </ol>Simple.  It is meant to be, so you can use it liberally.  But we also know authors want some flexibility.</p>

            <note>
                <title>Use <attr>xml:id</attr> Frequently</title>

                <p>Use the <attr>xml:id</attr> attribute liberally, on any object you might want to reference later, and on every division.  It is easier to do as you author and will be very valuable later.  (Trust us on this one.)  Develop a system so you can recall them predictably, but keep them readable.  Don't use numbers, they will change.  Then make frequent cross-references.  They are relatively easy for you and will be incredibly useful for each and every one of your many readers, over and over and over again.</p>
            </note>
        </subsection>

        <subsection>
            <title>Text of a Cross-Reference</title>

            <p>By default, a cross-reference will visually be text like Theorem 5.2.  Depending on your output format, it may have various devices to help you locate that theorem.  Maybe a page number, or it is a hyperlink, or the whole theorem is the content of a knowl.  You can change the default look of cross-references by setting the <attr>text</attr> attribute in <c>docinfo/cross-references</c>.  But you can also change the visual appearance of a cross-reference on a case-by-case basis.  Add a <attr>text</attr> attribute to your <tage>xref</tage> element to override the document-wide setting.  The first column of this table lists the possible attribute values, either document-wide, or on a per-cross-reference basis.  The second column has live cross-references to a section of an earlier chapter (that is far away).  The third column has live cross-references to another section of this chapter (which is close by).  For the fourth column, we have placed content (<q>Extra</q>) into the <tag>xref</tag> element as an override of, or addition to, some of the text for the cross-references of the preceding column.  Study the table and then read some more explanation following.  Note that <c>type-global</c> is the default.</p>

            <table>
                <title>Cross-reference visual text styles</title>
                <tabular>
                    <row bottom="major">
                        <cell><attr>text</attr></cell>
                        <cell>Far Away</cell>
                        <cell>Close By</cell>
                        <cell>With Content</cell>
                    </row>

                    <row>
                        <cell><c>type-local</c></cell>
                        <cell><xref ref="overview-title"     text="type-local" /></cell>
                        <cell><xref ref="topic-divisions" text="type-local" /></cell>
                        <cell><xref ref="topic-divisions" text="type-local">Extra</xref></cell>
                    </row>

                    <row>
                        <cell><c>type-global</c></cell>
                        <cell><xref ref="overview-title"     text="type-global" /></cell>
                        <cell><xref ref="topic-divisions" text="type-global" /></cell>
                        <cell><xref ref="topic-divisions" text="type-global">Extra</xref></cell>
                    </row>

                    <row>
                        <cell><c>type-hybrid</c></cell>
                        <cell><xref ref="overview-title"     text="type-hybrid" /></cell>
                        <cell><xref ref="topic-divisions" text="type-hybrid" /></cell>
                        <cell><xref ref="topic-divisions" text="type-hybrid">Extra</xref></cell>
                    </row>

                    <row>
                        <cell><c>local</c></cell>
                        <cell><xref ref="overview-title"     text="local" /></cell>
                        <cell><xref ref="topic-divisions" text="local" /></cell>
                        <cell><xref ref="topic-divisions" text="local">Extra</xref></cell>
                    </row>

                    <row>
                        <cell><c>global</c></cell>
                        <cell><xref ref="overview-title"     text="global" /></cell>
                        <cell><xref ref="topic-divisions" text="global" /></cell>
                        <cell><xref ref="topic-divisions" text="global">Extra</xref></cell>
                    </row>

                    <row>
                        <cell><c>hybrid</c></cell>
                        <cell><xref ref="overview-title"     text="hybrid" /></cell>
                        <cell><xref ref="topic-divisions" text="hybrid" /></cell>
                        <cell><xref ref="topic-divisions" text="hybrid">Extra</xref></cell>
                    </row>

                    <row>
                        <cell><c>phrase-global</c></cell>
                        <cell><xref ref="overview-title"     text="phrase-global" /></cell>
                        <cell><xref ref="topic-divisions" text="phrase-global" /></cell>
                        <cell>Warning</cell>
                    </row>

                    <row>
                        <cell><c>phrase-hybrid</c></cell>
                        <cell><xref ref="overview-title"     text="phrase-hybrid" /></cell>
                        <cell><xref ref="topic-divisions" text="phrase-hybrid" /></cell>
                        <cell>Warning</cell>
                    </row>

                    <row>
                        <cell><c>title</c></cell>
                        <cell><xref ref="overview-title"     text="title" /></cell>
                        <cell><xref ref="topic-divisions" text="title" /></cell>
                        <cell>Warning</cell>
                    </row>

                    <row>
                        <cell><c>custom</c></cell>
                        <cell></cell>
                        <cell></cell>
                        <cell><xref ref="topic-divisions" text="custom">Extra</xref></cell>
                    </row>
                </tabular>
            </table>

            <p>Note that <c>local/global</c> describes the uniqueness of the number (and is affected by your choice of numbering schemes), while <c>type</c> refers to an automatic prefix of the number.  The text of the type will vary according to the document's language. If a cross-reference and its target are close to each other, a number like 5.8.2.4 might be overkill, when just a 4 would suffice.  A <c>hybrid</c> scheme will use the shorter number whenever it makes sense.  There are two <c>phrase</c> schemes, and it should be clear what text <c>title</c> will produce (though realize there must be a title for the object, possibly a default provided by <pretext />).  Finally, if desired, the text can be customized with any text you like.</p>

            <p>You can also override the text used in a cross-reference link.  You do this by providing content to the <tag>xref</tag> element.  In other words, do not use an empty tag, but put some (simple) text in the element.  Generally, this additional text becomes a prefix of a number or a replacement of a type.  It is better to use these overrides, since in electronic formats, the text of the override will be incorporated into the <q>clickable</q> portion of the resulting link, making a larger item to hit.  Recognize that this extra content will not benefit from automatic internationalization.</p>

            <p>Here are careful examples of providing content inside the <tag>xref</tag> element, where we have provided the content <q>Division</q> in the live examples.  The list is not exhaustive.</p>

            <!-- expand and add links to the Preface to demo default titles -->
            <table xml:id="txo">
                <title>Cross-reference text overrides</title>
                <tabular>
                    <row bottom="major">
                        <cell><attr>text</attr></cell>
                        <cell>Example</cell>
                    </row>
                    <row>
                        <cell><c>'global'</c></cell>
                        <cell><xref ref="topic-cross-referencing" text="global">Division</xref></cell>
                    </row>
                    <row>
                        <cell><c>'type-global'</c></cell>
                        <cell><xref ref="topic-cross-referencing" text="type-global">Division</xref></cell>
                    </row>
                    <row>
                        <cell><c>'custom'</c></cell>
                        <cell><xref ref="topic-cross-referencing" text="custom">Division</xref></cell>
                    </row>
                </tabular>
            </table>
        </subsection>

        <subsection>
            <title>Variations</title>

            <p>There are some variant uses for the <tag>xref</tag> tag.<ul>
                <li>Replace <attr>ref</attr> by <attr>provisional</attr> and give it a value with some simple text like <c>subsection on eagle habitat</c> and you will get reminders that once you write this future subsection you need to link it in right here.  This is just a convenience for authors during the early stages of a writing project (see <xref ref="processing-author-tools" /> for details).</li>

                <li>Replace <attr>ref</attr> by the pair <attr>first</attr> and <attr>last</attr>.  Provide attribute values just as you would for <attr>ref</attr>.  The code will check that the targets have the exact same tag, and that the order is correct.  You will get a link that looks like a range, separated by an en dash.  As a link, only <attr>first</attr> will be used for the linking mechanism (<ie />, one link is generated, not two).  Experiment with <attr>text</attr> and content overrides.</li>

                <li>The <attr>ref</attr> attribute may be a list of <attr>xml:id</attr>, separated by commas or by spaces.  Then you will get back a list of cross-references.  This is meant for a list of citations, producing a look like [5, 9, 22], but it makes no restriction to this case.  Use it generally, but it is unlikely to get any more capable.  If you want a different list, just use multiple <tag>xref</tag> and format as you desire.</li>
            </ul></p>

            <p>You can create many different combinations with the text options and the variants.  Here is one example.  You want to say <xref first="start-here" last="schema" text="global">Chapters</xref>.  As a range you use the variant with two references. You would get <q>Chapter</q> out front automatically with the <c>type-global</c> scheme, but a plural form makes more sense.  So you use that text as an override.  We could use either <c>type-global</c> or <c>global</c> to get the same text, and possibly <c>type-hybrid</c> depending on the place where you built the cross-reference.  So possibly, one of these schemes might be your document-wide setting and you do not need to specify it now.  Here is what we just used:<cd>
                <cline>&lt;xref first="start-here" last="schema" text="global"&gt;Chapters&lt;/xref&gt;</cline>
            </cd></p>

            <p>You can place a cross-reference into a <tag>title</tag> element, but a particular conversion is free to simply render it as text, and not as an active link.</p>

            <p>Finally, there is fairly robust error-checking to protect against typographical errors in the attribute values that need to match up for all this to work.  Also, there is a check that the <attr>xml:id</attr> are unique.  But all this checking happens at processing-time, not at the validation step.  Any suggestions for improvements that make these checks even more robust are welcome.</p>
        </subsection>

        <subsection>
            <title>Citations</title>
            <idx>citation</idx>

            <p>Citations are just specialized cross-references to <tag>biblio</tag> elements, and so behave the same way as other cross-references.  However they will always visually look like [23], and there is no notion of <q>type name.</q></p>
        </subsection>

        <subsection>
            <title>Equations</title>

            <p>Similar to citations, references to equations (<tag>men</tag> and <tag>mrow</tag> elements) will visually look like (4.2), where the type name is implied by the parentheses.  Notice that you cannot cross-reference an <tag>me</tag> element (it has no number) or an <tag>md</tag> element (it is just a container, filled with <tag>mrow</tag> that you can target if you give them numbers).  Consult <xref ref="topic-display-math" /> for details about controlling the numbering of equations within an <tag>md</tag> or <tag>mdn</tag> element.</p>
        </subsection>



        <subsection xml:id="topic-cross-reference-list-item">
            <title>Lists</title>

            <p>Roughly, you can target a list item for a cross-reference, but not the list itself, since it is a container.  See <xref ref="topic-list-item-target" /> for precise details about using list content as the target of a cross-reference.  Note also, that an entire named list may be the target of a cross-reference, see <xref ref="topic-named-list" />.  Here we concentrate on the text of the cross-reference itself.</p>

            <p>First, note that if you cross-reference a list item of an anonymous list, there is a very real possibility that the number will be ambiguous, and there is no option for <attr>text</attr> will save you, and never can be.  See the middle column of <xref ref="table-xref-list-item" /> for the demonstration.  We assiduously try to make it <em>impossible</em> to ever create ambiguous text for cross-references, especially in consideration of print output.  Use the feature carefully.</p>

            <note xml:id="practice-ambiguous-list-items">
                <title>Take Care Referencing Anonymous Lists</title>

                <p>Cross-references to list items of anonymous lists can easily be ambiguous and then useless for readers of print.  Keep such a cross-reference close to its target, ideally within the same list, and/or perhaps using additional, unambiguous clues about location (which you  expect will survive later editing):
                <ol>
                    <li xml:id="ambiguous-list-item-one">See <xref ref="ambiguous-list-item-two" /> of this list.</li>
                    <li xml:id="ambiguous-list-item-two">See <xref ref="ambiguous-list-item-one" /> in the list appearing in <xref ref="practice-ambiguous-list-items" />.</li>
                </ol></p>
            </note>

            <p>The <c>local</c> option, discussed generally above, behaves differently for a cross-reference to a list item of an ordered list that is contained in a named list.  As seen in the table just below, the local portion of the number is the part that comes from the list item, without the part that comes from the location of the <tag>list</tag> block.</p>

            <table xml:id="table-xref-list-item">
                <title>Cross-references to list items, visual text styles</title>
                <tabular>
                    <row bottom="major">
                        <cell><attr>text</attr></cell>
                        <cell>Named List</cell>
                        <cell>Anonymous List</cell>
                        <cell>With Content</cell>
                    </row>

                    <row>
                        <cell><c>type-local</c></cell>
                        <cell><xref ref="named-list-target"  text="type-local" /></cell>
                        <cell><xref ref="anon-list-target" text="type-local" /></cell>
                        <cell><xref ref="named-list-target" text="type-local">Extra</xref></cell>
                    </row>

                    <row>
                        <cell><c>type-global</c></cell>
                        <cell><xref ref="named-list-target"  text="type-global" /></cell>
                        <cell><xref ref="anon-list-target" text="type-global" /></cell>
                        <cell><xref ref="named-list-target" text="type-global">Extra</xref></cell>
                    </row>

                    <row>
                        <cell><c>type-hybrid</c></cell>
                        <cell><xref ref="named-list-target"  text="type-hybrid" /></cell>
                        <cell><xref ref="anon-list-target" text="type-hybrid" /></cell>
                        <cell><xref ref="named-list-target" text="type-hybrid">Extra</xref></cell>
                    </row>

                    <row>
                        <cell><c>local</c></cell>
                        <cell><xref ref="named-list-target"  text="local" /></cell>
                        <cell><xref ref="anon-list-target" text="local" /></cell>
                        <cell><xref ref="named-list-target" text="local">Extra</xref></cell>
                    </row>

                    <row>
                        <cell><c>global</c></cell>
                        <cell><xref ref="named-list-target"  text="global" /></cell>
                        <cell><xref ref="anon-list-target" text="global" /></cell>
                        <cell><xref ref="named-list-target" text="global">Extra</xref></cell>
                    </row>

                    <row>
                        <cell><c>hybrid</c></cell>
                        <cell><xref ref="named-list-target"  text="hybrid" /></cell>
                        <cell><xref ref="anon-list-target" text="hybrid" /></cell>
                        <cell><xref ref="named-list-target" text="hybrid">Extra</xref></cell>
                    </row>

                    <row>
                        <cell><c>phrase-global</c></cell>
                        <cell><xref ref="named-list-target"  text="phrase-global" /></cell>
                        <cell>Warning</cell>
                        <cell>Warning</cell>
                    </row>

                    <row>
                        <cell><c>phrase-hybrid</c></cell>
                        <cell><xref ref="named-list-target"  text="phrase-hybrid" /></cell>
                        <cell>Warning</cell>
                        <cell>Warning</cell>
                    </row>

                    <row>
                        <cell><c>title</c></cell>
                        <cell><xref ref="named-list-target"  text="title" /></cell>
                        <cell><xref ref="anon-list-target" text="title" /></cell>
                        <cell>Warning</cell>
                    </row>

                    <row>
                        <cell><c>custom</c></cell>
                        <cell></cell>
                        <cell></cell>
                        <cell><xref ref="named-list-target" text="custom">Extra</xref></cell>
                    </row>
                </tabular>
            </table>

            <p>The <c>hybrid</c> options employ a different definition of when the distance between a cross-reference and its target is close enough that the number can be shortened, without becoming ambiguous.  When an <tag>xref</tag> and its target are part of the same <tag>list</tag>, then the common part of the number derived from the <tag>list</tag> is not needed.  To illustrate we need to make a small <tag>list</tag> with cross-references contained within.</p>

            <list>
                <title>Small test</title>
                <ol>
                    <li>(<c>type-global</c>)  Flowers are not <xref ref="nearby-item" text="type-global" />.</li>
                    <li>(<c>type-hybrid</c>)  Fish are not <xref ref="nearby-item" text="type-hybrid" />.</li>
                    <li>(<c>hybrid</c>)  Bacteria are not <xref ref="nearby-item" text="hybrid" />.</li>
                    <li>(<c>phrase-global</c>)  Fungi are not <xref ref="nearby-item" text="phrase-global" />.</li>
                    <li>(<c>phrase-hybrid</c>)  Trees are not <xref ref="nearby-item" text="phrase-hybrid" />.</li>
                    <li xml:id="nearby-item">Mammals.</li>
                </ol>
            </list>
        </subsection>

        <conclusion>
            <note>
                <title>Be Rational About Numbering Variations</title>

                <p>With distinct numbering schemes for divisions, theorems, figures, equations, and citations, along with ten different text styles for a cross-reference, plus variants, per-cross-reference settings, and text overrides, there is a huge supply of combinations.  Likely you can create some really ugly cross-references.  Use the flexibility sensibly.</p>
            </note>
        </conclusion>
    </section>


    <section xml:id="topic-divisions">
        <title>Divisions</title>

        <p>A <term>division</term><idx>division</idx> (or more carefully, a <term>structural division</term><idx>structural division</idx>) is a structured component of a book or article that would be recognized by most any reader.  They are essential to the organization of a <pretext /> project.  Notice that we use the generic term division, since a <tag>section</tag> is just one example of a division.</p>

        <p>Divisions are <tag>book</tag>, <tag>article</tag>, <tag>part</tag>, <tag>chapter</tag>, <tag>section</tag>, <tag>subsection</tag>, <tag>subsubsection</tag>, and <tag>paragraphs</tag>.  Their use is fairly intuitive, though there are some restrictions, so please read on.</p>

        <p>A <tag>book</tag> must contain at least one <tag>part</tag> or at least one <tag>chapter</tag>, which may contain <tag>section</tag>, <tag>subsection</tag>, and <tag>subsubsection</tag>.  A <tag>part</tag> simply contains a sequence of <tag>chapter</tag> and functions in two user-selectable ways: structural (<eg /> numbering will reset), or decorative (merely inserting a decorative page between two chapters and sectioning the Table of Contents).</p>

        <p>An <tag>article</tag> is simpler and shorter than a book.  It might be really simple and have no divisions at all, or it may have <tag>section</tag>s.  It cannot have <tag>chapter</tag>s, as that would be a <tag>book</tag>.  Within a <tag>section</tag>, <tag>subsection</tag>s and <tag>subsubsection</tag>s may follow.</p>

        <p>Divisions must nest properly and may not be skipped.  So a <tag>section</tag> cannot contain a <tag>chapter</tag> and a <tag>subsection</tag> may not be contained in a <tag>chapter</tag> without an intervening <tag>section</tag>.</p>

        <p>A division <em>must</em> contain a <tag>title</tag>, and may contain one or more index entries (see <xref ref="topic-index" />), which should appear before anything else.  Any division may be unstructured, with just a sequence of <term>top-level content</term><idx>top-level content</idx> such as paragraphs, figures, lists, theorems, <etc />  Or a division may be structured, and in this case it must follow a prescribed pattern.  There may be a single, optional <tag>introduction</tag>, filled with top-level content, followed by a sequence of at least one of the appropriate divisions, ending with a single, optional <tag>conclusion</tag>, filled with top-level content.  It is an error to begin with a run of top-level content inside a division and then begin to use divisions.  (The solution is to make the initial content an <tag>introduction</tag> and/or one or several divisions.)</p>

        <p>A <tag>book</tag> may be structured into parts.  After the <tag>frontmatter</tag> and before the <tag>backmatter</tag> there may be a sequence of <tag>part</tag>.  These elements may carry a <tag>title</tag>, and not much else, besides a substantial sequence of <tag>chapter</tag>.  The main effect is to get an extra level of division in the Table of Contents.  For print and <init>PDF</init> there is an entire page devoted to the title and number of the part.  The default numbering is <term>decorative</term>, which means that the chapters are numbered consecutively from the start of the book and do not reset to one at the start of each part.  It is as if the parts were not even there.  The alternative is that parts are <term>structural</term>.  Now each part begins with Chapter 1.  There are other more subtle differences, such as cross-references use a part number if, and only if,  the trip from the cross-reference to its target crosses a boundary of two parts.  The two approaches to part structure may be set via the publication file, see <xref ref="publication-file-numbering"/>.</p>

        <p>There are exceptions to the above.  For one, <tag>paragraphs</tag> is an anomalous division, as a sort of lightweight sectioning command.  It may appear in any division, at any location within a division, it may not be divided further (it is a leaf of the document tree), it never gets a number, and its title is formatted in a subsidiary way.  I especially like to use this in a two- or three-page <tag>article</tag> that has no other divisions at all.   It is also very useful as a way to subdivide portions of the front matter (<xref ref="topic-front-matter"/>), such as a <tag>preface</tag>. Typical presentation has the title in bold, without much change in font size (if at all), inline with the first paragraph, and perhaps a bit of vertical space as it begins and ends.  Despite the name, it may contain more than just paragraphs, so may contain any top-level-content that would go in any other division.</p>
    </section>

    <section xml:id="topic-specialized-divisions">
        <title>Specialized Divisions</title>
        <idx><h>division</h><h>specialized</h></idx>
        <idx>specialized division</idx>

        <introduction>
            <p>There are six divisions that have specialized functions, and therefore have less generic names than ones like <tag>chapter</tag> or <tag>section</tag>.  They are <tag>exercises</tag>, <tag>reading-questions</tag>, <tag>solutions</tag>, <tag>references</tag>, <tag>glossary</tag>, and <tag>worksheet</tag>.  They have some features in common, such as having a <tag>title</tag>, but each is different from the other in substantial ways.</p>

            <p>Generally, a specialized division may be placed within any other division (<xref ref="topic-divisions"/>), and it will behave like a subdivision of that division.  Some may be placed in the back matter and may behave as a version relevant to the entire document.  This section describes the specifics for each type of specialized division.</p>
        </introduction>

        <subsection xml:id="topic-references">
            <title>(*) References (Lists of Works Cited)</title>
            <p></p>
        </subsection>

        <subsection xml:id="topic-glossary">
            <title>Glossary</title>
            <idx>glossary</idx>

            <p>A <tag>glossary</tag> division may be placed in any main matter division, and once in the <tag>backmatter</tag>.</p>

            <p>After a <tag>title</tag>, index entries, and other metadata, a <tag>glossary</tag> division may begin with an optional <tag>headnote</tag>, which can use paragraphs to explain anything unusual about a particular glossary.</p>

            <p>The remainder of a glossary is a sequence of items to explain.  Typically these are words, phrases, initialisms, or acronyms.  Each item is a <q>glossary item</q>, enclosed in a shorthand <tag>gi</tag> element.  The element must lead with a <tag>title</tag>, which is the term being explained. The explanation itself follows, typically in a sequence of paragraphs, but unnumbered items, such as an <tag>image</tag> may also be used.  It is the author's responsibility to create the list in the desired order.  Automatic divisions (by initial letter) could be reasonable feature request, perhaps especially for a final, overall, back matter glossary, much like an index.</p>

            <p>For an example, see the <xref ref="glossary" text="custom">glossary</xref> in the back matter of this Guide.</p>
        </subsection>

        <subsection xml:id="topic-worksheet">
            <title>(*) Worksheets</title>
            <p></p>
        </subsection>
    </section>

    <section xml:id="topic-title">
        <title>Titles</title>
        <idx>title</idx>

        <p>Divisions always need titles, you accomplish this with a <tag>title</tag><idx>title</idx> tag first thing.  Almost everything that you can use in a paragraph can be used in a title, but a few constructions are banned, such as a displayed mathematical equation (for good reason).  Try to avoid using footnotes in titles, even if we have tried to make them possible.</p>

        <p>A division will also support a single optional <tag>shorttitle</tag> and/or a single optional <tag>plaintitle</tag>.  The full <tag>title</tag> will be used where the division is born, but in other places where the title is used for navigation, such as a Table of Contents, print page header, or HTML summary page, when horizontal space may be at a premium, the <tag>shortitle</tag> will be used preferentially.</p>

        <p>A <tag>plaintitle</tag> is similar, but slightly different, so you might want both.  In limited situations, <pretext/> markup does not travel well in certain conversions.  The best example is mathematics, which might be in a title of a division, and then in a conversion to HTML, will fail to render in the tab of a browser, or the list of open tabs for a browser window.  Two examples<cd>
            <cline>&lt;title&gt;&lt;m&gt;q&lt;/m&gt;-crystalline cohomology&lt;/title&gt;</cline>
            <cline>&lt;title&gt;&lt;m&gt;\delta&lt;/m&gt;-rings&lt;/title&gt;</cline>
        </cd>  <pretext/> will automatically do a nice job for you with the first, but the second will retain <c>\delta</c> in a browser tab.  However, you can add a <tag>plaintitle</tag> element where the <latex/> <c>\delta</c> can be replaced by a Unicode delta (<c>U+03B4</c>), which will used preferentially and be fine in <init>HTML</init> output.</p>

        <p>To avoid confusing your readers, use these alternate titles sparingly, and ideally only when you have a really, really, really long title and then use a short title that is easily recognizable as a variant of the long title, or when markup is behaving poorly in situations such as a browser tab.  Your first option should be to ask if your long title must absolutely be so long, or if the markup is strictly necessary.</p>

        <p>Many, many other structures admit titles.  Experiment, or look at specific descriptions of the structure you are interested in.  Titles are very integral to <pretext/>, much like cross-references.  Titles migrate to the Table of Contents, get used in page headers for print output, can be used in lists (such as a List of Figures), and can be used as the text of a cross-reference, instead of a number.  You might not be inclined to give a <tag>remark</tag> a title, but it would be good practice to do so.  If you use knowls in your <init>HTML</init> output for structures such as <tag>example</tag> (or if somebody else may someday choose to), then your readers will be spared a lot of confusion if you supply informative titles for each. Your electronic outputs will be much more useful to your readers if you routinely title every structure that allows it (perhaps excepting <tag>exercise</tag> which can be known by their number).</p>

        <p>If a title is very long, the <tag>line</tag> element can be used to indicate how the title should appear on multiple lines.  Note: does not apply to all output formats.
        <idx><h>title</h><h>very long</h></idx>
        <idx>line</idx>
        </p>

        <note xml:id="best-practice-titles">
            <title>Provide Informative Titles Liberally</title>
            <p>Provisions for titles in many situations is a key <pretext/> feature.  And then they are used for various purposes to benefit readers.  A good example is when the <init>HTML</init> conversion is used to place content in a <term>knowl</term>, a unit of content that begins hidden, but can be revealed (and hidden again) with one click of a mouse.  Since a reader cannot see the content originally, we will migrate a title into the clickable text.  But we cannot read your mind<mdash/>it is your job as the author to provide a title, and to provide a good one.</p>

            <p>Even if you are not yet sure what a knowl is, and even if you think you do not want to use them, there are other good reasons to have a title (such as automatic lists, see <xref ref="topic-automatic-lists"/>).  Constructing them on-the-fly is much easier than making a big chore out of going back and doing it later.</p>

            <p><dl width="narrow">
                <li>
                    <title>Bad</title>
                    <p>Example 5.10</p>
                </li>
                <li>
                    <title>Better</title>
                    <p>Example 5.10 A cool lizard trick.</p>
                </li>
                <li>
                    <title>Best</title>
                    <p>Example 5.10 Various colors and markings of a chameleon.</p>
                </li>
            </dl></p>
        </note>
    </section>

    <section xml:id="topic-mathematics">
        <title>Mathematics</title>
        <idx>mathematics</idx>

        <introduction>
            <p>As mentioned in the overview, <xref ref="overview-math" />, we use <latex /> syntax for mathematics.  In order to allow for quality display in <init>HTML</init>, and other electronic formats, this limits us to the subset of <latex /> supported by the very capable <url href="https://www.mathjax.org/" visual="www.mathjax.org">MathJax</url> Javascript library.  Generally this looks like the <c>amsmath</c><idx><c>amsmath</c></idx> package maintained by the American Mathematical Society at their <url href="http://www.ams.org/publications/authors/tex/amslatex" visual="www.ams.org/publications/authors/tex/amslatex">AMS-LaTeX page</url>. For a complete and precise list of what MathJax supports, see MathJax's <url href="http://docs.mathjax.org/en/latest/input/tex/macros/" visual="docs.mathjax.org/en/latest/input/tex/macros/">Supported <tex/>/<latex/> commands</url>. Once you have digested this more general section, be sure to also consult <xref ref="topic-mathematics-practices"/> for some very specific suggestions.</p>
        </introduction>

        <subsection>
            <title>Inline Mathematics</title>

            <p>Use the <tag>m</tag> to place variables or very short expressions within a sentence of a paragraph, the content of a <tag>title</tag>, a <tag>cell</tag> of a table, a footnote, or other similar locations of sentence-like text.  You can't cross-reference this text, nor make a knowl with it.  Though you can typically cross-reference a containing element.</p>

            <p>Do not use <latex />-isms like <c>\displaystyle</c> to try to end-run the inline nature.  It will just lead to poor results.</p>

            <note>
                <title>Keep Inline Mathematics Short</title>

                <p>Longer mathematical expressions in an <tag>m</tag> element can lead to awkward line breaks, both in <init>HTML</init> output, and especially in <init>PDF</init> generated from <latex/>.  And complicated fractions or integrals can introduce abnormal line-spacing that is distracting to a reader.  As a rough rule-of-thumb, keep an inline expression shorter than a moderately-long regular word and avoid tall constructions.  This should allow <latex/>'s line-breaking algorithms the best chance of success.</p>

                <p>So a simple, short equality such as <m>x=2</m> should not cause a problem, but if you want to claim that the probability distribution of the normal distribution has the right scaling factors, <m>\int_{-\infty}^{\infty}\frac{1}{\sigma\sqrt{2\pi}}e^{-\frac{1}{2}\frac{\left(x-\mu\right)^2}{\sigma}} dx = 1</m>, there is a good chance it will do less harm to your paragraph of you display it
                <me>\int_{-\infty}^{\infty}\frac{1}{\sigma\sqrt{2\pi}}e^{-\frac{1}{2}\frac{\left(x-\mu\right)^2}{\sigma}} dx = 1</me>
                using the <tag>me</tag> element described next.</p>
            </note>
        </subsection>

        <subsection>
            <title>One-Line Display Mathematics</title>

            <p>The <tag>me</tag> element can be used for longer expressions or a single equation.  Typically you will get vertical separation above and below, and the contents will be centered.  See below about concluding periods (and other punctuation), and alignment.  The <tag>men</tag> variant will produce a numbered equation, and therefore with a provided <attr>xml:id</attr> attribute, can be the target of a cross-reference (<tag>xref</tag>).</p>
        </subsection>

        <subsection xml:id="topic-display-math">
            <title>Multi-line Display Mathematics</title>

            <p>We begin with a pure container, either <tag>md</tag> or <tag>mdn</tag>.  The former numbers no lines, the latter numbers every line.  Within the container, content, on a per-line basis, goes into a <tag>mrow</tag> element.  You can think of <tag>mrow</tag> as being very similar to <tag>me</tag>.
In a <latex/> <c>align</c> the <c>\\</c> mark the end of a displayed line.  In <pretext/> each <tag>mrow</tag> delimits a
displayed line, and there are no <c>\\</c>s.  Use <c>\amp</c> to mark the alignment point.
<idx>aligned math</idx><idx>\amp, math alignment</idx></p>

            <p>On any given <tag>mrow</tag> you can place the <attr>number</attr> attribute, with allowable values of <c>yes</c> and <c>no</c>.  These will typically be used to override the behavior inherited by the container, but there is no harm if they are redundant.  A given line of the display may be the target of a cross-reference, though the numbering flexibility means you can try (and fail) to target an unnumbered equation.</p>

            <p>An <tag>mrow</tag> may have a <attr>tag</attr> attribute in place of a <attr>number</attr> attribute.  This will create a <q>number</q> on the equation which is just a symbol.  This is meant for situations where you do not want to use numbers, and the resulting cross-reference is <q>local.</q>  In other words, the <tag>xref</tag> and its target are not far apart, such as maybe within the same <tag>example</tag> or the same <tag>proof</tag>.  Allowable values for the attribute are:<cd>
                <cline>star, dstar, tstar,</cline>
                <cline>dagger, ddagger, tdagger,</cline>
                <cline>daggerdbl, ddaggerdbl, tdaggerdbl,</cline>
                <cline>hash, dhash, thash,</cline>
                <cline>maltese, dmaltese, tmaltese</cline>
            </cd>These are the names of symbols, with prefixes where the prefix <c>d</c> means <q>double</q>, and the prefix <c>t</c> means <q>triple</q>.  Cross-references to these tagged equations happens in the usual way and should behave as expected.  See <xref ref="overview-cross-references" /> and <xref ref="topic-cross-referencing" /> for more on cross-references.</p>
        </subsection>

        <subsection xml:id="mathematics-xml-characters">
            <title>Exceptional Characters</title>

            <p>The <latex /> macros, <c>\amp</c>, <c>\lt</c>, and <c>\gt</c> are always available within these mathematics elements, so that you can avoid the exceptional XML characters <c>&amp;</c>, <c>&lt;</c> and <c>&gt;</c>.  See <xref ref="overview-exceptional-characters" /> for this same information, but in the broader context of your entire document.</p>
        </subsection>

        <subsection xml:id="text-in-mathematics">
            <title>Text in Mathematics</title>

            <p>Once in a while, you need a little bit of <q>regular</q> text within an expression and you do not want it to look like a product of a bunch of one-letter variables.  Use the <c>\text{}</c> macro for these.  Only.  Other ways of switching out of math-mode and into some sort of <q>regular</q> text will appear inferior, and can raise errors in certain conversions.<ul>
                <li>Do place surrounding spaces inside the <c>\text{}</c> macro.</li>
                <li>Do not place any mathematics inside the  <c>\text{}</c> macro.</li>
                <li>Do not use the <c>\mbox{}</c> macro as a substitute.</li>
                <li>Do not use font-changing commands (<eg /> <c>\rm</c>) as a substitute.</li>
            </ul></p>

            <p>For example,<cd>
                <cline>&lt;me&gt;f(x) = \begin{cases} x^2 \amp \text{if } x\gt 0\\</cline>
                <cline>           -7 \amp \text{otherwise} \end{cases}&lt;/me&gt;</cline>
            </cd>produces
            <me>f(x) = \begin{cases}x^2\amp\text{if }x\gt 0\\-7\amp\text{otherwise}\end{cases}</me>.  This example amply illustrates the use of macros for XML exceptional characters (twice), appropriate use of the <c>\text{}</c> macro (twice), spaces in the <c>\text{}</c> macro (once), sentence-ending punctuation (see the source, the period is <em>not</em> inside the <tag>me</tag> element) and yes, we did think twice about the <c>\\</c> (an exception to the rule).</p>
        </subsection>

        <subsection xml:id="color-in-math">
            <title>Color in Mathematics</title>

            <p>There is a temptation to use color to indicate or highlight portions of mathematics, especially for electronic outputs where color is easy and cheap.  But before you leap, how will this work in black-and-white printed output?  How will it work for a blind reader using a screen-reader or a braille version?</p>

            <p>With careful use of <tex/> grouping (<c>{...}</c>) you can make the two behaviors of <c>\color</c> effective.  For example, go:<cd>
                <cline>{\color{blue}{x^2}}</cline>
            </cd></p>
        </subsection>

        <subsection>
            <title>Cross-References in Display Mathematics</title>

            <p>A cross-reference is achieved with the <tag>xref</tag> element, see <xref ref="overview-cross-references" />.  You can place an <tag>xref</tag> inside a <tag>mrow</tag>, and remarkably, it will do the right thing.  This is one of only two <init>XML</init> elements you can mix-in with <latex /> syntax.  A typical use is to provide a justification or explanation for a step in a proof, derivation, or simplification.  And it works best with alignment, see below.</p>
        </subsection>

        <subsection>
            <title>Alignment in Display Mathematics</title>

            <p>Displayed mathematics is implemented with the AMS-<latex /> <c>align</c> environment.  Ampersands are used to control this, so use the <c>\amp</c> macro for these.  The first ampersand in a line or row is an alignment point, typically a symbol, like an equality.  The next ampersand is a column separator, then the next is an alignment point, then a column separator, then<ellipsis />  The moral of the story is you should have <m>n</m> alignment points, with <m>n-1</m> column separators, for a total of <m>2n-1</m> ampersands<mdash />always an odd number.</p>

            <p>For example,<cd>
                <cline>&lt;md&gt;</cline>
                <cline>  &lt;mrow&gt;A \amp = B \amp D \amp = E \amp \amp \text{Because}&lt;/mrow&gt;</cline>
                <cline>  &lt;mrow&gt;  \amp = C \amp   \amp = F \amp \amp &lt;xref ref="txo" /&gt;&lt;/mrow&gt;</cline>
                <cline>&lt;/md&gt;</cline>
            </cd>produces
            <md>
                <mrow>A \amp = B \amp D \amp = E \amp \amp\text{Because}</mrow>
                <mrow>  \amp = C \amp   \amp = F \amp \amp<xref ref="txo" /></mrow>
            </md>.</p>

            <p>Sometimes you want several short equations on one line.  Do not use <tag>me</tag>.  Instead use a single <tag>mrow</tag> inside an <tag>md</tag>, and use alignment to spread them out evenly.</p>

            <p>For multi-line display mathematics with no ampersands present, each line will be centered.  This is implemented with the AMS-<latex /> <c>gather</c> environment.</p>

            <p>You can fool the alignment behavior by hiding all your ampersands in macro definitions, so there is the optional <attr>alignment</attr> attribute for the <tag>md</tag> or <tag>mdn</tag> element, in order to force the right kind of alignment.  Allowable values are <c>gather</c>, <c>align</c>, and <c>alignat</c>.  The latter is similar to <c>align</c>, but no space is automatically provided between columns.  You can leave it that way, or explicitly add your own.  For example, this allows you to precisely arrange individual terms of a system of linear equations, especially when terms with zero coefficients are omitted.  When using the <c>alignat</c> option <pretext /> tries to count ampersands to see how many columns you intend, since <latex /> needs this number (we are not sure why).  This detection can be fooled too, especially if you have something like a matrix with lots of ampersands for other purposes.  So set the <attr>alignat-columns</attr> attribute to the <em>number of intended columns</em>, if necessary.</p>
        </subsection>

        <subsection xml:id="commutative-diagrams">
            <title>Commutative Diagrams</title>

            <p>Commutative diagrams may be authored using the <init>AMS</init> <latex/> <url href="https://ctan.org/pkg/amscd" visual="ctan.org/pkg/amscd"><c>amscd</c></url> package.  While restricted in some ways, such as the lack of sloped or curved arrows, it has one important advantage over more general drawing tools.  Support for <init>HTML</init> output comes from MathJax, and hence has accessible versions included in the output.</p>

            <p>Typical use would be within an <tag>me</tag> element, so starting with <c>\begin{CD}</c>.  Despite this being multi-line output, we have not chosen to integrate it within the more general <c>md/mrow</c> structure, but that decision can be revisited.</p>
        </subsection>

        <subsection>
            <title>Fill-In Blanks in Mathematics</title>

            <p>The other mix-in <init>XML</init> element is <tag>fillin</tag>. It may use a <attr>fill</attr> attribute with some math string to determine width, height, and depth of the blank. Or it may use a <attr>characters</attr> attribute that takes an integer value to hint at the width.</p>
        </subsection>

        <subsection>
            <title>Page Breaks for Tall Display Mathematics</title>

            <p>For print output, do nothing additional and <latex /> will do its best to break your display between lines.  You can turn this behavior off by setting the <attr>break</attr> attribute on the <tag>md</tag> or <tag>mdn</tag> to the value <c>no</c>.  Once you do this, you can then selectively allow a page break after a given <tag>mrow</tag> by setting the <attr>break</attr> attribute on the <tag>mrow</tag> to the value <c>yes</c>.</p>
        </subsection>

        <subsection xml:id="mathematics-macros">
            <title>Your Macros</title>

            <p>These go in the <tag>docinfo</tag> section, wrapped in a <tag>macros</tag><idx>macro</idx> element.  Keep them simple<mdash />one or two arguments, and one-line definitions.  This is not the place to be fancy, and not the place to try to end-run the structural aspects of <pretext/>.  The idea is to define something like <c>\adjoint{A}</c> for the matrix <c>A</c> to be a superscript asterisk, and later you can change your mind and use a superscript dagger instead.  Keep in the spirit of <pretext/> and use readable, semantic macros.  For example, do not use <c>\a{A}</c> for the adjoint of <c>A</c>.  Repeating: keep your <latex/> macros simmple, and to a single line.</p>

            <p><pretext/> will use your macros correctly for print and for <init>HTML</init>, after erasing whitespace from the left margin, and stripping <latex/> comments.</p>

            <p>The name of your macros also cannot contain any numbers, otherwise MathJax will <q>silently</q> fail and may not read any subsequent macros you might have. This is important because <pretext/> will place custom macros for you at the end of your own, defined at <xref ref="mathematics-xml-characters"/>, to be used. Those would fail to be processed by MathJax if your own macros caused it to stop reading.</p>
        </subsection>

        <subsection xml:id="semantic-macros">
            <title>Semantic Macros</title>

            <introduction>
                <p>We have resisted using overly-verbose MathML for mathematics, or worse, inventing our own <init>XML</init> vocabulary for mathematics.  <latex/> syntax generally works great, but to work even better within <pretext/> an author needs to take a few extra steps.  Your work will translate better to a variety of formats, and will be easier to maintain, with well-designed macros.  A well-designed macro will convey the mathematical <em>meaning</em> of the object to a reader of your source, without them looking at your <em>definition</em> of the macro.  In situations where a mathematical object might be written with different notation, it should be trivial to change the macro's definition and preserve the mathematical meaning.  For example, consider two versions of a binomial coefficient:
                <md>
                    <mrow>&amp;{n\choose r} &amp; &amp;\operatorname{C}(n,r)</mrow>
                </md>which could both equally well be the realization of <c>\binomial{n}{r}</c>.</p>

                <p>Here we describe some notation which often carries multiple mathematical meanings and/or may be created with <latex/> in multiple ways.</p>
            </introduction>

            <subsubsection>
                <title>Vertical Bars</title>

                <p>Vertical bars are used for a variety of mathematical objects.  Paired to create functions of expressions: absolute value, <m>\left\lvert x-1\right\rvert</m>; norm of a vector, <m>\left\lVert \mathbf{v}\right\rVert</m>; cardinality of a set, <m>\left\lvert X\right\rvert</m>; and the determinant of a matrix, <m>\left\lvert A^k\right\rvert</m>.  As relations:  division, <m>a\mid b</m>; parallel lines <m>L_1\parallel L_2</m>.  Sets are another use: <m>E=\left\{x\in{\mathbb Z}\,\middle\vert\, x\equiv 0\pmod 2\right\}</m>.</p>

                <p><latex/> <c>\vert</c>, <c>\Vert</c>, <c>\lvert</c>, <c>\rvert</c>, <c>\lVert</c>, <c>\rVert</c> are the delimiters, where <c>l</c> and <c>r</c> refer to left and right, and the capitalized versions are a pair of vertical lines.  The qualifiers <c>\left</c> and <c>\right</c> can be used to have the length of the bar grow to match what it encloses.   Note that there is a <c>\middle</c> that we have used above with <c>\vert</c> for the set <m>E</m>, and we have added space on either side.  <c>\mid</c> and <c>\parallel</c> are relations, used above to indicate divisibility and parallel lines, and so automatically get an extra bit of spacing on either side.</p>

                <p>When using <c>\left</c> or <c>\right</c> in isolation, <c>\left.</c> or <c>\right.</c> can be used to define a group that only has a bar on one end.  For example:<md>
                    <mrow>\int_0^1\,\sin^{-1}(x)\,dx = \left.\frac{1}{\sqrt{1-x^2}}\right\rvert_{x=0}^{x=1}</mrow>
                </md>.</p>
            </subsubsection>

            <subsubsection>
                <title>Times</title>

                <p>The <q>times</q> symbol sees many uses that are different: dimensions, multiplication, and more complicated products (such as a Cartesian product of two sets).  Macros <c>\product</c>, <c>\times</c>, and <c>by</c> could carry different meanings, even if each one is defined by the <c>\times</c> symbol, <m>\times</m>.  For example:</p>

                <pre>
                Chess is played on an &lt;m&gt;8 \by 8&lt;/m&gt; grid, which
                contains &lt;m&gt;8 \times 8 = 64&lt;/m&gt; little squares.
                </pre>

                <pre>
                If &lt;m&gt;G&lt;/m&gt; and &lt;m&gt;H&lt;/m&gt; are finite groups, then
                &lt;m&gt;\card(G \product H) = \card(G) \times \card(H)&lt;/m&gt;.
                </pre>
            </subsubsection>
        </subsection>

        <subsection xml:id="punctuation-display-math">
            <title>Punctuation After Display Math</title>

            <p>If a chunk of displayed math concludes a sentence, then the sentence-ending punctuation should appear at the conclusion of the display.  (And certainly not at the start of the first line after the display!)  But do not author the punctuation within the mathematics element, put it afterwards, where it logically belongs.</p>

            <p>More specifically, place a sentence-ending period (say) <em>immediately</em> after the closing of an <tag>me</tag>, <tag>men</tag>, <tag>md</tag>, or <tag>mdn</tag> element. <pretext /> will place the period in your output in the right place and in the right way.  (By using <latex />'s <c>\text{}</c> macro, if you are curious to know the details.)  Here is an example.  The <init>XML</init> source<cd>
                <cline>&lt;md&gt;</cline>
                <cline>    &lt;mrow&gt;(a+b)^2&lt;/mrow&gt;</cline>
                <cline>&lt;/md&gt;.  Now...</cline>
            </cd>will render as<md>
                <mrow>(a+b)^2</mrow>
            </md>.  Now<ellipsis /></p>

            <p>This all applies more generally to clause-ending punctuation, such as a comma.  Take notice of the requirement that the punctuation must be <em>immediately</em> after the closing tag of the math element, otherwise it will not migrate properly.  For example, do not interrupt the flow with whitespace, or an <init>XML</init> comment, or anything else.</p>

            <p>For inline mathematics (the <tag>m</tag> element) the same authoring principle holds, though you would likely do this naturally.  Author the punctuation <em>outside</em> the element, where it will remain.</p>

            <p>Here is a technical subtlety that will demonstrate some of the inner machinery of <pretext /> and our conversions.  In your work, locate a theorem that has some numbered display mathematics (<c>mdn</c>) which is at the end of a sentence, and which you have authored as described above.  In <init>HTML</init> output, test a cross-reference (<c>xref</c>) to the theorem and you will see the period for the end of the sentence at the end of the display, where it should be.  Now test a cross-reference (<c>xref</c>) to one of the numbered equations.  First, the knowl will contain the entire display, to provide context, but it also will not contain the period, since the rest of the sentence is not in the knowl and so the period is not necessary.</p>

            <note xml:id="authoring-math-punctuation">
                <title>Authoring Punctuation after Mathematics</title>

                <p><em>Always</em> follow the instructions in <xref ref="punctuation-display-math"/> about placing all punctuation following mathematics <em>after</em> the math element, not inside it.  <pretext/> will do the right thing for display math for you.  But furthermore, there are some special situations where the output format is not visual, such as braille or audio, where the placement of the punctuation is both different and important to not confuse <q>reader.</q>  You can help ensure your various outputs are of the highest quality by observing these sorts of details.</p>
            </note>
        </subsection>

        <subsection xml:id="math-list-items">
            <title>Lists of Mathematical Expressions</title>

            <p>It is common to make lists of expressions, equations, or identities.  Think of the definitions of trigonometric functions, a collection of antiderivatives, or a compendium of generating functions.</p>

            <p>In these situations, author a list item, <tag>li</tag>, within an <tag>ol</tag> or <tag>ul</tag>, by using <em>only</em> the necessary <tag>m</tag> element.  Do not use an intervening <tag>p</tag>, and do not include any adjacent text.  Whitespace is OK.  Then <pretext/> will add <latex/>'s <c>\displaystyle</c> command to improve the visual appearance of the mathematics, and so you do not need to.</p>

            <p>If you prefer to not have this behavior, insert an intervening <tag>p</tag>, and output will be identical, but without the <c>\displaystyle</c>.</p>

            <p>Note that <em>any</em> text, other than whitespace, outside the <tag>m</tag> tag will disable this feature, <em>including punctuation</em>. However, according to the Chicago Manual of Style, 14e, 6.127, <q>Items carry no closing punctuation unless they consist of complete sentences.</q> So that comma at the end of your equation probably doesn't belong there anyway.</p>
        </subsection>

        <subsection xml:id="mathematics-latex-packages">
            <title>Additional Packages</title>

            <p>Generally, you cannot add additional packages for use within mathematics.  The exception is a package with support available optionally within MathJax.  And it must have the same name as its normal <latex /> version.  Then set a <c>docinfo/latex-preamble/package</c> element to be the common name of the package.   (The <c>cancel</c> package is one such example.)</p>

            <p>Then the supported macros of the package will be available with your mathematics elements, and you can use them within other macro definitions.  We do not guarantee the absence of conflicts with other packages in use, even if employed by <pretext />.  Nor do we support debugging such conflicts.</p>
        </subsection>

        <subsection>
            <title>Mathematics in Titles</title>

            <p>Titles are a key feature of <pretext/>, and migrate to various places in different conversions, where they might be mixed with bold text, or where they do not render properly.  Please report any substandard situations.  A good example of this phenomenon is mathematics in division titles, where we provide a <tag>plaintitle</tag> alternate.  See <xref ref="topic-title"/> for a complete discussion.</p>
        </subsection>

        <subsection>
            <title>Extras</title>

            <p>There are two existing additional options, which we might want to remove some day for technical reasons.  Macros from the <c>extpfeil</c> extensible arrows package are available by default, and an <c>\sfrac{}{}</c> macro is available for appealing inline <q>slanted fractions.</q></p>
        </subsection>

        <subsection xml:id="mathematics-notes">
            <title>Notes</title>

            <p>As mentioned at the start of this section, your use of <latex/> needs to also be supported by MathJax so that it may be rendered as part of an <init>HTML</init> page displayed in a web broswer.  In addition to the information at the start of <xref ref="topic-mathematics"/>, this subsection has some notes that may help you navigate this situation.<ol>
                <li>Generally, MathJax supports commands available in the <c>amsmath</c> package.</li>
                <li>You can construct, and use, your own macros, <em>but only for mathematics</em>, not for document structure or document management.  See <xref ref="mathematics-macros"/>.</li>
                <li>Support for loading <q>extra</q> packages is extremely limited.  See <xref ref="mathematics-latex-packages"/>.</li>
                <li>The <c>\matrix{}</c> command, and its friends (such as <c>\pmatrix{}</c>) are not supported by <latex/>, despite being recognized by MathJax.  So use environments like <c>\begin{matrix}</c> and <c>\begin{pmatrix}</c> (with their corresponding <c>\end{}</c>, of course) and you will get accurate results for both formats.</li>
            </ol></p>
        </subsection>
    </section>

    <section xml:id="topic-mathematics-practices">
        <title>Mathematics Best Practices</title>
        <idx><h>mathematics</h><h>best practices</h></idx>

        <p>This section addresses some finer points of authoring mathematics with <latex/>, motivated in large part by helping MathJax create the most accessible output possible, which in many instances will also create a superior typographical result across all conversions.  We try to provide justification and explanation, though that might not be easy in all cases.   Some are definitely technical, and we are only aware of them from authors' experience and reports.  Many are meant to help in the conversion to braille.  This is an incomplete list so additional reports and additions are welcome.</p>

        <paragraphs>
            <title>Large Numbers</title>
            <p>Using a separator to aid in reading a large number should avoid using a space as a separator.  So <m>234{,}766{,}544</m> or <m>234.766.544</m> is preferable to <m>234\,766\,544</m>.  We have used braces around the commas in the first instance, and a <latex/> <q>thin space</q>, <c> \, </c>, in the last instance.) For <m>234{,}766{,}544</m>, braces around each comma prevents automatic trailing space that would normally be desirable in a list of numbers.  In other words, author as:<cd>
                <cline>&lt;m&gt;234{,}766{,}544&lt;/m&gt;</cline>
            </cd>Here is the version with commas and no effort to distinguish the big number from a list of smaller numbers: <m>234,766,544</m>.</p>
        </paragraphs>

        <paragraphs>
            <title>Ratios</title>
            <p>If you really intend to communicate a ratio with a colon, keep it super-simple, like <c>3:2</c> or <c>a:b</c>.  Do not wrap it in parentheses or other decorations, since then the colon will be communicated literally in braille.  For example, the index of a subgroup, <c>[G:H]</c>, will not be confused with a ratio, due to the brackets.  But <c>(4:5)</c> will not be output in a conversion to braille in a way that communicates that it is a ratio.  If you keep your ratios simple, braille output will use special syntax designed for ratios.</p>
        </paragraphs>

        <paragraphs>
            <title>Function and Operator Names</title>
            <!-- https://tex.stackexchange.com/questions/84302/what-is-the-difference-of-mathop-operatorname-and-declaremathoperator -->

            <p>Common mathematical functions, like <m>\sin</m> (<c>\sin</c>) and <m>\det</m> (<c>\det</c>), are built into <latex/>, well-known, and commonly used.  Compare with the versions authored as simple sequences of letters <m>sin</m> and <m>det</m>, which <latex/> interprets (and typesets) as a product of three individual variables.</p>

            <p>Instead, use the <latex/> <c>\DeclareMathOperator</c> macro as we will illustrate.  Suppose you want to discuss the set of homomorphisms from the vector space <m>U</m> to the vector space <m>V</m>, <m>\Hom{U}{V}</m>.  Define the macros
            <cd>
                <cline>\DeclareMathOperator{\homop}{Hom}</cline>
                <cline>\newcommand{\Hom}[2]{\homop\left(#1,\,#2\right)}</cline>
            </cd> and employ as <c>\Hom{U}{V}</c>, which yields <m>\Hom{U}{V}</m>.  Compare with the no-macro, no-special-care, version, <m>Hom(U,V)</m>.  Grouping <c>Hom</c> as a unit will prevent <latex/> from rendering it as a product of three variables, use the correct font, and will preserve the meaning in Nemeth braille.  Notice that the <c>\homop</c> macro is never used in your source.</p>

            <p>Directly contradicting this general advice, Sean Fitzpatrick reports on 2021-01-06 that the <latex/> macro construction
                <cd>\newcommand{\foo}{\operatorname{foo}}</cd>
            behaves better in Asymptote diagrams than
                <cd>\DeclareMathOperator{\foo}{foo}</cd>
            So perhaps you need to define a second macro for use in Asymptote diagrams.</p>
        </paragraphs>

        <paragraphs>
            <title>Permutations in Cycle Notation</title>

            <p>The permutation in cycle notation, <m>(1246)(35)</m>, is difficult to distinguish from a product of two integers and gets entirely different treatment than intended as Nemeth braille.  And when the points of the permutation group involve multiple digits, some other notation will become necessary anyway.  Commas work, as in <m>(1,2,4,6)(3,5)</m>.  Or if commas look too cluttered, then spaces are possible, as in <m>(1\;2\;4\;6)(3\;5)</m>, where we have used the <latex/> medium space, <c> \; </c>.</p>
        </paragraphs>

        <paragraphs>
            <title>Text in Math</title>

            <p>We have discussed this one already, but it is important for a conversion to braille.  If you use a word inside of math, such as describing a condition for membership in a set, put any spaces inside of a <c>\text{}</c> macro, not on either side of it.  So <c>\text{ and }</c> is preferable to <c>\ \text{and}\ </c>.  Similarly, do not put any math inside a <c>\text{}</c> macro.  For example,<cd>
                <cline>\text{ for -3 \lt  x \lt  -2 }</cline>
            </cd>will lead to poor results due to the inequalties mixed in with the text.  A better version would be<cd>
                <cline>\text{ for }-3 \lt  x \lt  -2</cline>
            </cd>and now the numbers will be treated as mathematics.  Review <xref ref="text-in-mathematics"/> for more details.</p>
       </paragraphs>

        <paragraphs>
            <title>Math as Text</title>

            <p>Do not use symbols from mathematics in non-mathematical situations such as the <latex/> construction <c>73^\circ</c> to indicate a temperature in degrees, outside of a mathematical or scientific setting, such as in a <tag>poem</tag> about springtime weather.  In this particular case, we provide a <tage>degree</tage> element that can be used in non-mathematical contexts, so we can get 73<degree/>, which will behave well in a variety of conversions (and can also be used for latitude and longitude in your poem).  Similarly, we advocate writing ordinal numbers with text on the baseline, rather than a <latex/> construction like <c>2^\mathrm{nd}</c>.  So use 1st, 2nd, 3rd, 4th, etc.</p>

        </paragraphs>

        <paragraphs>
            <title>Avoid Nesting</title>
            <p>It may seem  convenient to nest custom macro definitions. For example:
                <cd>
                    <cline>\newcommand{\makered}[1]{{\color{red}{#1}}}</cline>
                    <cline>\newcommand{\MAKERED}[1]{\textbf{\makered{#1}}}</cline>
                </cd>
            The second macro definition uses the first macro. At least one <pretext/> conversion isolates macro defintions for use only on an as-needed basis. So here, if the author used <c>\MAKERED</c> without also using <c>\makered</c> close nearby, it would lead to an issue under that conversion, because <c>\makered</c> would be locally undefined. So we recommend defining each macro from the ground up. In this case:
                <cd>
                    <cline>\newcommand{\MAKERED}[1]{\textbf{\color{red}{#1}}}</cline>
                </cd>
            This also contradicts our advice above on operator names.</p>
        </paragraphs>
    </section>

    <section xml:id="topic-lists">
        <title>Lists</title>
        <idx>list</idx>
        <idx><h>list</h><h>label</h></idx>

        <introduction>
            <p>A <term>list</term> is an unusual construction, even if everybody knows exactly what one is.  We view the list itself as a container of various chunks of text, while those chunks of text are the <term>list items</term>.  Each item has a <term>marker</term> to identify it.</p>

            <p>Markup and processing is complicated by the possibility of a list item containing a list, resulting in <term>nested lists</term>.  We simplify this problem by <em>requiring</em> that a list appear within a paragraph (<tag>p</tag>), see <xref ref="topic-structure-in-paragraph"/>.  One of the three exceptions is the possibility to place a list into a block that earns a caption and a number, using the <tag>list</tag> element, see <xref ref="topic-named-list"/>.</p>

            <p>The final subsection contains some examples that you may wish to consult as you read this section.</p>
        </introduction>

        <subsection>
            <title>Ordered, Unordered, Description Lists</title>

            <p>An <term>ordered list</term> has items with markers that are naturally ordered (usually numerically or alphabetically).  We borrow from <init>HTML</init>, and use the <tag>ol</tag> tag to construct an ordered list.  Some commentators suggest an ordered list should only be used when the order of the content is important.  So the steps in a recipe would belong in an ordered list, but the shopping list when you go to the store need not be an ordered list.</p>

            <p>An <term>unordered list</term> has items with markers that have no inherent order and so are usually symbols like circles, disks, squares, <etc/>  We borrow from <init>HTML</init>, and use the <tag>ul</tag> tag to construct an unordered list.</p>

            <p>A <term>description</term> list has items that have <em>short</em> pieces of text as their markers.  We borrow from <init>HTML</init>, and use the <tag>dl</tag> tag to construct a description list.</p>

            <p>Ordered lists are used as part of <tag>objectives</tag> (<xref provisional="topic-objectives" />) and exercises (<xref ref="topic-exercises-solutions" />).  Any of the three lists may occur inside the <tag>list</tag> element (below, <xref ref="topic-named-list" />).  Otherwise, a list must occur within a paragraph, <tag>p</tag>.  This means that to place a list within a list item of another list, the list item must contain a paragraph.</p>
        </subsection>

        <subsection>
            <title>List Markers</title>

            <p>Do nothing, and your ordered and unordered lists will get sensible default markers.  They are consistent in the following sense.  If your list has two items, and each of the two items contains a list, then these two lists will use the same type of marker.</p>

            <p>For a description list, you author each marker as part of each list item, as discussed below in the discussion of list items.</p>

            <p>If you want to change how an ordered list is marked, then you use the <attr>marker</attr> attribute on the <tag>ol</tag>, whose value is a <term>format code</term>.  This string contains one of five codes (a single character), which may be surrounded by other characters, excluding the five codes.  For example <c>marker="(A)"</c> will produce uppercase letters wrapped in parentheses:  (A), (B), (C), <ellipsis />.  The extra formatting works well in a conversion to <latex/>, but is not possible technically in a conversion to <init>HTML</init>, so it should be considered decorative, and not relied upon for meaning.  The formatting does not carry through to the numbers of list items in cross-references.</p>

            <p>If you want to change how an unordered list is marked, then you use the <attr>marker</attr> attribute on the <tag>ul</tag>, whose value is a <term>format code</term>.  This string contains one of three codes in the table below.  Then every item of the list will have that symbol as its marker.</p>

            <sidebyside>
                <table>
                    <title>Ordered List Markers</title>
                    <tabular>
                        <row><cell>Code</cell><cell>Realization</cell></row>
                        <row><cell>1</cell><cell>Arabic numerals</cell></row>
                        <row><cell>a</cell><cell>Lowercase letters</cell></row>
                        <row><cell>i</cell><cell>Lowercase Roman numerals</cell></row>
                        <row><cell>A</cell><cell>Uppercase letters</cell></row>
                        <row><cell>I</cell><cell>Uppercase Roman numerals</cell></row>
                        <row><cell>0</cell><cell>Arabic numerals, from zero</cell></row>
                    </tabular>
                </table>
                <table>
                    <title>Unordered List Markers</title>
                    <tabular>
                        <row><cell>Code</cell><cell>Realization</cell></row>
                        <row><cell>disc</cell><cell>Filled small circle, aka a bullet</cell></row>
                        <row><cell>circle</cell><cell>Small circle</cell></row>
                        <row><cell>square</cell><cell>A square</cell></row>
                    </tabular>
                </table>
            </sidebyside>

            <p>Default marker types are assigned to each level of nested lists in the order shown in the table, and cycle back to the top of the table if necessary, though zero-based Arabic numerals will be skipped for ordered lists.</p>

            <p>Start with the defaults, and experiment as needed.  See the examples below for some extreme (and unwise) customizations of markers.</p>

            <p>For a description list, possible markers are more varied than what you can express within an attribute.  So the list item must have a <tag>title</tag> element (see below).  This should be very short text, and may contain inline mathematics.  It is often rendered in bold, so be aware that some markup may get lost.  Perhaps for obvious reasons, do not include footnotes, cross-references, or display mathematics.  The <tag>dl</tag> element has a <attr>width</attr> attribute, with possible values <c>narrow</c>, <c>medium</c>, and <c>wide</c>.  The default is <c>narrow</c>.  This is a <em>hint</em> about how much text you have in these markers, and in certain presentations may make better use of horizontal space on a page.</p>
        </subsection>

        <subsection>
            <title>List Items</title>

            <p>So now you have a list all organized as a container.  What do you put in it?  List items, using the <tag>li</tag> tag, again borrowed from <init>HTML</init>, and independent of the type of list.</p>

            <p>A list item could be really simple, maybe just one or two words.  Then you can use, and conceptualize, an <tag>li</tag> element as not much different from a <tag>p</tag> element, and the rules about content are not much different.  Even several full sentences, with some intermediate displayed mathematics, is fine.</p>

            <p>But once you want two paragraphs in a list item, then you need to structure the contents of the item.  So a list item might have five paragraphs in it, requiring five <tag>p</tag> elements.  Notice that this is how you nest lists.  Make a list item, include a paragraph, then put the subsidiary list into the paragraph.  Indeed, this is the only way to nest lists.  A consequence of this is that the only way to have an unstructured list item is if it is a terminal item, like the leaf of a tree.</p>

            <p>Other items may be interspersed among the paragraphs of a list item, such as a chunk of verbatim text delimited by a <tag>pre</tag> tag.  But anything with a number, such as a <tag>figure</tag> or <tag>remark</tag> is banned, in part because the consequences for numbering and organization become too complicated.  Imagine a remark, and a paragraph of the remark has a list.  Fine so far.  But if the items of that list can again contain remarks, the possibilities become endless.  You should be able to include non-textual items, like an <tag>image</tag>, and work is underway to improve this.  You can use a <tag>sidebyside</tag> in a structured list item, which can in turn hold an <tag>image</tag>, <tag>tabular</tag>, or similar.  But you cannot place items in such a <tag>sidebyside</tag> that are numbered, so a <tag>figure</tag> or <tag>table</tag> is not possible.  A general rule is no numbered components in a list item.  Computational components, such as <tag>sage</tag> are also banned from list items due to the difficulty of converting them into electronic computational notebooks with a relatively flat structure.</p>

            <p>A list item of a description list must have a <tag>title</tag> element, to provide the text of the marker.  Now that the list item has some structure, the remainder must also be structured, typically with some paragraphs, as discussed above.  In other words, the earlier option of employing an <tag>li</tag> element just like a <tag>p</tag> element is not available in a description list.  Further, given the complexity of presenting a description list, it can <em>only be a top-level list</em>.  It can contain the two other types nested within its list items.</p>

            <p>For ordered and unordered lists, you may optionally include a <tag>title</tag> when you have structured the <tag>li</tag>.  This will be rendered as a heading of sorts for the list item, though the only distinction might be a change to an italic or oblique font.  As an example, this might be a good way to author a Frequently Asked Questions (<init>FAQ</init>).</p>

            <p>Note that a list item holding <em>only</em> an <tag>m</tag> element will get special treatment.  See <xref ref="math-list-items"/>.</p>
        </subsection>

        <subsection xml:id="topic-list-item-target">
            <title>Cross-References to List Content</title>

            <p>Note that a list is a container, so it cannot be the target of a cross-reference, and so the three types of lists cannot have an <attr>xml:id</attr> attribute.  But you may well be able to point at some other structure (<eg />, a <tag>remark</tag>) with a paragraph containing a list of interest.  If this seems overly restrictive, read below about named lists.</p>

            <p>By contrast, a list item, <tag>li</tag>, is not a container, and does contain content.  Further, a list item of an ordered list has a marker that is natural text for a cross-reference.  So in this situation, the list item can have an <attr>xml:id</attr> attribute.  But note that the <q>number</q> of a list item of an ordered list, which is nested inside a list item of an unordered list, is not defined, so a cross-reference by number can fail.</p>

            <p>The <q>number</q> of a list item, mostly for the purposes of a cross-reference, is the concatenation of all of the individual markers in the containing lists, outermost first.  For example, from the example lists below, the list item with content <q>Walleye</q> has number <xref ref="walleye" text="local" />.  These are indivisible, there is no way to get a component, excepting leading subsequences obtained by using an <attr>xml:id</attr> on a containing list item.  Note that the format codes never become part of the number.</p>
        </subsection>

        <subsection>
            <title>Lists in Columns</title>
            <idx><h>list</h><h>columns</h></idx>

            <p>You can control the number of columns used to layout an ordered or unordered list (but not a description list).  On the <tag>ol</tag> or <tag>ul</tag> use a <attr>cols</attr> attribute with values <c>2</c> through <c>6</c>.  (<c>1</c> is the default.)</p>

            <p>We do not yet (2018-03-28) have enough technical confidence to allow an author to specify a row-major order versus a column-major order for the layout.  So understand that this is can be an implementation choice for a particular conversion, and can vary across implementations.  If this is critical to conveying <em>meaning</em>, and not an aesthetic preference, then maybe consider using a <tag>table</tag> or <tag>tabular</tag> (<xref ref="topic-tabular" />).</p>

            <note>
                <title>Use Only a Few Columns for Lists</title>

                <p>Anything more than three columns tends to get very crowded horizontally.  Think twice about using more than that, and realize that six columns should be a ridiculously generous upper limit, and not a promise of good behavior in final output.</p>
            </note>
        </subsection>

        <subsection>
            <title>Exceptional Lists</title>

            <p>We use the tags for lists in a few situations outside of anonymous lists inside paragraphs and named lists.  These include the items within an objectives, subparts of an exercise, and within panels of a side-by-side.  See those topics to learn about subtle differences in use.</p>
        </subsection>

        <subsection>
            <title>Examples of Lists</title>

                <p>To illustrate this section, we offer three too-elaborate examples.  Take these as compact examples of what is possible, and not best practice in your writing.  We also use these to illustrate cross-references to list items, see <xref ref="topic-cross-reference-list-item" />.</p>

                <p>We have a paragraph that begins with anonymous list of species that live in water (maybe partially), which necessarily is placed inside a paragraph.  The roman numerals purposely do not have any extra adornment in the <latex /> version (but may for <init>HTML</init> output).
                <ol marker="1)">
                    <li>
                        <p>Amphibians
                            <ol marker="a.">
                                <li>Frog</li>
                                <li>Salamander</li>
                                <li>Newt</li>
                                <li>Toad</li>
                            </ol>
                        </p>
                    </li>
                    <li>
                        <p>Freshwater Sport Fish
                            <ol marker="I">
                                <li xml:id="walleye">Walleye</li>
                                <li>Bass</li>
                                <li xml:id="anon-list-target">
                                    <title>Exquisite Fish</title>
                                    <p>Trout</p>
                                </li>
                            </ol>
                        </p>
                    </li>
                    <li>
                        <p>Saltwater Sport Fish
                            <ol marker="(A)">
                                <li>Salmon</li>
                                <li>Halibut</li>
                                <li>Marlin</li>
                            </ol>
                        </p>
                    </li>
                </ol>
                Within the same paragraph, we transition to an unordered, two-column, list of some germs:
                <ul cols="2">
                    <li>
                        <p>Bacteria
                            <ul>
                                <li><taxon>Staphylococci</taxon></li>
                                <li><taxon>Streptococci</taxon></li>
                                <li><taxon>Salmonella</taxon></li>
                            </ul>
                        </p>
                    </li>
                    <li>
                        <p>Viruses
                            <ul>
                                <li><taxon>Varicellovirus</taxon></li>
                                <li><taxon>Orthopoxvirus</taxon></li>
                            </ul>
                        </p>
                    </li>
                </ul>
                This sentence concludes our (small) paragraph on small and large organisms.</p>

                <p>A named list, only to test cross-references.</p>

                <list xml:id="named-list">
                    <title>A two-deep ordered list</title>
                    <ol marker="A:">
                        <li>
                            <p>
                                <ol marker="i.">
                                    <li>A and i</li>
                                    <li>A and ii</li>
                                </ol>
                            </p>
                        </li>
                        <li>
                            <p>
                                <ol marker="(a)">
                                    <li>B and a</li>
                                    <li>B and b</li>
                                    <li xml:id="named-list-target">
                                        <title>A Test Title</title>
                                        <p>B and c</p>
                                    </li>
                                </ol>
                            </p>
                        </li>
                        <li>
                            <p>
                                <ol marker="&lt;I&gt;">
                                    <li>C and I</li>
                                    <li>C and II</li>
                                    <li>C and III</li>
                                </ol>
                            </p>
                        </li>
                    </ol>
                </list>

                <p>An example of a description list, anonymously in a paragraph.
                <dl width="narrow">
                    <li>
                        <title>Red</title>
                        <p>The color of the sun at sunset.</p>
                    </li>
                    <li>
                        <title>Blue</title>
                        <p>The color of a clear sky.</p>
                    </li>
                    <li>
                        <title>Aqua</title>
                        <p>The color of shallow tropical waters.</p>
                    </li>
                    <li xml:id="description-list-math-title">
                        <title><m>x^2 + y^2</m></title>
                        <p>Definitely not a color</p>
                    </li>
                </dl></p>
        </subsection>

        <conclusion>
            <remark>
                <title>Best Practice</title>

                <p>Lists are a very attractive device.  Hopefully the discussion above has convinced you that they are more complicated than they first appear.  Think carefully before using one, and consider if some other structure (<tag>paragraphs</tag>, <tag>sidebyside</tag>, a subdivision) might do a better job of organizing and communicating your meaning.  And if a list is really necessary, consider if it should be named or anonymous, heavily-nested or nearly-flat, with columns, or with long or short content in the items.  Cross-references <em>from</em> the items of a list <em>to</em> more complicated structures is another device that works well.</p>
            </remark>
        </conclusion>

    </section>

    <section xml:id="topic-interactive-exercises">
        <title>Interactive Exercises</title>
        <idx>interactive exercises</idx>
        <idx><h>exercise</h><h>interactive</h></idx>

        <introduction>
            <p><pretext/> has markup for a variety of interactive problem types, described individually in the subsections to follow.  Generally, for a regular <init>HTML</init> build (<xref ref="online-html"/>), these will be interactive, informing the reader when their answer is correct, and providing feedback when their answer is not correct.  When <init>HTML</init> is built to host on a Runestone server (<xref ref="runestone"/>), then student progress as part of a course will be recorded on the server.  Some features, which will be noted below, such as execution of computer code, is more capable on a Runestone server.</p>

            <p>Generally, an interactive exercise is authored much like a <q>regular</q> <tag>exercise</tag> (<xref ref="overview-exercises"/>) with <tag>statement</tag>, <tag>hint</tag>, <tag>answer</tag>, <tag>solution</tag>.  However, there is also some additional markup which serves as a <term>signal</term> that the exercise is more than a short-answer, or free-response, question.  Usually, but not always, this signal is an additional element following <tag>statement</tag>.  One consequence of this is that all but one type of interactive exercise will require a <tag>statement</tag> element to contain the question text.</p>

            <p>Each type of interactive question has a <term>static</term> version for use in output formats like print, <init>PDF</init>, or braille.  Details are given below.  Note that since the ability for instant evaluation of a reader's answer means an author provides the solution and other feedback, this can then be incorporated into a static version as an automatically-generated <tag>answer</tag> and/or <tag>solution</tag> (in addition to any others an author provides).  Note that an author can provide a <tag>hint</tag> for use in all output formats, but there are not any  automatically-generated <tag>hint</tag> for static versions of interactive problems.  Visibility of these solutions can be controlled via the mechanism applicable to all exercises, see <xref ref="exercise-component-visibility"/>.</p>

            <p>Note the opportunity to provide feeback to the reader using a <tag>feedback</tag> element in various locations.  These are generally optional, but highly encouraged as a way to improve the quality of your reader's experience.</p>
        </introduction>

        <subsection xml:id="true-false-exercises">
            <title>True/False Exercises</title>
            <idx>true/false</idx>
            <idx><h>interactive exercises</h><h>true/false</h></idx>
            <idx><h>exercise</h><h>interactive</h><h>true/false</h></idx>

            <p>A True/False exercise <em>must</em> have a <tag>statement</tag> element, and this element <em>must</em> have a <attr>correct</attr> attribute, whose value is <c>yes</c> or <c>no</c> (there is no default value).  That's it.  The presence of the <attr>correct</attr> attribute is the signal that this is a True/False exercise.</p>

            <p>The text of the statement is the assertion the reader must determine is true or not.  The <attr>correct</attr> attribute is how an author describes if the statment is true (<c>yes</c>) or false (<c>no</c>).  This is enough information for a conversion to formulate a version of the question.  An optional <tag>feedback</tag> element may follow the <tag>statement</tag>, and should provide more thatn a binary explanation of the exercise.</p>

            <p>Presentation as an interactive element will vary cosmetically, according to the output type targeted.</p>

            <p>A static version gets an automatic <tag>answer</tag> that is simply <q>True</q> or <q>False</q>.  The automatic <tag>solution</tag> is the same, plus the content of <tag>feedback</tag>.</p>
        </subsection>

        <subsection xml:id="multiple-choice-exercises">
            <title>Multiple-Choice Exercises</title>
            <idx>multiple-choice exercises</idx>
            <idx><h>interactive exercises</h><h>multiple-choice</h></idx>
            <idx><h>exercise</h><h>interactive</h><h>multiple-choice</h></idx>

            <p>A multiple-choice exercise is signaled by a <tag>choices</tag> element (plural) following a <tag>statement</tag> and preceding an optional <tag>hint</tag>.  The <tag>choices</tag> element is structured by a sequence of <tag>choice</tag> elements, whose content is a potential answer for the reader to choose.  So the <tag>statement</tag> is the prompt or question, and the <tag>choice</tag> are the possible answers.</p>

            <p>At least one <tag>choice</tag> has an attribute <attr>correct</attr> set to the value <c>yes</c>.  The default value of <attr>correct</attr> is <c>no</c>.  There may be several correct answers, indicated with this attribute.  The presentation as an exercise with one answer or many is automatic.  However, in the event there is exactly one correct answer, but you wish the reader to consider the possibility of multiple correct answers, you may set the <attr>multiple-correct</attr> attribute on the <tag>choices</tag> element to <c>yes</c>.  The default value is <c>no</c>.</p>

            <p>Each <tag>choice</tag> element must be further structured with a <tag>statement</tag> and a <tag>feedback</tag>, which each can contain items such as paragraphs (<tag>p</tag>).  In this way, the highly-encouraged feedback can be associated with each correct and incorrect choice.</p>

            <p>The order of the <tag>choice</tag> as authored, is the order they will be given in a static version.  To present the choices in different orders in an interactive version, set the <attr>randomize</attr> attribute on the <tag>choices</tag> element to <c>yes</c>.</p>

            <p>An automatic <tag>answer</tag> for the static version is simply the list markers for the correct choices.  An automatic <tag>solution</tag> has an indication for each choice if it is correct or incorrect, along with the choice's feedback.</p>
        </subsection>

        <subsection xml:id="parsons-problems">
            <title>Parsons Problems</title>
            <idx>Parsons problems</idx>
            <idx><h>interactive exercises</h><h>Parsons problems</h></idx>
            <idx><h>exercise</h><h>interactive</h><h>Parsons problems</h></idx>
            <idx>mixed-up blocks exercises</idx>
            <idx><h>interactive exercises</h><h>mixed-up blocks</h></idx>
            <idx><h>exercise</h><h>interactive</h><h>mixed-up blocks</h></idx>

            <p>Parsons problems are named for Dale Parsons, one of their creators, along with Patricia Haden.  They could also be called <term>mixed-up blocks</term>.  A reader is presented with a set of blocks containing text, either computer code or natural language, and their goal is to assemble the blocks into a correct order.  This could be a computer problem with a stated purpose, or could be a logical argument such as proof, or it could be a procedure such as a recipe.  An interactive drag-and-drip interface is a very efficient presentation for a reader.</p>

            <p>Similar to multiple-choice exercises, a <tag>statement</tag> is followed by a <tag>blocks</tag> element containing a sequence of <tag>block</tag> elements.  The <tag>blocks</tag> element is teh signal that this is a Parsons problem.  The <tag>blocks</tag> element may have several attributes:<ul>
                <li><attr>numbered</attr> set to <c>left</c> or <c>right</c> indicates the blocks should be numbered, and on which side the numbers go.  The default value is <c>no</c>.</li>
                <li><attr>language</attr> set to <c>natural</c> indicates the text of the blocks is natural language, while the use of a computer language should be indicated by naming the actual language employed.  A list of languages will soon be added in <xref ref="topic-program-console"/>.  The default is <c>natural</c>.</li>
                <li><attr>indentation</attr> set to <c>hide</c> indicates that a computer code exercise will not include indentation common to each line of a block.  In other words, the problem is slightly harder, as the interactive interface will require the reader to adjust the block horizontally to provide common indentation for the block.  The default is <c>show</c>.</li>
            </ul></p>

            <p>A <tag>block</tag> that has natural content is authored as usual, with a sequence of paragraphs (<tag>p</tag>) or similar.  If the content is a computer language, then it should be authored as a sequence of lines, using the <tag>cline</tag> element, which allows for precise interpretation of indentation and non-standard characters.  Include <em>all</em> indentation necessary for each line, no matter how <attr>indentation</attr> is set.  The content of the blocks, arranged properly, should form a syntactically correct program.  If the reader is to provide indentation, <pretext/> will strip away the common amount of indentation.</p>

            <p>A block may be a <term>distractor</term>, meaning it is not to be used at all in the solution.  Indicate this with a <attr>correct</attr> attribute on the <tag>block</tag> set to <c>no</c> (the default being <c>yes</c>).  Furthermore, a given block of the solution can be authored with several alternatives, only one of which is correct.  Indicate this by structuring a <tag>block</tag> with a sequence of <tag>choice</tag>.  Each <tag>choice</tag> should be authored similarly to a <tag>block</tag>, and the one correct choice should have the <tag>correct</tag> attribute set to <c>yes</c> (the default being <c>no</c>).</p>

            <p>The blocks should be authored in the correct order and the interactive interface will control the randomization.  A block that is a distractor may be placed in any location amidst the other blocks.  Each block should have an <tag>@order</tag> attribute that is a whole number, counting from 1.  This is the fixed, mixed-up, order that will be presented in any static rendition.  In static versions, sequences of blocks are in lists, which are numbered if the attribute has been set, but the left/right distinction is lost<mdash/>all numbers are to the left.  An automatic <tag>answer</tag> is provided if blocks are numbered, and it is just the block numbers in the correct order.  An automatic <tag>solution</tag> is always generated with the text of the blocks listed in the correct order.  For an exercise with computer code, the <pretext/> <tag>program</tag> element and the exercise's <attr>language</attr> attribute will produce a syntax-highlighted listing.</p>

            <p>There is no provision for a <tag>feedback</tag> element.  Further explanation may be provided in a <tag>hint</tag>, <tag>answer</tag>, or <tag>solution</tag>.  Also, a good interactive interface can provide assistance to a reader by telling them if they have too few or too many blocks, or combining or removing blocks, and so on.</p>

            <p>As of 2022-06-14 work is underway to relax the strict ordering assumed of the blocks.  So there will be extra markup to specify a poset or directed acyclic graph on the blocks.</p>
        </subsection>

        <subsection xml:id="horizontal-parsons-problems">
            <title>Horizontal Parsons Problems</title>
            <idx><h>Parsons problems</h><h>horizontal</h></idx>
            <idx><h>interactive exercises</h><h>horizontal Parsons problems</h></idx>
            <idx><h>exercise</h><h>interactive</h><h>horizontal Parsons problems</h></idx>
            <idx><h>mixed-up blocks exercises</h><h>horizontal</h></idx>
            <idx><h>interactive exercises</h><h>horizontal mixed-up blocks</h></idx>
            <idx><h>exercise</h><h>interactive</h><h>horizontal mixed-up blocks</h></idx>

            <p>A <term>horizontal Parsons problem</term> is very similar to the traditional <em>vertical</em> problems just described in <xref ref="parsons-problems"/>.  Except they are horizontal.  Which means the blocks are very short (a word or symbol) and they are rearranged by the reader to form a horizontal bit of text.  They are ideal for constructing a single line of computer code, such as a regular expression, or a short sentence.  While similar, they have a few features which are different.</p>

            <p>To indicate a horizontal problem, set the <attr>layout</attr> attribute on the <tag>blocks</tag> element to the value <c>horizontal</c>.  The default value is <c>vertical</c> and so is not necessary for the traditional versions.</p>

            <p>The syntax for blocks is the same, and they are authored in an order that yields a correct answer.  The use of an <attr>order</attr> attribute on each <tag>block</tag> indicates a rearrangment to be used for a static version.  Blocks may be reused.  To do this, place an <attr>xml:id</attr> on a single instance of a block to be reused.  Then, to indicate its reuse as part of a correct version, use a <attr>ref</attr> attribute on a <tag>block</tag>.  Since the duplicate instance is not shown to the reader, the use of <attr>order</attr> and <attr>ref</attr> is mutually-exclusive.  You can set the <attr>reuse</attr> attribute on the <attr>blocks</attr> element to the value <c>yes</c> to force the interface to allow the reader to reuse blocks, even if there is no duplication in the correct version.  Otherwise, the interface reacts to the presence or absence of blocks with the <attr>ref</attr> attribute.</p>

            <p>Distractors may be included in the same manner as for vertical Parsons problems, by setting the <attr>correct</attr> attribute on a <tag>block</tag> to the value <c>no</c>.  The default is <c>yes</c>.  It does not make much sense to indicate a reusable block (in either form) as a distractor, so don't.</p>

            <p>Another option on the <attr>blocks</attr> element is the <attr>randomize</attr> attribute.  The default value is <c>yes</c>.  When the value is set to <c>no</c>, then the blocks are always presented to the reader in the same order, which is the one given by the <attr>order</attr> attribute.</p>

            <p>As of 2022-11-28, the implemenation of these problems assumes that the blocks rearrange to be computer code.  So you <em>can</em> set the <attr>language</attr> attribute on the <tag>exercise</tag> element to <c>natural</c>, but it will not have much effect.  Markup like <tag>em</tag> on the text of a block will be unpredictable, as will attempts to use mathematics.  And the text of blocks will always be in a monospaced font, perhaps with some syntax highlighting if <attr>language</attr> is set properly.</p>
        </subsection>

        <subsection xml:id="matching-exercises">
            <title>Matching Exercises</title>
            <idx>matching exercises</idx>
            <idx><h>interactive exercises</h><h>matching</h></idx>
            <idx><h>exercise</h><h>interactive</h><h>matching</h></idx>

            <p>A <term>matching exercise</term> asks a reader to pair a <term>premise</term> with a <term>response</term>.  Similar to multiple-choice exercises and Parsons problems, a <tag>matches</tag> element follows a <tag>statement</tag> and this is the signal.  The <tag>matches</tag> element is structured as a sequence of <tag>match</tag> elements, each of which has a <tag>premise</tag> element and the matching <tag>response</tag> element.  Since the content of each premise and response is best kept short and simple as a phrase, the elements may also be simple phrases without the additional structure of <tag>p</tag> elements, or similar.  That's it.</p>

            <p>An interactive interface should randomize at least one of the lists of premises and responses, consulting the authored version for the correct pairings.  For a static version, an author should put an <tag>order</tag> element on each <tag>match</tag> whose value is a whole number, starting from 1.  Then the <tag>premise</tag> will appear in the authored order, while the <tag>response</tag> will be re-ordered according to the attribute.</p>

            <p>A single <tag>feedback</tag> element may be given, as a peer of <tag>statement</tag>, in addition to authored <tag>hint</tag>, <tag>answer</tag>, or <tag>solution</tag>.  For a static version an automatic <tag>solution</tag> presents the problem in the order the <tag>match</tag> were authored.</p>
        </subsection>

        <subsection xml:id="clickable-area-exercises">
            <title>Clickable Area Exercises</title>
            <idx>clickable area exercises</idx>
            <idx><h>interactive exercises</h><h>clickable area</h></idx>
            <idx><h>exercise</h><h>interactive</h><h>clickable area</h></idx>
            <idx>select text exercises</idx>
            <idx><h>interactive exercises</h><h>select text</h></idx>
            <idx><h>exercise</h><h>interactive</h><h>select text</h></idx>

            <p><term>Clickable Area</term> is a misnomer, assuming an interactive version of this type of problem.  Perhaps <q>Select Text</q> would be better.  In any event <q>area</q> is not meant to connote a geometric notion, instead this is about a sequence of characters, either in natural language or in computer code.</p>

            <p>A <tag>statement</tag> is a prompt, describing which sort of areas should be selected by the reader.  Such as: Locate all the nouns in the following paragraph. This is followed by an <tag>areas</tag> element, which is the signal for this type of exercise.  The <tag>areas</tag> element holds either (a) <pretext/> paragraphs or similar, or (b) a sequence of <tag>cline</tag>, understood to be program code.  In the latter case, a <attr>language</attr> attribute on the <tag>areas</tag> element will enable the right syntax highlighting in some output formats.</p>

            <p>Within the content of the <tag>areas</tag> element an <tag>area</tag> element can be used to surround a run of characters.  These cannot cross <init>XML</init> boundaries, such as a <tag>cline</tag> or <tag>p</tag>.  A <attr>correct</attr> attribute, with values <c>yes</c> or <c>no</c>, indicates the text is to be selected (clicked on) or that it is a distractor (tempting to click on).  The default is <c>yes</c>, so only distractors need to be indicated.</p>

            <p>A single overall <tag>feedback</tag> may be placed following the <tag>areas</tag> element.</p>

            <p>Now an interactive version will allow the reader to click on and off the marked areas of text, and provide information about which are correct and which are not, in addition to general feedback.</p>

            <p>Generally, a static version of the problem will not be clickable.  <tage>wink</tage>  So your prompt might say something generic like <q>select</q> or <q>locate</q> since a reader might work the problem on paper by circling or underlining the areas.  A static version includes an automatic <tag>answer</tag> which is a list of the correct areas as text, followed by a list of the incorrect areas as text.  An automatic <tag>solution</tag> repeats the text in the <tag>areas</tag> element, and uses (accessible) visual cues to note the correct and incorrect text.</p>
        </subsection>

        <subsection xml:id="fill-in-exercises">
            <title>Fill-in-the-Blanks Exercises</title>
            <idx>fill-in exercises</idx>
            <idx><h>interactive exercises</h><h>fill-in </h></idx>
            <idx><h>exercise</h><h>interactive</h><h>fill-in </h></idx>

            <p>As of 2022-06-14 a major effort is underway to provide comprehensive markup for <term>fill-in-the-blank</term> problems.  Until then, there is transitional markup intended only to supply a migration path for projects originally authored for Runestone servers (<xref ref="runestone"/>).  So (a) our documentation is sparse, and (b) there will be no backward-compatible improvements.  So in particular, new projects should wait for the new markup.  Also, studying examples may be a useful way to augment what is described here.</p>

            <p>A <tag>statement</tag> is enriched with empty <tage>var</tage> elements which will render as the blanks in the problem.</p>

            <p>The signal for a fill-in problem is a <tag>setup</tag> element containing a sequence of <tag>var</tag> elements.  Each <tag>var</tag> contains a sequence of <tag>condition</tag> elements that describe possible values (via regular expressions) which might appear in a blank.  The first condition describes the correct answer(s), and then the subsequent conditions are descriptions of probable incorrect answers.  Each <tag>condition</tag> has a <tag>feedback</tag>.  So the first condition to match an entry provided via a blank will be noted as correct or incorrect, and its feedback will be relayed.</p>

            <p>The <tag>var</tag> of the statement and the <tag>var</tag> of the setup are in a 1-1 correspondence, which establishes how the setup is associated with a blank.  The <tag>var</tag> in the statement may have a <attr>width</attr> attribute whose value controls how many characters would be visible in the blank.</p>

            <p>A static version will include an automatic <tag>solution</tag> which <q>fills in</q> each blank with a correct answer, and then duplicates the feedback text, in order.</p>
        </subsection>

        <subsection xml:id="coding-exercises-projects">
            <title>Coding Exercises and Projects</title>
            <idx>coding exercises</idx>
            <idx><h>interactive exercises</h><h>coding</h></idx>
            <idx><h>exercise</h><h>interactive</h><h>coding</h></idx>

            <p>A <term>Coding Exercise</term> is formed by placing a <tag>program</tag> element <em>after</em> the <tag>statement</tag> of an <tag>exercise</tag>.  The main distinction is that this is a signal that the interactivity is provided by the <tag>program</tag>, and therefore the <tag>exercise</tag> will not be understood as a short answer exercise (<xref ref="short-answer-exercises"/>).  For this reason, the <tag>program</tag> should be requested as one of the interactive realizations (<xref ref="interactive-program-codelens"/>, <xref ref="interactive-program-activecode"/>).</p>

            <p>The identical construction may be used with any PROJECT-LIKE (<xref ref="block-summary"/>) such as an <tag>activity</tag>.  As of 2022-06-17 this only applies to the form that uses a <tag>statement</tag>, but will soon also apply to <tag>task</tag> within PROJECT-LIKE.</p>

            <p>Realize that it is always possible to place a <tag>program</tag> <em>inside</em> of a <tag>statement</tag>, and if there is no <tag>program</tag> that is <em>after</em> the <tag>statement</tag> (or another signal for an interactive exercise) then the <tag>exercise</tag> will be classified as a short-answer exercise.  It may be instructive to understand that in a static realization, a <tag>program</tag> at the <em>end</em> of a <tag>statement</tag> may be visually identical to an <tag>exercise</tag> where the <tag>program</tag> is <em>after</em> the <tag>statement</tag>, even though the former is a short-answer exercise and the latter is a coding exercise (which will render differently for different output formats and hosting platforms).</p>
        </subsection>

        <subsection xml:id="short-answer-exercises">
            <title>Short Answer Exercises</title>
            <idx>short answer exercises</idx>
            <idx><h>interactive exercises</h><h>short answer</h></idx>
            <idx><h>exercise</h><h>interactive</h><h>short answer</h></idx>
            <idx>free-response exercises</idx>
            <idx><h>interactive exercises</h><h>free-response</h></idx>
            <idx><h>exercise</h><h>interactive</h><h>free-response</h></idx>
            <idx>essay question exercises</idx>
            <idx><h>interactive exercises</h><h>essay question</h></idx>
            <idx><h>exercise</h><h>interactive</h><h>essay question</h></idx>

            <p><term>Short Answer</term> questions might also be known as <term>Free Response</term> questions, or <term>Essay</term> questions.  A <pretext/> <tag>exercise</tag>, or a PROJECT-LIKE that is not structured by <tag>task</tag>, is implicitly of this nature.  But you still need to signal that you wish such a problem to be interactive, typically with a text box where the student can enter an answer.  So, similar to other types of exercises, add a <tage>response</tage> element immediately after the <tag>statement</tag>.  (We expect to add attributes for this element to influence the behavior of the text box.)</p>

            <p>In an online setting, it is a simple matter to provide a place for a reader to type in an answer, response, or essay.  But then what?  Until artificial intelligence is brought to bear, somebody (not something), such as an instructor for a course of enrolled students, will need to read a response and provide a score and/or comments that can be saved and distributed back to the students.  So the first prerequisite is that <init>HTML</init> output is being built for a capable platform.  As of 2022-06-15, this means a Runestone server (<xref ref="runestone"/>), but it could easily also be a <webwork/> server.</p>

            <p>A publisher can control when a response area is created in <init>HTML</init> output (<xref ref="online-short-answer-responses"/>).  The default is to only have this area present when it is possible for a response to be graded and scored.  However, an option will cause a response box to be created always.   A reader can reflect on the question by typing in a response, and the text will be saved <em>on that particular device</em> only.  When it is impossible for a response to be graded, placeholder text will warn the reader.</p>
        </subsection>
    </section>

    <section xml:id="topic-exercises-solutions">
        <title>Exercises and their Solutions</title>

        <introduction>
            <p>As described in <xref ref="overview-exercises"/> an <tag>exercise</tag> can be placed in many different locations, and a <tag>project</tag> has similar features.  It is critical to understand that you want to author any hints, answers, or solutions immediately following the statement of an exercise.  If your <pretext/> source is public, and you would like to keep some aspects of the solutions private, then read <xref ref="instructor-solutions"/> for some practical advice.  See <xref ref="private-solutions-file"/> as well for information on creating a standalone <pubtitle>Solutions Guide</pubtitle>.  We concentrate here on techniques for controlling visibility and location of the components of exercises within your primary output.</p>
        </introduction>

        <subsection>
            <title>Exercises, Original Versions</title>

            <p>In a conversion to <init>HTML</init>, a <tag>hint</tag> to an <tag>exercise</tag> renders nicely in a knowl, right below the exercise statement.  For a conversion to <latex/>/<init>PDF</init>/print, you might wish to display a hint, visibly, as part of the exercise, or you may wish to park the hint in a <pubtitle>Hints to Exercises</pubtitle> division in the back matter.  To control visibility of the components of exercises (and projects) there are twenty switches you can use.  See <xref ref="exercise-component-visibility"/> for more.</p>

        </subsection>

        <subsection xml:id="topic-solutions-division">
            <title>Exercises, Solutions Versions</title>

            <p>Exercises, and their components may be duplicated easily, to provide a back matter appendix with solutions, or within each division.  For example, you can easily create an end-of-chapter division with solutions to every inline exercise throughout the chapter and solutions to all the divisional exercises from each section of the chapter.</p>

            <p>The <tag>solutions</tag> element will create an entire division, semi-automatically.  You can provide a <tag>title</tag>, an <tag>introduction</tag>, and <tag>conclusion</tag>.  The remaining content is statements, hints, answers, and solutions to exercises (and projects).</p>

            <p>If <tag>solutions</tag> is a child of <tag>backmatter</tag>, then an appendix will be generated, and covering <tag>exercise</tag> from the entire <tag>book</tag> or <tag>article</tag>.  If <tag>solutions</tag> is a child of a division, then a new subdivision is created and the scope is all <tag>exercise</tag> for the division.  So, for example, a <tag>solutions</tag> placed inside a <tag>chapter</tag> will render as a division that looks like a <tag>section</tag> and will include components of all the exercises (at any level) contained within the <tag>chapter</tag>.</p>

            <p>An optional attribute is <attr>scope</attr>, whose value is the <attr>xml:id</attr> of a division.  Then it is this division which is scanned for exercises and their solutions (rather than defaulting to the enclosing parent of the <tag>solutions</tag>).  This allows for much greater flexibility.  For a simple example, suppose a <tag>chapter</tag> contains two <tag>exercises</tag>, and you want to have two <tag>solutions</tag> within the chapter, each covering just one of the <tag>exercises</tag>.  This can be accomplished with <attr>scope</attr>, and you can arrange the four divisions (two <tag>exercises</tag> and two <tag>solutions</tag>) however you wish within the chapter.</p>

            <p>An author filters the types of exercises, and their components, through attributes of the <tag>solutions</tag> element.  For example<cd>
                <cline>reading="hint answer"</cline>
            </cd>would cause every <tag>exercise</tag> within each <tag>reading-questions</tag> to have its <tag>hint</tag> and <tag>answer</tag> displayed, but not its <tag>statement</tag> nor its <tag>solution</tag>.  These are the attribute names and the possible values.</p>

            <table>
                <title>Attributes (left) and Values (right) for <tag>solutions</tag> element</title>

                <tabular>
                    <row>
                        <cell><c>inline</c></cell>
                        <cell><c>statement</c></cell>
                    </row>
                    <row>
                        <cell><c>divisional</c></cell>
                        <cell><c>hint</c></cell>
                    </row>
                    <row>
                        <cell><c>reading</c></cell>
                        <cell><c>answer</c></cell>
                    </row>
                    <row>
                        <cell><c>worksheet</c></cell>
                        <cell><c>solution</c></cell>
                    </row>
                    <row>
                        <cell><c>project</c></cell>
                        <cell/>
                    </row>
                </tabular>
            </table>

            <p>So, <pretext/> source like<cd>
                <cline>&lt;section&gt;</cline>
                <cline>  &lt;title&gt;Tropical Bird of Paradise&lt;title&gt;</cline>
                <cline>  ...</cline>
                <cline>  &lt;solutions worksheet="hint solution" project="hint solution"&gt;</cline>
                <cline>    &lt;title&gt;Hints and Solutions to Worksheets and Projects&lt;title&gt;</cline>
                <cline>  &lt;/solutions&gt;</cline>
                <cline>&lt;/section&gt;</cline>
            </cd>would generate an entire subsection with hints and solutions to every worksheet and every project, located anywhere (including in subsections and subsubsections) in the section on Birds of Paradise.</p>

            <p>
                An <attr>admit</attr> attribute specifies some feature of an exercise's serial number
                to determine whether its components are admitted into the solutions division.
                (For example, the <q>serial number</q> of Exercise 1.2.3 is 3.)
                Presently, the only options are <c>odd</c>, <c>even</c>, and the default <c>all</c>.
                So, <pretext/> source like
                <cd>&lt;solutions divisional="answer" admit="odd"&gt;</cd>
                would generate a subsection with answers to only the odd-numbered divisional exercises.
            </p>

        </subsection>
    </section>

    <section xml:id="topic-images">
        <title>Images</title>
        <idx>image</idx>

        <subsection xml:id="topic-images-raster">
            <title>Raster Images</title>

            <p>A <term>raster image</term><idx>raster image</idx><idx><h>image</h><h>raster image</h></idx> is an image described pixel-by-pixel, with different colors and intensities.  Photographs are good examples.  Common formats are Portable Network Graphics (PNG) and Joint Photographic Experts Group (JPEG, JPG), which will both work with <c>pdflatex</c> and modern web browsers.  JPEG is a good choice for photographs since they are compressed on the assumption they will be viewed by a human, while PNG is a lossless format and good for line art, diagrams and similar images (if you do not have vector graphics versions, see below).</p>

            <p>To use these images, you simply provide the complete filename, with a relative path.  A subdirectory such as <c>images</c> is a good choice for a place to put them.  It is your responsibility to place these images where the <latex /> output will find them or where the HTML output will find them.  Your <pretext/> source would look like:</p>

            <pre>
            <![CDATA[<image source="images/crocodiles.png" width="50%" />]]>
            </pre>

            <p>Typically you would wrap this in a <tag>figure</tag> that might have an <attr>xml:id</attr> attribute for cross-references, with or without a caption.  There is no <attr>height</attr> attribute, so the aspect ratio of your image is your responsibility outside of <pretext />.  The <attr>width</attr> attribute is a percentage of the available width of the text (outside of a <tag>sidebyside</tag> panel).</p>

            <p>You may also provide a <tag>description</tag> which will aid accessibility for electronic formats.  Keep such readers in mind and provide as much description as possible.  Keep the markup simple, since this will typically migrate to an HTML attribute that cannot contain any structure.  Be careful to avoid double-quotes.  For example:</p>

            <pre>
            <![CDATA[
            <image source="images/crocodiles.jpeg" width="50%">
                <description>Five crocodiles partially submerged.</description>
            </image>
            ]]>
            </pre>
        </subsection>

        <subsection xml:id="topic-images-vector">
            <title>Vector Graphics</title>

            <p>An image is a <term>vector graphic</term><idx>vector graphic</idx><idx><h>image</h><h>vector graphic</h></idx> if the file describes the geometric shapes that constitute the image.  So a simple diagram would be a good candidate, but a photograph would not.  Popular formats are Portable Document Format (<init>PDF</init>) and Scalable Vector Graphics (<init>SVG</init>).  You will get the best results with <init>PDF</init> images in <latex/> output and <init>SVG</init> images for <init>HTML</init>.  The principal advantage of these formats is that they scale (big or small) smoothly, along with fonts.  This is critical when you cannot predict the screen size for a reader of an electronic version.</p>

            <p>Unless you describe these images with a language (see <xref ref="topic-images-source"/>), you are responsible for providing the <init>PDF</init> and <init>SVG</init> versions.  The <c>pdf2svg</c> utility is very useful if you have <init>PDF</init> images only.  To have these different images used for different output formats, you simply follow the instructions above, but <em>do not include a file extension</em>.  This alerts the conversion to use the best possible choice for any given output, and to embed it correctly.  So presuming you made available the files <c>images/toad-life-cycle.pdf</c> and <c>images/toad-life-cycle.svg</c>, the following example would incorporate the <init>PDF</init> version with <latex/> output and the <init>SVG</init> version for <init>HTML</init> output.</p>

            <pre>
            <![CDATA[
            <image source="images/toad-life-cycle" width="85%">
                <description>The four stages of a toad's life.</description>
            </image>
            ]]>
            </pre>

            <p>Vector graphics images can be created with source code in different languages (<xref ref="topic-images-source"/>) or with applications, such as Inkscape (<xref ref="processing-images-inkscape"/>).  If you are creating non-technical graphics that have lots of geometric shapes and simple text (a look like a movie poster), then using a tool like Inkscape is a great choice since its native file format is an enhanced version of <init>SVG</init> and a faithful <init>PDF</init> is easy to create.</p>
        </subsection>

        <subsection xml:id="topic-images-source">
            <title>Images Described by Source Code</title>

            <introduction>
                <p>There are various languages which may be used to describe diagrams, geometric objects, or data plots.  A key strategy enabled by <pretext/> is to put these specifications of such images <em>directly in your document's source</em> rather than losing track of them over time.</p>

                <p>So we have various elements which are children of <tag>image</tag> that hold these source code descriptions.  Then <pretext/> provides techniques for realizing these in the best formats for various devices and print.  So if you are accustomed to the idea of a <attr>source</attr> attribute pointing to a file, think of these elements as alternative specifications.</p>
            </introduction>

            <subsubsection>
                <title>Asymptote</title>

                <p><url href="https://asymptote.sourceforge.io/" visual="asymptote.sourceforge.io/">Asymptote</url> is a vector graphics language that produces high-quality output in <init>WebGL</init>, <init>SVG</init>, <init>PNG</init>, and <init>PDF</init> formats.  You can describe 2-D or 3-D objects, and the 3-D objects are interactive in online output as <init>HTML</init> <init>WebGL</init> files.  <latex/> may be used, and your macros are automatically available for use.</p>

                <p>Authoring is straight-forward.  Inside an <tag>image</tag> include a child <tag>asymptote</tag> to hold the code.  For example:</p>

                <pre>
                &lt;image xml:id="gaussian-histogram"&gt;
                    &lt;description&gt;A histogram of Gaussian data.&lt;/description&gt;
                    &lt;asymptote&gt;
                    import graph;
                    import stats;

                    size(400,200,IgnoreAspect);

                    int n=10000;
                    real[] a=new real[n];
                    for(int i=0; i &lt; n; ++i) a[i]=Gaussrand();

                    draw(graph(Gaussian,min(a),max(a)),blue);

                    // Optionally calculate "optimal" number
                    // of bins a la Shimazaki and Shinomoto.
                    int N=bins(a);

                    histogram(a,min(a),max(a),N,normalize=true,low=0,lightred,black,bars=false);

                    xaxis("$x$",BottomTop,LeftTicks);
                    yaxis("$dP/dx$",LeftRight,RightTicks(trailingzero));
                    &lt;/asymptote&gt;
                &lt;/image&gt;
                </pre>

                <p>Here is the result.  Look elsewhere for examples of 3-D output from Asymptote.</p>

                <image xml:id="gaussian-histogram" width="60%">
                    <description>A histogram of Gaussian data.</description>
                    <asymptote>
                    import graph;
                    import stats;

                    size(400,200,IgnoreAspect);

                    int n=10000;
                    real[] a=new real[n];
                    for(int i=0; i &lt; n; ++i) a[i]=Gaussrand();

                    draw(graph(Gaussian,min(a),max(a)),blue);

                    // Optionally calculate "optimal" number
                    // of bins a la Shimazaki and Shinomoto.
                    int N=bins(a);

                    histogram(a,min(a),max(a),N,normalize=true,low=0,lightred,black,bars=false);

                    xaxis("$x$",BottomTop,LeftTicks);
                    yaxis("$dP/dx$",LeftRight,RightTicks(trailingzero));
                    </asymptote>
                </image>

                <p>Notes:<ul>
                    <li>Notice the necessity of escaping the less-than in the for-loop.  See <xref ref="topic-exceptional-characters"/>.</li>
                    <li>Setting a <attr>xml:id</attr> is necessary to have a stable name for graphics files that will be generated.</li>
                    <li>The <tag>description</tag> is an important part of making your output accessible.</li>
                    <li>Notice the use of <latex/> for the label on the vertical axis.  All of your macros defined in <c>docinfo</c> are available for use, so you can keep notation consistent.</li>
                    <li>You need to produce <init>PDF</init> versions of your diagrams for use in a conversion to <latex/>.</li>
                    <li>
                        <p>You need to produce <init>HTML</init> versions of your diagrams for use in a conversion to an electronic format based on <init>HTML</init>.  For a 2-D diagram these are a thin wrapper around an <init>SVG</init> image.  For a 3-D diagram these are interactive WebGL objects.</p>

                        <p>It is very important to note that these <init>HTML</init> versions contain the height and width of the diagram and these are queried by a conversion of your document to <init>HTML</init> format in order to compute the aspect ratio.  Therefore they need to be available with your other source files (typically in an <c>images</c> directory).  So in a very real sense these files become part of your source.</p>
                    </li>
                    <li>You may want to produce <init>SVG</init> versions of your diagrams for conversion to <init>EPUB</init>, and <init>PNG</init> versions for conversion to the <init>EPUB</init> precursor for Kindle format.</li>
                    <li><init>PDF</init> versions produced by the <c>pretext</c> script will not include the RPC extensions.  So <q>rotatable</q> 3D images rendered by the proprietary viewer, Adobe Acrobat, are not created, consistent with our open source philosophy.</li>

                    <li>
                        <p>Colors in Asymptote can be hard-coded using <c>rgb</c> syntax. Colors can also be defined at the top of an Asymptote file, to be referred to later. You may wish to produce <init>PDF</init> in both color (electronic) and black and white (print on demand) formats, and you probably do not want to maintain parallel source for both versions. Rather than writing (for example) <c>pen p=rgb(0,0,.7);</c> in your Asymptote code, you can write <c>pen p=curvepen1;</c>. Then, in the <tag>docinfo</tag> section of your document, you can add an <tag>asymptote-preamble</tag> and include the line <c>pen curvepen1=rgb(0,0,.7);</c>. Once you are ready to produce your black and white version, you need only change the definition of <c>curvepen1</c> in your <tag>asymptote-preamble</tag>.</p>

                        <p>One note of caution: if your preamble includes Asymptote code that only works once certain libraries are loaded, you must include lines to import those libraries in your preamble. For example, to define a <c>material</c> you must first have the line <c>import three;</c>.</p>
                    </li>
                </ul></p>

                <p>Asymptote may be run as a program installed locally, but the project also has an on-demand online server written by Supakorn Jamie Rassameemasmuang.  By default, the <c>pretext/pretext</c> script (<xref ref="pretext-script"/>) will interface automatically with this server to create your diagrams.  Furthermore, Asymptote provides a very useful <url href="http://asymptote.ualberta.ca/" visual="asymptote.ualberta.ca/">web application</url> written by Pedram Emami.  This is a great place to learn, experiment, and iterate as you become more skilled at building high-quality graphics to illustrate the concepts in your document.</p>

                <note>
                    <title>Build 3-D Asymptote Figures</title>

                    <p>If your project uses geometric or mathematical objects that are three-dimensional, invest some time in learning the Asymptote vector graphics language.  The interactive diagrams for your <init>HTML</init> output produced by Asymptote, in <init>WebGL</init> format, are outstanding and will greatly enhance your project.  (And the other static formats are similarly excellent.)  The <c>pretext/pretext</c> script will create these diagrams, in the necessary formats, with no extra software by using an online server.</p>
                </note>

            </subsubsection>

            <subsubsection xml:id="topic-latex-images">
                <title>Images in <latex/> Syntax</title>

                <p>There are a variety of <latex/> packages for authoring a diagram, plot, or graph.  Examples include: TikZ, PGF, Xy-pic, and PSTricks.  Generally, the <tag>latex-image</tag> tag allows you to incorporate this code into your source and <pretext/> realizes these descriptions as images in your output.</p>

                <p>For <latex/> output the procedure is transparent<mdash/><pretext/> simply incorporates the preamble information and the image's code in the correct places in the <latex/> output, scaled to fit whatever space is described on the <tag>image</tag> element.  Then traditional <latex/> processing will do the right thing.  For output to other non-<latex/> formats, such as <init>HTML</init> or <init>EPUB</init>, we need some help from the CLI to generate other formats.  This tool will isolate the image's code and bundle it up with the necessary preamble to make a complete single-purpose <latex/> file.  Once converted by <latex/> to a <init>PDF</init> version, other tools can convert the image into other formats, such as <init>SVG</init>.  In this way, you can use <latex/> packages for describing images, use mathematically-correct labels in <latex/> syntax, and use your own macros for consistency in notation, yet also employ the resulting images in more modern output formats.  Note that as of 2020-07-24, limited testing indicates that PSTricks needs to be processed with the <c>xelatex</c> engine, and the <c>pstricks-add</c> package might also be necessary.  Any updates, especially using <c>pdflatex</c> would be appreciated.  Finally, processing with <c>xelatex</c> might be necessary if your labels use Unicode characters.</p>

                <p>Much like the <tag>asymptote</tag> tag, the <tag>latex-image</tag> tag is used as a child of <tag>image</tag> and can be thought of as an alternative to the <attr>source</attr> attribute of <tag>image</tag>.  The contents need to be a complete specification of the image.  For example, a TikZ image will typically begin with <c>\begin{tikzpicture}</c>.  Inside of your document's <tag>docinfo</tag> you will likely need to employ a <tag>latex-image-preamble</tag> element to hold necessary <c>\usepackage</c> commands and any global settings, such as the style for tick-marks and labels on axes of graphs.  The source code in this next example is greatly abbreviated and mildly edited, see the source for the complete example.</p>

                <pre><![CDATA[
                <docinfo>
                    <latex-image-preamble>
                    \usepackage{tikz}
                    </latex-image-preamble>
                </docinfo>
                ]]></pre>

                <pre><![CDATA[
                <figure>
                    <caption>RNA Codons Table, by Florian Hollandt</caption>
                    <image xml:id="rna-codons-table" width="100%">
                        <description>A table of the RNA codons.</description>
                        <latex-image>
                        \begin{tikzpicture}
                        \footnotesize
                        \tikzstyle{every node}=[inner sep=1.7pt,anchor=center]
                        % to_x and from_x styles denote bonds terminating
                        % or starting in labeled nodes. x denotes the
                        % number of letters in the node label.
                        \tikzstyle{to_1}=[shorten >=5pt]
                        \tikzstyle{to_1i}=[shorten >=6pt]
                        \tikzstyle{to_2}=[shorten >=7pt]
                        \tikzstyle{to_3}=[shorten >=8pt]
                        ...
                        \begin{scope}[scale=0.5]    % Asparagine
                        \draw[ultra thick,shorten >=2pt,shorten &lt;=2pt] (90-2*5.625:8.2)
                                        arc(90-2*5.625:90-4*5.625:8.2);
                        \path (90-3.5*3.625-3:13.3) node (zero) {};
                        \draw[to_2]  (zero.center)  -- ++(30:1) node (CO) {}
                                        -- +(330:1) node [anchor=base] {O$^{\mbox{-}}$};
                        \draw[to_1]  (CO.center)    -- +(90:1) node (Od) {O};
                        \draw[to_1i] (CO.30)        -- +(90:1);
                        \draw[to_3]  (zero.center)  -- ++(150:1) node {NH$_{\mbox{3}}^{\mbox{+}}$};
                        \draw[to_2]  (zero.center)  -- ++(270:1) node(Cb){}
                                        -- ++(330:1) node (Cc) {}
                                        -- +(30:1) node (Cd) {NH$_{\mbox{2}}$};
                        \draw[to_1i] (Cc.center)    -- +(270:1) node (O) {};
                        \draw[to_1]  (Cc.210)       -- (O.150);
                        \path (O.center) node {O};
                        \end{scope}
                        ...
                        \node at (90-55*5.625:4.5) {C};
                        \node at (90-58*5.625:4.5) {S};
                        \node at (90-61*5.625:4.5) {L};
                        \node at (90-63*5.625:4.5) {F};
                        \end{tikzpicture}
                        </latex-image>
                    </image>
                </figure>
                ]]></pre>

                <p>This will result in:</p>

                <figure xml:id="rna-codons-figure">
                    <caption>RNA Codons Table, by Florian Hollandt, from <url href="https://texample.net/tikz/examples/rna-codons-table/" visual="texample.net/tikz/examples/rna-codons-table/"><tex/>ample.net</url></caption>
                    <image xml:id="rna-codons-table" width="100%">
                        <description>A table of the RNA codons, together with the amino acids they encode.</description>
                        <latex-image>
                        \begin{tikzpicture}
                        \footnotesize
                        \tikzstyle{every node}=[inner sep=1.7pt,anchor=center]
                        %   to_x and from_x styles denote bonds terminating or starting in labeled nodes. x denotes the number of letters in the node label.
                        \tikzstyle{to_1}=[shorten >=5pt]
                        \tikzstyle{to_1i}=[shorten >=6pt]
                        \tikzstyle{to_2}=[shorten >=7pt]
                        \tikzstyle{to_3}=[shorten >=8pt]
                        \tikzstyle{from_1}=[shorten &lt;=5pt]
                        \tikzstyle{from_1i}=[shorten &lt;=6pt]
                        \tikzstyle{from_2}=[shorten &lt;=8pt]
                        \begin{scope}
                        \draw [ultra thick] circle(1cm);
                        \draw [ultra thick] (0:4)--(180:4) (90:4)--(270:4);
                        \foreach \a/\l in {45/A,135/G,225/C,315/U}{
                            \node at (90-\a:0.5cm) {\l};
                        }
                        \draw [very thick] circle(2cm);
                        \foreach \A in {90,0,270,180}{
                            \foreach \a/\l in {22.5/A,45/G,67.5/C,90/U}{
                                \draw [very thick] (\A+\a:1) -- (\A+\a:4);
                                \node at (\A-\a+11.25:1.5) {\l};
                            }
                        }
                        \draw circle(4cm) (0:4)--(180:4) (90:4)--(270:4);
                        \foreach \A in {90,180,270,0}{
                            \foreach \a in {0,22.5,45,67.5}{
                                \foreach \i/\l in {5.625/A,11.25/G,16.875/C,22.5/U}{
                                    \draw (\A+\a+\i:2) -- (\A+\a+\i:4);
                                    \node at (\A-\a-\i+2.8125:3) {\l};
                                }
                            }
                        }
                        \end{scope}
                        \begin{scope}[scale=0.5]    % Lysine
                        \draw[ultra thick,shorten >=2pt,shorten &lt;=2pt] (90:8.2)
                                        arc(90:90-2*5.625:8.2);
                        \path (90-0.8*5.625:14.3) node (zero) {};
                        \draw[to_2]  (zero.center)  -- ++(30:1) node (CO) {}
                                        -- +(330:1) node [anchor=base] {O$^{\mbox{-}}$};
                        \draw[to_1]  (CO.center)    -- +(90:1) node (Od) {O};
                        \draw[to_1i] (CO.30)        -- +(90:1);
                        \draw[to_3]  (zero.center)  -- ++(150:1) node {NH$_{\mbox{3}}^{\mbox{+}}$};
                        \draw[to_3]  (zero.center)  -- ++(270:1) node(Cb){}
                                        -- ++(330:1) node (Cc) {}
                                        -- ++(270:1) node (Cd) {}
                                        -- ++(210:1) node (Ce) {}
                                        -- ++(150:1) node (Cf) {NH$_{\mbox{2}}$};
                        \end{scope}
                        \begin{scope}[scale=0.5]    % Asparagine
                        \draw[ultra thick,shorten >=2pt,shorten &lt;=2pt] (90-2*5.625:8.2)
                                        arc(90-2*5.625:90-4*5.625:8.2);
                        \path (90-3.5*3.625-3:13.3) node (zero) {};
                        \draw[to_2]  (zero.center)  -- ++(30:1) node (CO) {}
                                        -- +(330:1) node [anchor=base] {O$^{\mbox{-}}$};
                        \draw[to_1]  (CO.center)    -- +(90:1) node (Od) {O};
                        \draw[to_1i] (CO.30)        -- +(90:1);
                        \draw[to_3]  (zero.center)  -- ++(150:1) node {NH$_{\mbox{3}}^{\mbox{+}}$};
                        \draw[to_2]  (zero.center)  -- ++(270:1) node(Cb){}
                                        -- ++(330:1) node (Cc) {}
                                        -- +(30:1) node (Cd) {NH$_{\mbox{2}}$};
                        \draw[to_1i] (Cc.center)    -- +(270:1) node (O) {};
                        \draw[to_1]  (Cc.210)       -- (O.150);
                        \path (O.center) node {O};
                        \end{scope}
                        \begin{scope}[scale=0.5]    % Arginine
                        \draw[ultra thick,shorten >=2pt,shorten &lt;=2pt] (90-22.5:8.2)
                                        arc(90-22.5:90-33.75:8.2);
                        \path (90-3.7*5.625:16) node (zero) {};
                        \draw[to_2]  (zero.center)  -- ++(30:1) node (CO) {}
                                        -- +(330:1) node [anchor=base] {O$^{\mbox{-}}$};
                        \draw[to_1]  (CO.center)    -- +(90:1) node (Od) {O};
                        \draw[to_1i] (CO.30)        -- +(90:1);
                        \draw[to_3]  (zero.center)  -- ++(150:1) node {NH$_{\mbox{3}}^{\mbox{+}}$};
                        \draw[to_2]  (zero.center)  -- ++(270:1) node(Cb){}
                                        -- ++(330:1) node (Cc) {}
                                        -- ++(270:1) node (Cd) {}
                                        -- ++(330:1) node (NH1) {NH};
                        \draw[from_2,to_3]  (NH1.center)    -- ++(30:1) node (Ce) {}
                                        -- ++(330:1) node {NH$_{\mbox{2}}$};
                        \draw[to_1i] (Ce.center)    -- ++(90:1) node (N2) {};
                        \draw[to_1]  (Ce.150)       -- (N2.210);
                        \path (N2) node {N};
                        \end{scope}
                        \begin{scope}[scale=0.5]    % Serine
                        \draw[ultra thick,shorten >=1pt,shorten &lt;=2pt] (90-22.5-2*5.625:8.2)
                                        arc(90-33.75:90-33.75-11.25:8.2);
                        \path (90-7*5.625:12.5) node (zero) {};
                        \draw[to_2]  (zero.center)  -- ++(30:1) node (CO) {}
                                        -- +(330:1) node [anchor=base] {O$^{\mbox{-}}$};
                        \draw[to_1]  (CO.center)    -- +(90:1) node (Od) {O};
                        \draw[to_1i] (CO.30)        -- +(90:1);
                        \draw[to_3]  (zero.center)  -- ++(150:1) node {NH$_{\mbox{3}}^{\mbox{+}}$};
                        \draw[to_2]  (zero.center)  -- ++(270:1) node(Cb){} -- ++(210:1) node (Cc) {OH};
                        \end{scope}
                        \begin{scope}[scale=0.5]    % Threonine
                        \draw[ultra thick,shorten >=1pt,shorten &lt;=2pt] (90-45:8.2)
                                        arc(90-45:90-67.5:8.2);
                        \path (90-45-0.8*11.25:12.5) node (zero) {};
                        \draw[to_2]  (zero.center)  -- ++(30:1) node (CO) {}
                                        -- +(330:1) node [anchor=base] {O$^{\mbox{-}}$};
                        \draw[to_1]  (CO.center)    -- +(90:1) node (Od) {O};
                        \draw[to_1i] (CO.30)        -- +(90:1);
                        \draw[to_3]  (zero.center)  -- ++(150:1) node {NH$_{\mbox{3}}^{\mbox{+}}$};
                        \draw[to_2]  (zero.center)  -- ++(270:1) node(Cb){}
                                        -- ++(330:1) node (Cc) {} (Cb.center)
                                        -- +(210:1) node {OH};
                        \end{scope}
                        \begin{scope}[scale=0.5]    % Methionine
                        \draw[ultra thick,shorten >=1pt,shorten &lt;=2pt] (90-67.5:8.2)
                                        arc(90-67.5:90-67.5-5.625:8.2);
                        \path (90-67.5-0.5*5.625:14) node (zero) {};
                        \draw[to_2]  (zero.center)  -- ++(30:1) node (CO) {}
                                        -- +(330:1) node [anchor=base] {O$^{\mbox{-}}$};
                        \draw[to_1]  (CO.center)    -- +(90:1) node (Od) {O};
                        \draw[to_1i] (CO.30)        -- +(90:1);
                        \draw[to_3]  (zero.center)  -- ++(150:1) node {NH$_{\mbox{3}}^{\mbox{+}}$};
                        \draw[to_1]  (zero.center)  -- ++(270:1) node(Cb){}
                                        -- ++(330:1) node (Cc) {}
                                        -- ++(30:1) node (Cd) {S};
                        \draw[from_1] (Cd.center)   -- +(330:1);
                        \end{scope}
                        \begin{scope}[scale=0.5]    % Isoleucine
                        \draw[ultra thick,shorten >=1pt,shorten &lt;=2pt] (0:8.2)
                                        arc(0:11.25:8.2);
                        \path (1.0*5.625:12.4) node (zero) {};
                        \draw[to_2]  (zero.center)  -- ++(30:1) node (CO) {}
                                        -- +(330:1) node [anchor=base] {O$^{\mbox{-}}$};
                        \draw[to_1]  (CO.center)    -- +(90:1) node (Od) {O};
                        \draw[to_1i] (CO.30)        -- +(90:1);
                        \draw[to_3]  (zero.center)  -- ++(150:1) node {NH$_{\mbox{3}}^{\mbox{+}}$};
                        \draw        (zero.center)  -- ++(270:1) node(Cb){}
                                        -- ++(330:1) node (Cc) {}
                                        -- +(30:1) node (Cd) {} (Cb.center)
                                        -- +(210:1) node (Ce) {};
                        \end{scope}
                        \begin{scope}[scale=0.5]    % Glutamic acid
                        \draw[ultra thick,shorten >=1pt,shorten &lt;=2pt] (0:8.2)
                                        arc(0:-11.25:8.2);
                        \path (-1.3*5.625:15) node (zero) {};
                        \draw[to_2]  (zero.center)  -- ++(30:1) node (CO) {}
                                        -- +(330:1) node [anchor=base] {O$^{\mbox{-}}$};
                        \draw[to_1]  (CO.center)    -- +(90:1) node (Od) {O};
                        \draw[to_1i] (CO.30)        -- +(90:1);
                        \draw[to_3]  (zero.center)  -- ++(150:1) node {NH$_{\mbox{3}}^{\mbox{+}}$};
                        \draw[to_1i] (zero.center)  -- ++(270:1) node(Cb){}
                                        -- ++(330:1) node (Cc) {}
                                        -- ++(270:1) node (Cd) {}
                                        -- ++(330:1) node (NH) {OH};
                        \draw[to_1]  (Cd.center)    -- +(210:1) node (O) {};
                        \draw[to_1i] (Cd.270)       -- (O.300);
                        \path (O.center) node {O};
                        \end{scope}
                        \begin{scope}[scale=0.5]    % Aspartic acid
                        \draw[ultra thick,shorten >=1pt,shorten &lt;=2pt] (-11.25:8.2)
                                        arc(-11.25:-22.5:8.2);
                        \path (-11.25-5.625:12) node (zero) {};
                        \draw[to_2]  (zero.center)  -- ++(30:1) node (CO) {}
                                        -- +(330:1) node [anchor=base] {O$^{\mbox{-}}$};
                        \draw[to_1]  (CO.center)    -- +(90:1) node (Od) {O};
                        \draw[to_1i] (CO.30)        -- +(90:1);
                        \draw[to_3]  (zero.center)  -- ++(150:1) node {NH$_{\mbox{3}}^{\mbox{+}}$};
                        \draw[to_2]  (zero.center)  -- ++(270:1) node(Cb){}
                                        -- ++(330:1) node (Cc) {}
                                        -- +(30:1) node (Cd) {OH};
                        \draw[to_1i] (Cc.center)    -- +(270:1) node (O) {};
                        \draw[to_1]  (Cc.210)       -- (O.150);
                        \path (O.center) node {O};
                        \end{scope}
                        \begin{scope}[scale=0.5]    % Glycine
                        \draw[ultra thick,shorten >=1pt,shorten &lt;=2pt] (-22.5:8.2)
                                        arc(-22.5:-45:8.2);
                        \path (-33.75-1*5.625:12) node (zero) {};
                        \draw[to_2]  (zero.center)  -- ++(30:1) node (CO) {}
                                        -- +(330:1) node [anchor=base] {O$^{\mbox{-}}$};
                        \draw[to_1]  (CO.center)    -- +(90:1) node (Od) {O};
                        \draw[to_1i] (CO.30)        -- +(90:1);
                        \draw[to_3]  (zero.center)  -- ++(150:1) node {NH$_{\mbox{3}}^{\mbox{+}}$};
                        \end{scope}
                        \begin{scope}[scale=0.5]    % Alanine
                        \draw[ultra thick,shorten >=1pt,shorten &lt;=2pt] (-45:8.2)
                                        arc(-45:-68.25:8.2);
                        \path (-45-11.25:12) node (zero) {};
                        \draw[to_2]  (zero.center)  -- ++(30:1) node (CO) {}
                                        -- +(330:1) node [anchor=base] {O$^{\mbox{-}}$};
                        \draw[to_1]  (CO.center)    -- +(90:1) node (Od) {O};
                        \draw[to_1i] (CO.30)        -- +(90:1);
                        \draw[to_3]  (zero.center)  -- ++(150:1) node {NH$_{\mbox{3}}^{\mbox{+}}$};
                        \draw        (zero.center)  -- ++(270:1) node(Cb){};
                        \end{scope}
                        \begin{scope}[scale=0.5]    % Valine
                        \draw[ultra thick,shorten >=1pt,shorten &lt;=2pt] (-68.25:8.2)
                                        arc(-68.25:-90:8.2);
                        \path (-68.25-0.8*11.25:12) node (zero) {};
                        \draw[to_2]  (zero.center)  -- ++(30:1) node (CO) {}
                                        -- +(330:1) node [anchor=base] {O$^{\mbox{-}}$};
                        \draw[to_1]  (CO.center)    -- +(90:1) node (Od) {O};
                        \draw[to_1i] (CO.30)        -- +(90:1);
                        \draw[to_3]  (zero.center)  -- ++(150:1) node {NH$_{\mbox{3}}^{\mbox{+}}$};
                        \draw (zero.center)     -- ++(270:1) node(Cb){}
                                        -- ++(330:1) node (Cc) {};
                        \end{scope}
                        \begin{scope}[scale=0.5]    % Glutamine
                        \draw[ultra thick,shorten >=1pt,shorten &lt;=2pt] (-90:8.2)
                                        arc(-90:-101.25:8.2);
                        \path (-90.25-5.625:12.5) node (zero) {};
                        \draw[to_2]  (zero.center)  -- ++(30:1) node (CO) {}
                                        -- +(330:1) node [anchor=base] {O$^{\mbox{-}}$};
                        \draw[to_1]  (CO.center)    -- +(90:1) node (Od) {O};
                        \draw[to_1i] (CO.30)        -- +(90:1);
                        \draw[to_2]  (zero.center)  -- ++(150:1) node {NH$_{\mbox{3}}^{\mbox{+}}$};
                        \draw[to_3]  (zero.center)  -- ++(270:1) node(Cb){}
                                        -- ++(330:1) node (Cc) {}
                                        -- ++(270:1) node (Cd) {}
                                        -- ++(330:1) node (NH) {NH$_{\mbox{2}}$};
                        \draw[to_1]  (Cd.center)    -- +(210:1) node (O) {};
                        \draw[to_1i] (Cd.270)       -- (O.300);
                        \path (O.center) node {O};
                        \end{scope}
                        \begin{scope}[scale=0.5]    % Histidine
                        \draw[ultra thick,shorten >=1pt,shorten &lt;=2pt] (-101.25:8.2)
                                        arc(-101.25:-101.25-11.25:8.2);
                        \path (-101.25-1.2*5.625:15.5) node (zero) {};
                        \draw[to_2]  (zero.center)  -- ++(30:1) node (CO) {}
                                        -- +(330:1) node [anchor=base] {O$^{\mbox{-}}$};
                        \draw[to_1]  (CO.center)    -- +(90:1) node (Od) {O};
                        \draw[to_1i] (CO.30)        -- +(90:1);
                        \draw[to_3]  (zero.center)  -- ++(150:1) node {NH$_{\mbox{3}}^{\mbox{+}}$};
                        \draw        (zero.center)  -- ++(270:1) node(Cb){}
                                        -- ++(330:1) node(Cc){};
                        \draw[to_2]  (Cc.center)    -- ++(108-1*72:1) node (Cd) {}
                                        -- ++(108-2*72:1) node (Ce) {NH};
                        \draw[from_1,to_1] (Ce.center)  -- ++(108-3*72:1) node (Cf) {}
                                        -- ++(108-4*72:1) node (Cg) {};
                        \draw[from_1] (Cg.center)   -- (Cc.center);
                        \draw         (Cc.198+2*72) -- (Cd.198+1*72);
                        \draw[from_1] (Cg.72)       -- (Cf.198+4*72);
                        \draw (Cg.center) node {N};
                        \end{scope}
                        \begin{scope}[scale=0.5]    % Arginine
                        \draw[ultra thick,shorten >=2pt,shorten &lt;=2pt] (-90-22.5:8.2)
                                        arc(-90-22.5:-90-45:8.2);
                        \path (-90-7.7*5.625:12.3) node (zero) {};
                        \draw[to_2]  (zero.center)  -- ++(30:1) node (CO) {}
                                        -- +(330:1) node [anchor=base] {O$^{\mbox{-}}$};
                        \draw[to_1]  (CO.center)    -- +(90:1) node (Od) {O};
                        \draw[to_1i] (CO.30)        -- +(90:1);
                        \draw[to_3]  (zero.center)  -- ++(150:1) node {NH$_{\mbox{3}}^{\mbox{+}}$};
                        \draw[to_2]  (zero.center)  -- ++(270:1) node(Cb){}
                                        -- ++(330:1) node (Cc) {}
                                        -- ++(270:1) node (Cd) {}
                                        -- ++(330:1) node (NH1) {NH};
                        \draw[from_1i,to_3] (NH1.center)-- ++(30:1) node (Ce) {}
                                        -- ++(330:1) node {NH$_{\mbox{2}}$};
                        \draw[to_1]  (Ce.center)    -- ++(90:1) node (N2) {};
                        \draw[shorten >=4pt] (Ce.150)   -- (N2.210);
                        \path (N2) node {N};
                        \end{scope}
                        \begin{scope}[scale=0.5]    % Proline
                        \draw[ultra thick,shorten >=2pt,shorten &lt;=2pt] (-90-45:8.2)
                                        arc(-90-45:-90-45-22.25:8.2);
                        \path (-90-10.5*5.625:12) node (zero) {};
                        \draw[to_2]  (zero.center)  -- ++(30:1) node (CO) {}
                                        -- +(330:1) node [anchor=base] {O$^{\mbox{-}}$};
                        \draw[to_1]  (CO.center)    -- +(90:1) node (Od) {O};
                        \draw[to_1i] (CO.30)        -- +(90:1);
                        \draw[to_2]  (zero.center)  -- ++(150:1) node (nh) {NH$_{\mbox{2}}^+$};
                        \draw        (zero.center)  -- ++(270:1) node(Cb){};
                        \path        (Cb.center)    -- +(150:1) node (x) {};
                        \path        (x.center)     +(170:1) node (Cd) {};
                        \path        (x.center)     +(250:1) node (Cc) {};
                        \draw[to_3]  (Cb.center)    -- (Cc.center)
                                        -- (Cd.center)
                                        -- (nh.center);
                        \end{scope}
                        \begin{scope}[scale=0.5]    % Leucine
                        \draw[ultra thick,shorten >=2pt,shorten &lt;=2pt] (180:8.2)
                                        arc(180:180+22.25:8.2);
                        \path (-90-14.5*5.625:13) node (zero) {};
                        \draw[to_2]  (zero.center)  -- ++(30:1) node (CO) {}
                                        -- +(330:1) node [anchor=base] {O$^{\mbox{-}}$};
                        \draw[to_1]  (CO.center)    -- +(90:1) node (Od) {O};
                        \draw[to_1i] (CO.30)        -- +(90:1);
                        \draw[to_3]  (zero.center)  -- ++(150:1) node {NH$_{\mbox{3}}^{\mbox{+}}$};
                        \draw (zero.center)     -- ++(270:1) node(Cb){}
                                        -- ++(330:1) node (Cc) {}
                                        -- +(30:1) node (Cd) {} (Cc.center)
                                        -- +(270:1) node (Ce) {};
                        \end{scope}
                        \begin{scope}[scale=0.5]    % Tyrosine
                        \draw[ultra thick,shorten >=2pt,shorten &lt;=2pt] (180-11.25:8.2)
                                        arc(180-11.25:180-22.5:8.2);
                        \path (180-3*5.625:16) node (zero) {};
                        \draw[to_2]  (zero.center)  -- ++(30:1) node (CO) {}
                                        -- +(330:1) node [anchor=base] {O$^{\mbox{-}}$};
                        \draw[to_1]  (CO.center)    -- +(90:1) node (Od) {O};
                        \draw[to_1i] (CO.30)        -- +(90:1);
                        \draw[to_3]  (zero.center)  -- ++(150:1) node {NH$_{\mbox{3}}^{\mbox{+}}$};
                        \draw        (zero.center)  -- ++(270:1) node(Cb){};
                        \draw        (Cb.center)    -- ++(330:1) node (Cc) {}
                                        -- ++(30:1) node (Cd) {}
                                        -- ++(330:1) node (Ce) {}
                                        -- ++(270:1) node (Cf) {}
                                        -- ++(210:1) node (Cg) {}
                                        -- ++(150:1) node (Ch) {}
                                        -- ++(90:1);
                        \draw        (Cc.330)       -- (Cd.270);
                        \draw        (Ce.210)       -- (Cf.150);
                        \draw        (Cg.90)        -- (Ch.30);
                        \draw[to_1i] (Cf.center)    -- +(330:1) node (OH) {OH};
                        \end{scope}
                        \begin{scope}[scale=0.5]    % Tryptophane
                        \draw[ultra thick,shorten >=2pt,shorten &lt;=2pt] (180-22.5-5.625:8.2)
                                        arc(180-22.5-5.625:180-22.5-11.25:8.2);
                        \path (180-22.5-1.8*5.625:16) node (zero) {};
                        \draw[to_2]  (zero.center)  -- ++(30:1) node (CO) {}
                                        -- +(330:1) node [anchor=base] {O$^{\mbox{-}}$};
                        \draw[to_1]  (CO.center)    -- +(90:1) node (Od) {O};
                        \draw[to_1i] (CO.30)        -- +(90:1);
                        \draw[to_3]  (zero.center)  -- ++(150:1) node {NH$_{\mbox{3}}^{\mbox{+}}$};
                        \draw        (zero.center)  -- ++(270:1) node(Cb){}
                                        -- ++(330:1) node(Cc){};
                        \draw[to_2]  (Cc.center)    -- ++(108-1*72:1) node (Cd) {}
                                        -- ++(108-2*72:1) node (Ce) {NH};
                        \draw[from_1](Ce.center)    -- ++(108-3*72:1) node (Cf) {}
                                        -- ++(108-4*72:1) node (Cg) {};
                        \draw        (Cg.center)    -- (Cc.center);
                        \draw        (Cc.198+2*72)  -- (Cd.198+1*72);
                        \draw        (Cg.72)        -- (Cf.198+4*72);
                        \draw        (Cg.center)    -- ++(240:1) node (Ch) {}
                                        -- ++(300:1) node (Ci) {}
                                        -- ++(0:1) node (Cj) {}
                                        -- ++(60:1) node (Ck) {}
                                        -- ++(120:1) node (Cl) {};
                        \draw        (Ch.0)     -- (Ci.60);
                        \draw        (Cj.120)       -- (Ck.180);
                        \end{scope}
                        \begin{scope}[scale=0.5]    % Cysteine
                        \draw[ultra thick,shorten >=2pt,shorten &lt;=2pt] (180-45+11.25:8.2)
                                        arc(180-45+11.25:180-45:8.2);
                        \path (180-45+11.25-1*7.625:12) node (zero) {};
                        \draw[to_2]  (zero.center)  -- ++(30:1) node (CO) {}
                                        -- +(330:1) node [anchor=base] {O$^{\mbox{-}}$};
                        \draw[to_1]  (CO.center)    -- +(90:1) node (Od) {O};
                        \draw[to_1i] (CO.30)        -- +(90:1);
                        \draw[to_3]  (zero.center)  -- ++(150:1) node {NH$_{\mbox{3}}^{\mbox{+}}$};
                        \draw[to_2]  (zero.center)  -- ++(270:1) node(Cb){}
                                        -- ++(210:1) node (Cc) {SH};
                        \end{scope}
                        \begin{scope}[scale=0.5]    % Serine
                        \draw[ultra thick,shorten >=1pt,shorten &lt;=2pt] (90+45:8.2)
                                        arc(90+45:90+45-22.5:8.2);
                        \path (90+45-11.25+0*5.625:14) node (zero) {};
                        \draw[to_2]  (zero.center)  -- ++(30:1) node (CO) {}
                                        -- +(330:1) node [anchor=base] {O$^{\mbox{-}}$};
                        \draw[to_1]  (CO.center)    -- +(90:1) node (Od) {O};
                        \draw[to_1i] (CO.30)        -- +(90:1);
                        \draw[to_3]  (zero.center)  -- ++(150:1) node {NH$_{\mbox{3}}^{\mbox{+}}$};
                        \draw[to_2]  (zero.center)  -- ++(270:1) node(Cb){}
                                        -- ++(330:1) node (Cc) {OH};
                        \end{scope}
                        \begin{scope}[scale=0.5]    % Leucine
                        \draw[ultra thick,shorten >=2pt,shorten &lt;=2pt] (90+22.5:8.2)
                                        arc(90+22.5:90+11.25:8.2);
                        \path (90+22.5-1.2*5.625:16) node (zero) {};
                        \draw[to_2]  (zero.center)  -- ++(30:1) node (CO) {}
                                        -- +(330:1) node [anchor=base] {O$^{\mbox{-}}$};
                        \draw[to_1]  (CO.center)    -- +(90:1) node (Od) {O};
                        \draw[to_1i] (CO.30)        -- +(90:1);
                        \draw[to_3]  (zero.center)  -- ++(150:1) node {NH$_{\mbox{3}}^{\mbox{+}}$};
                        \draw        (zero.center)  -- ++(270:1) node(Cb){}
                                        -- ++(210:1) node (Cc) {}
                                        -- +(150:1) node (Cd) {} (Cc.center)
                                        -- +(270:1) node (Ce) {};
                        \end{scope}
                        \begin{scope}[scale=0.5]    % Phenylalanine
                        \draw[ultra thick,shorten >=2pt,shorten &lt;=2pt] (90+11.25:8.2)
                                        arc(90+11.25:90:8.2);
                        \path (90+1.5*5.625:13) node (zero) {};
                        \draw[to_2]  (zero.center)  -- ++(30:1) node (CO) {}
                                        -- +(330:1) node [anchor=base] {O$^{\mbox{-}}$};
                        \draw[to_1]  (CO.center)    -- +(90:1) node (Od) {O};
                        \draw[to_1i] (CO.30)        -- +(90:1);
                        \draw[to_3]  (zero.center)  -- ++(150:1) node {NH$_{\mbox{3}}^{\mbox{+}}$};
                        \draw        (zero.center)  -- ++(270:1) node(Cb){};
                        \draw        (Cb.center)    -- ++(210:1) node (Cc) {}
                                        -- ++(150:1) node (Cd) {}
                                        -- ++(210:1) node (Ce) {}
                                        -- ++(270:1) node (Cf) {}
                                        -- ++(330:1) node (Cg) {}
                                        -- ++(30:1) node (Ch) {}
                                        -- ++(90:1);
                        \draw        (Cc.210)       -- (Cd.270);
                        \draw        (Ce.330)       -- (Cf.30);
                        \draw        (Cg.90)        -- (Ch.150);
                        \end{scope}
                        \node at (90-1*5.625:4.5) {K};
                        \node at (90-3*5.625:4.5) {N};
                        \node at (90-5*5.625:4.5) {R};
                        \node at (90-7*5.625:4.5) {S};
                        \node at (90-10*5.625:4.5) {T};
                        \node at (90-12.5*5.625:4.5) {I};
                        \node at (90-13.7*5.625:4.7) {M / $\star$};
                        \node at (90-15*5.625:4.5) {I};
                        \node at (90-17*5.625:4.5) {E};
                        \node at (90-19*5.625:4.5) {D};
                        \node at (90-22*5.625:4.5) {G};
                        \node at (90-26*5.625:4.5) {A};
                        \node at (90-30*5.625:4.5) {V};
                        \node at (90-33*5.625:4.5) {Q};
                        \node at (90-35*5.625:4.5) {H};
                        \node at (90-38*5.625:4.5) {R};
                        \node at (90-42*5.625:4.5) {P};
                        \node at (90-46*5.625:4.5) {L};
                        \node at (90-49*5.625:4.5) {$\dagger$};
                        \node at (90-51*5.625:4.5) {Y};
                        \node at (90-52.3*5.625:4.5) {$\dagger$};
                        \node at (90-53.3*5.625:4.5) {W};
                        \node at (90-55*5.625:4.5) {C};
                        \node at (90-58*5.625:4.5) {S};
                        \node at (90-61*5.625:4.5) {L};
                        \node at (90-63*5.625:4.5) {F};
                        \end{tikzpicture}
                        </latex-image>
                    </image>
                </figure>
            </subsubsection>

            <subsubsection>
                <title>Scaling TikZ Images</title>

                <p>Images authored in <url href="https://github.com/pgf-tikz/pgf">TikZ</url> are the most popular.   Text (nodes) in a TikZ picture are at whatever the current <latex/> font size is.  The other parts of the picture (lines, circles, rays, etc.; the <q>line art</q>) can be scaled as part of an overall scale factor.  The point being, the scale factor will not scale the text simultaneously.  It is not unlike a map application on your mobile device.  The name of a road is too small to read, so you zoom in on the map, making the street bigger, but the name stays in the same font size and is still unreadable.  This means some manual labor is involved when you place a TikZ picture into a <pretext/> document.</p>

                <p>For many authors, the goal is to have the text in their TikZ picture have the same size as the surrounding text, both in a <init>PDF</init> and in <init>HTML</init>.  We now explain how to accomplish this consistently.</p>

                <paragraphs>
                    <title>Preparation</title>

                    <p>Well <em>before</em> designing many TikZ images, answer the following questions.<ol>
                        <li>For your <latex/> output, what will the overall font size be?</li>
                        <li>For your <latex/> output, what will the width of the text block be?  Note that this will normally be computed by <pretext/>, dependent on your chosen font size.  A larger font will mean a greater width.  You can generate the <latex/> source file and look early in the preamble to see what width is being used.  It is also possible that you may be setting this with yourself (<xref ref="page-shape"/>).  The ratio of line width to font size is always <m>34:1</m>.</li>
                    </ol></p>
                </paragraphs>

                <paragraphs>
                    <title>TikZ in <latex/></title>

                    <p>Every image in <pretext/> may be constrained by width and/or margins, or may be restricted to a panel of a <tag>sidebyside</tag> with a certain width.  So the TikZ code you author will create an image that is then scaled by <pretext/> to fit the constraints (much as any other image is scaled).  Except this is done in a way that scales both the font and the line art.  Your main goal is to have this scaling use a scale factor of <m>1.0</m>.  Which, of course, sounds like a waste of effort, but it is critical for how the image behaves in <init>HTML</init> (next).</p>

                    <p>To accomplish this unit scaling, follow this procedure for each TikZ picture.<ol>
                        <li>Determine the width of the TikZ picture itself, in physical units of length.  Typically, the lengths used for larger portions are described in centimeters.  But note that an overall scale factor is sometimes applied for convenience (or as a result of poor planning!).  Also, the default unit length (centimeters) can be changed.  Note also, that text may <q>push out</q> to the right and left, defining the boundaries on the sides, and these lengths can be hard to compute or predict.</li>
                        <li>Recall the width of your text (above).  Recognize that list items will be indented (reducing width), and perhaps there are multiple indents if a list has multiple levels.</li>
                        <li>Now you want the width of your picture as a percentage of the overall available width.  By default, your overall width will be points, and your picture width will be in centimeters.  You may be familiar with a <q>big point</q> (or <q>desktop publishing point</q>) which is <m>72</m> points to the inch.  <tex/> however uses <m>72.27</m> points to the inch, which makes a <tex/> point equal to <m>0.03514598</m> centimeters.  Convert to whatever common unit makes sense to you, since it is the dimension-less ratio you are after.</li>
                        <li>Use this percentage as the <attr>width</attr> attribute on the <tag>image</tag> (with a percent sign).</li>
                    </ol>Now produce a <init>PDF</init> and you will find that the font in the surrounding text, and the font in image, will match identically.  I like to check this carefully by zomming in on the <init>PDF</init> and using an on-screen pixel ruler to check the heights of identical letters.  <url href="https://apps.kde.org/kruler/">KRuler</url> is one such example for Linux, suggestions for other operating systems are welcome.</p>

                    <p>Note that in practice you will envision your picture as large or small, and you will begin with some overall physical width in mind, relative to the line width.</p>
                </paragraphs>

                <paragraphs>
                    <title>TikZ in <init>HTML</init></title>

                    <p>For <init>HTML</init> output, the goal is to not edit your source.  In other words to not change the <attr>width</attr> attributes that have been so carefully computed and to not edit the TikZ code.  But you will want to maintain fidelity with the surrounding font.</p>

                    <p><init>HTML</init> output is designed to behave very similarly (not identically) to how <latex/> output behaves.  In other words, the ratio of line width to font size is <m>34:1</m>.  In this way, line length and font size are such that a long paragraph will usually have an identical number of lines in <latex/> (at any font size) and in <init>HTML</init>.</p>

                    <p>Our tools produce Scalable Vector Graphics (<init>SVG</init>) versions of TikZ pictures for use in <init>HTML</init> output.  Being scalable means a reader can zoom in without any pixelation of the images.  This is helpful for those with low vision, or if some fine point of a picture needs to be examined closely.  It also means an SVG can be scaled by any factor when placed in <pretext/> <init>HTML</init>.  However, the work done for a unit scaling for <latex/> output will continue to provide the correct scaling for <init>HTML</init>!  (Provided the text width used for the <init>PDF</init> production is the one automatically computed from the font size via the <m>34:1</m> ratio.)</p>
                </paragraphs>

                <example>
                    <title>Case Study: Scaling a TikZ picture</title>

                    <p>The <pretext/> source below describes a simple TikZ picture, nd is followed by the picture itself.  The rectangle is 8 centimeters wide.  The Guide is produced as a <init>PDF</init> with 10 point text and a text width of <m>6.5</m> inches.  (This is too wide for comfortable reading, and contrary to our recommendations.  See <xref ref="best-practice-too-much-text"/>.)   Normally, a choice of 10 point text would result in a width of <m>340</m> point, or about <m>4.7</m> inches.</p>

                    <p>So we compute the fraction of the available width required, as a percentage:
                        <me>\frac{8\text{ cm}}{6.5\text{ in}} = 
                            \frac{8\text{ cm}\left(\frac{1\text{ in}}{2.54\text{ cm}}\right)}{6.5\text{ in}} =
                            0.4846 = 48.46\%</me>
                    and we use that as the width of the image.</p>

                    <pre><![CDATA[
                    <image xml:id="scaling-tikz" width="48.46%">
                        <latex-image>
                        \begin{tikzpicture}
                        % 1 cm is default unit of length
                        % a rectangle: 8 cm wide, 6 cm tall
                        \draw[draw=black, thick] (4,2) rectangle (-4,-2);

                        \node at (-2,  1) {Foo};
                        \node at ( 2,  1) {Bar};
                        \node at (-2, -1) {Baz};
                        \node at ( 2, -1) {Qux};
                        \end{tikzpicture}
                        </latex-image>
                    </image>]]>
                    </pre>

                    <p>Some characters for comparison: Foo<nbsp/><nbsp/>Bar<nbsp/><nbsp/>Baz<nbsp/><nbsp/>Qux</p>

                    <image xml:id="scaling-tikz" width="48.46%">
                        <latex-image>
                        \begin{tikzpicture}
                        % 1 cm is default unit of length
                        % a rectangle: 8 cm wide, 6 cm tall
                        \draw[draw=black, thick] (4,2) rectangle (-4,-2);

                        \node at (-2,  1) {Foo};
                        \node at ( 2,  1) {Bar};
                        \node at (-2, -1) {Baz};
                        \node at ( 2, -1) {Qux};
                        \end{tikzpicture}
                        </latex-image>
                    </image>

                    <p>In the <init>PDF</init> version, the text matches between the image and the surrounding text almost identically.  We could slide the image right and left by adjusting the margins (the default is to be centered).  But if we want the image bigger and smaller, we need to adjust the TikZ code and recompute the <attr>width</attr> attribute.</p>

                    <p>Now for <init>HTML</init> we need to produce an <init>SVG</init> version that is a close match.  The <init>HTML</init> version is a close match for <latex/> built with a computed text width (for any font size).  We do not want to change the percentage of the width devoted to the TikZ picture, and we do not want to change the TikZ code itself.  If we had not chosen a different text width (the <m>6.5</m> inches, versus a computed <m>340</m> point), then we could generate the <init>SVG</init> by supplying the same publication file, so as to use the same font size.  However, our text width is 38% larger in the <latex/> version,
                        <me>\frac{6.5\text{ in}}{340\text{ pt}} =
                            \frac{6.5\text{ in}\left(\frac{72.27\text{ pt}}{1\text{ in}}\right)}{340\text{ pt}} = 1.3816</me>
                    The font size needs to increase by a similar percentage,
                        <me>10\text{ pt}\times 1.3816 = 13.816\text{ pt}\approx 14\text{ pt}</me>
                    So we generate the <init>SVG</init> image with a <em>different</em> publication file, giving a font size of 14 point.  The <init>HTML</init> font in the text may be very different from the <latex/> font used in the TikZ picture, but their <em>sizes</em> are nearly identical.  Note that our use of <latex/> only supports 8 different font sizes, so it was fortuitous in this example that the 38% increase was so close to the supported 14 point font size.  Note also, that since we used a different text width for the <init>PDF</init>, the resulting 40% increase in the font size for the <init>SVG</init> could play havoc with text that has been placed carefully not to overlap other components of the picture.</p>
                </example>

                <p>There are myriad ways to scale and transform a TikZ picture.  You might choose to intentionally use a smaller font size than the surrounding text, as in <xref ref="rna-codons-figure"/>.  Or, fidelity with the surrounding text might not be important to you.  Or you might prefer that images perform better in <init>HTML</init>.  But hopefully the above discussion and example provide enough insight into how the various constructions behave.  The important points are:<ul>
                    <li>TikZ uses physical units for the overall width of a picture, and nodes have text using the ambient font size of the <pretext/> <latex/> file (unless prescribed otherwise).</li>

                    <li><pretext/> scales a TikZ picture uniformly (text <em>and</em> line art) to fit into constraints given in the source.</li>

                    <li>The <init>SVG</init> version of a TikZ picture is also uniformly scalable and at the same width as the original will have text of the correct font size.  However, when used in <init>HTML</init> output, it is scaled on the assumption that the ratio of the line  width to the font size is 34:1.  This is the default width computed by <pretext/> for all supported font sizes.  Changes in this ratio for <init>PDF</init> production requires an equivalent change in font size during <init>SVG</init> construction, via the publication file.</li>
                </ul></p>
            </subsubsection>

            <subsubsection xml:id="topic-sageplot">
                <title>Images in Sage Syntax</title>

                <p>Sometimes the necessary computations for an image are not part of the capabilities of whatever system is actually realizing the image.  We have good support for Sage in other parts of your document, and Sage has an extremely wide variety of computational capabilities, in addition to letting you program your own computations in Python syntax with the full support of the Sage library.  Rather than translating Sage output as input to some other graphics program, we simply capture the graphics output from Sage.  So if your graphics are derived from non-standard, or intensive, computation this might be your best avenue.</p>

                <p>Use the <tag>sageplot</tag> element, in a manner entirely similar to the <tag>asymptote</tag> element and the <tag>latex-image</tag> element, as a child of <tag>image</tag>, and containing the necessary Sage code to construct the image.  There is one very important twist.  The last line of your Sage code <alert>must</alert> return a Sage <c>Graphics</c> object.  The <c>pretext/pretext</c> script (<xref ref="pretext-script"/>) and <pretext/>-CLI (<xref ref="processing-CLI"/>) will isolate this last line, use it as the right-hand side of an assignment statement, and the Sage <c>.save()</c> method will automatically be called to generate the image in a file.  Note that there are four different file types, depending on if the graphic is 2D or 3D, and the output format of the conversion.</p>

                <p>The <attr>variant</attr> attribute of the <tag>sageplot</tag> element may be <c>2d</c> or <c>3d</c>, since <pretext/> is not capable of analyzing your Sage code.  The default value is <c>3d</c> so can be skipped for 2D plots.  For technical reasons, it is also necessary to specify the aspect ratio of a graphic for the 3D case using the <attr>aspect</attr> attribute.  The value can be a positive real number (decimal) or a ratio of two positive integers separated by a colon.  The default is a square (<c>1.0</c> or <c>1:1</c>).</p>

                <table>
                    <title>File formats for <c>sageplot</c> images</title>
                    <tabular>
                        <col right="major" header="yes"/>
                        <col/>
                        <col/>
                        <row bottom="major">
                            <cell/>
                            <cell>2D</cell>
                            <cell>3D</cell>
                        </row>
                        <row>
                            <cell><latex/></cell>
                            <cell>PDF</cell>
                            <cell>PNG</cell>
                        </row>
                        <row valign="top">
                            <cell>HTML</cell>
                            <cell>SVG</cell>
                            <cell>HTML (for <c>iframe</c>)</cell>
                        </row>
                    </tabular>
                </table>

                <p>Note that the <init>PNG</init> images in the 3D case are not very good.  This needs help on the Sage side.  And since 3D images in <init>HTML</init> output are inserted via an <init>HTML</init> <c>iframe</c> they can misbehave if you do not get the aspect ratio close to right.  On the plus side, the 3D <init>HTML</init> images may be manipulated interactively with keyboard arrow keys, a mouse scroll wheel, and by dragging with a mouse using both a left and a right mouse press.</p>


                <p>Pay very careful attention to the requirement that the last line of your code evaluates to be a graphics object.  In particular, while <c>show()</c> might appear to do the right thing during testing, it evaluates to Python's <c>None</c> object and that is just what you will get for your image.  The example below illustrates creating two graphics objects and combining them into an expression on the last line that evaluates to the graphics object that will be created in the desired graphics files.</p>

                <pre><![CDATA[
                <figure>
                    <caption>Negative multiple of a curve</caption>
                    <image xml:id="negative-curve" width="65%">
                        <description>Plot of x^4 - 1 and its negative.</description>
                        <sageplot>
                        f(x) = x^4 - 1
                        g(x) = -x^4 + 1
                        up = plot(f, (x, -1.5, 1.5), color='blue', thickness=2)
                        down = plot(g, (x, -1.5, 1.5), color='red', thickness=2)
                        up + down
                        </sageplot>
                    </image>
                </figure>
                ]]></pre>

                <p>This will result in:</p>

                <figure>
                    <caption>Negative multiple of a curve</caption>
                    <image xml:id="negative-curve" width="65%">
                        <description>Plot of x^4 - 1 and its negative.</description>
                        <sageplot>
                        f(x) = x^4 - 1
                        g(x) = -x^4 + 1
                        up = plot(f, (x, -1.5, 1.5), color='blue', thickness=2)
                        down = plot(g, (x, -1.5, 1.5), color='red', thickness=2)
                        up + down
                        </sageplot>
                    </image>
                </figure>

                <p>Note the necessity of using the <c>pretext</c> script (<xref ref="pretext-script"/>) to independently invoke Sage, no matter what sort of output is being created for your document.</p>
            </subsubsection>
        </subsection>

        <subsection>
            <title>Image Formats</title>

            <note>
                <title>Preferred Image Formats</title>

                <p>The best formats for images, in order, are:<dl width="narrow">
                    <li>
                        <title>SVG</title>
                        <p>Vector graphics format ideal for <init>HTML</init> output formats.  Scalable and compact.  Converts to other formats, such as <init>PDF</init>.</p>
                    </li>

                    <li>
                        <title>PDF</title>
                        <p>Vector graphics format ideal for print and <init>PDF</init> output formats.  Good tools exist to convert back-and-forth between <init>SVG</init> and <init>PDF</init>.</p>
                    </li>

                    <li>
                        <title>PNG</title>
                        <p>Lossless and compressible format for raster images.  May be used for both <init>HTML</init> and <init>PDF</init> outputs.</p>
                    </li>

                    <li>
                        <title>JPEG</title>
                        <p>Compressed lossy format which works well for photographs.  May be used for both <init>HTML</init> and <init>PDF</init> outputs.  <init>PNG</init> should be preferred when there is a choice, except in the case of a photograph.  Converting between these formats is unlikely to be an improvement.</p>
                    </li>
                </dl></p>
            </note>
        </subsection>

        <subsection xml:id="topic-images-archive">
            <title>Image Archives</title>

            <p>As an instructor, you might want to recycle images from a text for a classroom presentation, a project handout, or an examination question.  As an author, you can elect to make images files available through links in the HTML version, and it is easy and flexible to produce those links automatically.</p>

            <p>First, it is your responsibility to manufacture the files.  For making different formats, the <c>pretext</c> script can sometimes help (<xref ref="pretext-script" />).  The Image Magick <c>convert</c> command is a quick way to make raster images in different formats, while the <c>pdf2svg</c> executable is good for converting vector graphics <init>PDF</init>s into <init>SVG</init>s.  Also, to make this easy to specify, different versions of the same image must have identical paths and names, other than the suffixes.  Finally, the case and spelling of the suffix in your <pretext/> source must match the filename (<eg /> <c>jpg</c> versus <c>JPEG</c>).  OK, those are the ground rules.</p>

            <p>For links for a single image, add the <attr>archive</attr> attribute to the <tag>image</tag> element, such as<cd>
                <cline>&lt;image  ...  archive="pdf svg"&gt;</cline>
            </cd>to get two links for a single image.</p>

            <p>To have every single image receive an identical collection of links, in <c>docinfo/images</c> place an <tag>archive</tag> element whose content is the space-separated list of suffixes/formats.<cd>
                <cline>&lt;archive&gt;png JPEG tex ods&lt;/archive&gt;</cline>
            </cd>will provide four links on every image, including a link to an OpenDocument spreadsheet.</p>

            <p>For a collection of images that is contained within some portion of your document, you can place an <attr>xml:id</attr> on the enclosing element and then in <c>docinfo/images</c> place<cd>
                <cline>&lt;archive from="the-xml-id-on-the-portion"&gt;svg png&lt;/archive&gt;</cline>
            </cd>to get two links on every image <em>only</em> in that portion (chapter, subsection, side-by-side, <etc />).  The <attr>from</attr> attribute is meant to suggest the root of a subtree of your hierarchical document.  If you use this, then <em>do not</em> use the global form that does not have <attr>from</attr>.</p>

            <p>You may accumulate several of the above semi-global semi-local forms in succession.  An image will receive links according to the last <tag>archive</tag> whose <attr>from</attr> subtree contains the image.  So the strategy is to place general, large subtree, specifications early, and use refined, smaller subtree specifications later.  For example,<cd>
                <cline>&lt;archive from="the-xml:id-on-a-chapter"&gt;svg png&lt;/archive&gt;</cline>
                <cline>&lt;archive from="the-xml:id-on-the-introduction"&gt;jpeg&lt;/archive&gt;</cline>
                <cline>&lt;archive from="the-xml:id-on-a-section-within" /&gt;</cline>
            </cd>will put two links on every image of a chapter, but just one link on images in the introduction, and no links at all on every image image within one specific section.  Again, do not mix with the global form.  You can use the root document node (<eg /> <tag>book</tag>) for <attr>from</attr> to obtain a global treatment, but it is unnecessary (and inefficient) to provide empty content for the root node as first in the list<mdash />the same effect is the default behavior.</p>

            <p>Notice that this facility does not restrict you to providing files of the same image, or even images at all.  You could choose to make data files available for each data plot you provide, as spreadsheets, or text files, or whatever you have, or whatever you think your readers need.</p>

            <p>Finally, <q>archive</q> may be a bit of a misnomer, since there is no historical aspect to any of this.  Maybe <q>repository</q> would be more accurate.  Though for a history textbook, it might be a perfect name.</p>
        </subsection>

        <subsection>
            <title>Copies of Images</title>

            <p>Sometimes you want to use the same image more than once.  Putting it in a <tag>figure</tag> and then making a cross-reference (<tag>xref</tag>) can work well in <init>HTML</init> output since it will be available as a knowl.  However in a static format (<init>PDF</init>, print) the reader will need to chase the cross-reference.</p>
            
            <p>For a raster image, you can just point to the file again with the <attr>source</attr> attribute.  You are free to wrap it in a <c>figure</c> and thus change the caption.  It will get a new number as a new figure, and you will need to assign a new unique <attr>xml:id</attr> attribute.  Maybe appending <c>-copy-2</c>, or similar, to the <attr>xml:id</attr> will be helpful.</p>

            <p>If you have a figure generated from source code (such as in TikZ) you really do not want to edit and maintain two copies that may not stay in sync.  Instead, you can place the code into a file and <c>xinclude</c> it twice.  Study <xref ref="topic-xinclude"/> carefully, and note that this is an excellent place to take advantage of setting the <attr>parse</attr> attribute to <c>text</c> (no need to escape problematic <init>XML</init> characters).  Notice that when you generate images, you will have two image files with identical contents, but different names.  This is no place for false optimization.  Bits are cheap and your time is valuable.  It is far more important to only maintain a single copy of the source, than to be caught up with the <q>waste</q> of having two copies of the same file (and which are managed for you).  We demonstrate this with the sample book, since it is all set up with the <c>xinclude</c> mechanism.  See the two plots of the 8-th roots of unity in the complex numbers section of the chapter on cyclic groups.</p>
        </subsection>
    </section>

    <section xml:id="topic-program-console">
        <title>Programs and Consoles</title>
        <idx>program</idx>
        <idx>console</idx>

        <subsection>
            <title>Content and Placement of Programs and Consoles</title>

            <p>A <tag>program</tag> will be treated as verbatim text (see <xref ref="overview-verbatim-literal"/>), subject to all the exceptions for exceptional characters (see <xref ref="overview-exceptional-characters"/>).  Indentation will be preserved, though an equal amount of leading whitespace will be stripped from every line, so as to keep the code shifted left as far as possible.  So you can indent your code consistently along with your <init>XML</init> indentation.  For this reason it is best to indent with spaces, and not tabs.  A mix will almost surely end badly, and in some programming languages tabs are discouraged (e.g. Python).</p>

            <p>A <tag>console</tag> is a transcript of an interactive session in a terminal or console at a command-line.  It is a sequence of the following elements, in this order, possibly repeated many times as a group: <tag>prompt</tag>, <tag>input</tag>, and <tag>output</tag>.  The <tag>output</tag> is optional, and a <tag>prompt</tag> is only displayed when there is an immediately subsequent <tag>input</tag> (which could be empty).  The content is treated as verbatim text (see <xref ref="overview-verbatim-literal"/>), subject to all the exceptions for exceptional characters (see <xref ref="overview-exceptional-characters"/>).</p>

            <p>A <tag>program</tag> or <tag>console</tag> may be wrapped in a <tag>listing</tag>, see <xref ref="topic-listing"/>.  This will behave similar to a <tag>figure</tag>, with the <tag>caption</tag> displayed below, and a number assigned.  So, in particular, if your program or console is important enough to cross-reference, it is an enclosing <tag>listing</tag> that serves as the target.</p>

            <p>The <attr>language</attr> attribute may be used to get some degree of language-specific syntax highlighting and/or interactive behavior.  We will eventually provide a table of attribute values here.  They are always lowercase, and a good first guess is likely to succeed.</p>
        </subsection>

        <subsection xml:id="interactive-program-codelens">
            <title>Interactive Programs, CodeLens</title>

            <p><term>CodeLens</term> is an interactive version of a computer program, which can be visualized by stepping through the code one statement at a time, watching output, variables, and other data structures change.  So it is similar to a debugger, except the reader does not set breakpoints or modify program data on-the-fly.  This is possible automatically for several different languages when your <init>HTML</init> is hosted on a Runestone server (<xref ref="runestone"/>).  This may also be accomplished <q>in browser</q> when hosted on any old generic web server.  The catch is that for a generic server a publisher must generate <term>trace data</term> in advance, typically with the PreTeXt-CLI (<xref ref="processing-CLI"/>).  Place the <tag>interactive</tag> attribute on a <tag>program</tag> element with the value <c>codelens</c> to elect this behavior (<c>no</c> is the default value).  Also, be sure to specify a language from the supported languages: Python, Java, C, and C++.  Consult <xref ref="table-program-interactive"/> below for a summary of various combinations.  When an output format does not support an interactive CodeLens instance, the fallback is a static program listing.</p>
        </subsection>

        <subsection xml:id="interactive-program-activecode">
            <title>Interactive Programs, ActiveCode</title>

            <p><term>ActiveCode</term> is an interactive environment where a reader may work on code through repeated edit-compile-test cycles.  Code can be provided by an author as a complete program to be modified, a partial program to be completed, or nothing at all.  One good example is that maybe header files, import statement, and similar are provided, and a skeleton of a main entry-point procedure is also provided.  Then a reader can concentrate on the more conceptual parts of the programming.  Some languages will be executable <q>in browser</q> on any old generic web server, while others must be on a Runestone server (<xref ref="runestone"/>) where a <url href="https://github.com/trampgeek/jobe" visual="github.com/trampgeek/jobe">Jobe Server</url> is running to support the execution.</p>

            <p>Place the <attr>interactive</attr> attribute on a <tag>program</tag> element with the value <c>activecode</c> to elect this behavior (<c>no</c> is the default value).  Also, be sure to specify a language from the supported languages.  Consult <xref ref="table-program-interactive"/> below for a summary of various combinations.  When an output format does not support an interactive ActiveCode instance, the fallback is a static program listing.</p>

            <p>Note that a Python ActiveCode automatically is enabled with a CodeLens button and requires no preparation of any trace data.  So a reader can form any type of Python program and closely examine its behavior.</p>

            <p>Note also that a data file may be provided independently for consumption by an ActiveCode program.  See <xref ref="topic-datafile"/>.</p>

            <p>If you want to include code from one or more preceding <tag>program</tag> elements, use the <attr>include</attr> attribute whose value is a list (comma-separated or space-separated) of <attr>xml:id</attr>s for the code you want included.</p>
        </subsection>

        <subsection>
            <title>Interactive Program Capabilities</title>

            <p>This table lists which types of interactivity are available on various combinations of servers and programming languages.  The entry <q>AC + CL</q> means that both ActiveCode and CodeLens instances are availble, but the ActiveCode instance will have a CodeLens button enabled.</p>

            <p>Note that <c>python</c> is generic Python with the standard libraries (version 3.x).  On the other hand <c>python3</c> is a Runestone server installation (only) with a number of additional popular Python packages available, such as <c>numpy</c> and <c>pandas</c>.</p>

            <table xml:id="table-program-interactive">
                <title>Interactive Programs</title>

                <tabular>
                    <row header="yes">
                        <cell>Language</cell>
                        <cell><c>@language</c></cell>
                        <cell colspan="2" halign="center">Server</cell>
                    </row>
                    <row header="yes" bottom="major">
                        <cell></cell>
                        <cell></cell>
                        <cell>Generic</cell>
                        <cell>Runestone</cell>
                    </row>
                    <row>
                        <cell>Python</cell>
                        <cell><c>python</c></cell>
                        <cell>AC + CL</cell>
                        <cell>AC + CL</cell>
                    </row>
                    <row>
                        <cell>Python 3</cell>
                        <cell><c>python3</c></cell>
                        <cell></cell>
                        <cell>AC</cell>
                    </row>
                    <row>
                        <cell>Java</cell>
                        <cell><c>java</c></cell>
                        <cell>CL</cell>
                        <cell>AC + CL</cell>
                    </row>
                    <row>
                        <cell>C</cell>
                        <cell><c>c</c></cell>
                        <cell>CL</cell>
                        <cell>AC + CL</cell>
                    </row>
                    <row>
                        <cell>C++</cell>
                        <cell><c>cpp</c></cell>
                        <cell>CL</cell>
                        <cell>AC + CL</cell>
                    </row>
                    <row>
                        <cell>JavaScript</cell>
                        <cell>javascript<c></c></cell>
                        <cell>AC</cell>
                        <cell>AC</cell>
                    </row>
                    <row>
                        <cell>HTML</cell>
                        <cell><c>html</c></cell>
                        <cell>AC</cell>
                        <cell>AC</cell>
                    </row>
                    <row>
                        <cell>SQL</cell>
                        <cell><c>sql</c></cell>
                        <cell>AC</cell>
                        <cell>AC</cell>
                    </row>
                    <row bottom="major">
                        <cell>Octave</cell>
                        <cell><c>octave</c></cell>
                        <cell></cell>
                        <cell>AC</cell>
                    </row>
                    <!-- should really be a note, or similar -->
                    <row>
                        <cell halign="left" colspan="4">AC = ActiveCode, CL = CodeLens</cell>
                    </row>
                </tabular>
            </table>
        </subsection>
    </section>

    <section xml:id="topic-datafile">
        <title>Data Files</title>

        <p>In concert with interactive programs (see <xref ref="topic-program-console"/>) you can define a file of data that may be employed by those programs.  The necessary element is <tag>datafile</tag>.  It requires a <attr>label</attr> attribute.  The <attr>filename</attr> is also required and is the name the file is known by in an ActiveCode program.  Do not try to impose any sort of directory structure on this name.  Just a filename.  In the case of a text file (see below), the <attr>editable</attr> attribute is optional.  The value <c>no</c> is the default, with <c>yes</c> as the other option.  The attributes <attr>rows</attr> and <attr>cols</attr> are optional for text files, and default to <c>20</c> and <c>60</c> respectively.  Finally, a non-editable text file (only) may have its contents hidden by setting the <attr>hide</attr> attribute to <c>yes</c>, rather than the default value of <c>no</c>.</p>

        <p>Where might you place a <tag>datafile</tag>?  Lots of places are possible, such as in an <tag>example</tag> or a programming <tag>exercise</tag>, close to an ActiveCode <tag>program</tag>.  So, in expository material or in activities for readers to work through.  The purpose-built COMPUTATION-LIKE block, <tag>data</tag>, which will get you a heading, number, title, cross-reference target, etc. (see <xref ref="block-summary"/>), is an option if the file itself needs more prominence or dedicated explanation.  Notice that this feature is very powerful, and thus requires a bit of machinery to support.  If you just want to point your reader to a file (and leave them to work with it outside of your project), either globally or locally, the read about the <tag>dataurl</tag> element at <xref ref="topic-datafile"/>.</p>

        <paragraphs>
            <title>Text as Data Files</title>

            <p>Inside of a <tag>datafile</tag> place an <tag>pre</tag> element.  There are then two options: provide the contents of the text file right in your source <pretext/> file, as you might for other preformatted text, or supply a <attr>source</attr> attribute whose value is the name of an external text file you provide.  The former is appropriate for <q>toy</q> examples, while the latter may be used for <q>serious</q> files with many lines, or with long lines.  Note that if you provide the file as the content of the <tag>pre</tag> element, it can be indented to match your source file indentation, and will undergo some manipulation, such as removing leading whitespace, and ensuring a final newline, but preserving any <em>relative</em> indentation.  If provided via a <attr>source</attr> attribute, there is no manipulation.</p>

            <p>Such a text file may be declared editable by the reader, presumably to allow them to witness the resulting behavior of a some employing program.  The <attr>rows</attr> and <attr>cols</attr> attributes describe the viewport into the file provided in the <init>HTML</init> output.  Typically scrollbars will allow the reader to survey all of a large file.  In static outputs, the first few lines are shown, given by the value of <attr>rows</attr>, and lines are truncated according to the value of <attr>cols</attr>.</p>
        </paragraphs>

        <paragraphs>
            <title>Images as Data Files</title>

            <p>Inside of a <tag>datafile</tag> place an <tag>image</tag> element with a <attr>source</attr> attribute.  As usual, this attribute should be the name of an external file you provide.  Most common formats are supported, but it is important to use standard extensions, so the format can be discerned.  Now this file may be explored programmatically by opening the file using the name provided in <attr>filename</attr>.</p>

            <p>Keep the size of the image small, say 300<ndash/>400 pixels in each direction.  You may also supply the usual layout controls, such as <attr>width</attr>, and these will be consulted in the formation of output formats.  Ideally, you should use a width that scales the image to look something like its <q>native</q> resolution, since part of an image-processing exercise may depend on this aspect of the input.  <init>HTML</init> output uses a 600 pixel overall width, so a percentage can be computed based on this parameter.</p>
        </paragraphs>

        <paragraphs>
            <title>Notes on Data Files</title>

            <p>Some notes that apply to each type of data file.<ul>
                <li>Note that the name of the data file in a <attr>source</attr> attribute need not have any resemblance to the new name given to the file via the <attr>filename</attr> attribute.  In other words, the reader will never know (or care) what <attr>source</attr> was.</li>

                <li>Whenever the <attr>source</attr> attribute is used, there needs to be an advance step performed by the CLI <xref ref="processing-CLI"/>
                or the <c>pretext/pretext</c> script (<xref ref="pretext-script"/>) to generate an auxillary file (yes, a third file!) to aid the transistion from an external file to a file that can be used by the reader in programs.</li>
                <li>
                    <p>In all cases, for an <init>HTML</init> build the contents of the data file live within an <init>HTML</init> page, as text for a text file, and as a base-64 encoding for an image file.  Hence for a non-Runestone build, any employing program <em>must</em> be on the same page, and an author should think ahead about the granularity of how a project might be chunked into pages (<xref ref="publication-file-common"/>).</p>

                    <p>In a build for use on Runestone Academy, the file will be in the Runestone database and usuable throughout.</p>
                </li>
                <li>
                    <p>Some <tag>program</tag> run entirely in your browser, on Runestone Academy or not.  An example is when <attr>language</attr> is set to <c>python</c>.  Other <tag>program</tag>, such as <c>java</c> will only execute when hosted on Runestone Academy.</p>
                    <p>In the latter case, you need to do just a bit more than try to open a data file in your program's code.  Include a <attr>datafile</attr> attribute on the <tag>program</tag> element that is a list (separated by commas or space) of the filenames for files that will be used (these are the names given by the <attr>filename</attr> attribute of the <tag>datafile</tag> element).</p>
                </li>
            </ul></p>
        </paragraphs>
    </section>

    <section xml:id="topic-figure">
        <title>Figures</title>

        <p>A <tag>figure</tag> is the most generic and flexible container for planar content.  But be sure to read <xref ref="overview-figures-tables-etc"/> so you are aware of the other possibilities.  A figure has a <tag>caption</tag>, which will typically render below the content (even if authored early as metadata) and serves to provide an extra description of the content.  So it may be several sentences long.  There is also a <tag>title</tag>, which is typically not rendered as part of the figure.  Instead it is used for cross-references, or in a list of figures, to identify the figure.  So it should be very short and might just be a phrase, such as <q>Life Cycle of a Salamander.</q></p>

        <p>An <tag>image</tag> is likely the most frequent content in a <tag>figure</tag>.  But you may also place a <tag>video</tag>, <tag>audio</tag>, <tag>sidebyside</tag>, or <tag>sbsgroup</tag>.  Once completely implemented, an <tag>interactive</tag> is another possibility.  (See  <xref ref="topic-sidebyside"/> for more about the side-by-side construction.)</p>

        <p>A special situation is when a <tag>figure</tag> is a panel of a <tag>sidebyside</tag>, which is itself inside a <tag>figure</tag>.  Then the interior figure is <term>subnumbered</term>.  For example, the exterior figure might be Figure 4.12, and if a panel of the <tag>sidebyside</tag> is the second interior figure it will be Figure 4.12(b).  For example,<cd>
            <cline>&lt;figure&gt;</cline>
            <cline>    &lt;caption&gt;Salamanders at different life stages&lt;/caption&gt;</cline>
            <cline>    &lt;sidebyside&gt;</cline>
            <cline>        &lt;figure&gt;</cline>
            <cline>            &lt;caption&gt;Hatchling&lt;/caption&gt;</cline>
            <cline>            &lt;image source="salamader-hatchling.jpg"/&gt;</cline>
            <cline>        &lt;/figure&gt;</cline>
            <cline>        &lt;figure&gt;</cline>
            <cline>            &lt;caption&gt;Juvenile&lt;/caption&gt;</cline>
            <cline>            &lt;image source="salamader-juvenile.jpg"/&gt;</cline>
            <cline>        &lt;/figure&gt;</cline>
            <cline>        &lt;figure&gt;</cline>
            <cline>            &lt;caption&gt;Adult&lt;/caption&gt;</cline>
            <cline>            &lt;image source="salamader-adult.jpg"/&gt;</cline>
            <cline>        &lt;/figure&gt;</cline>
            <cline>    &lt;/sidebyside&gt;</cline>
            <cline>&lt;/figure&gt;</cline>
        </cd>could result in the entire figure being Figure 4.12 and then the juvenile salamander photograph would be inside of Figure 4.12(b).</p>
    </section>

    <section xml:id="topic-tabular">
        <title>Tables and Tabulars</title>

        <introduction>
            <p>A <tag>table</tag> is a container that houses a <tag>tabular</tag>, which is the actual rows and columns of table entries.</p>

            <p>Note that <tag>tabular</tag> may be constructed using the <url href="http://www.latex-tables.com/" visual="www.latex-tables.com"><latex /> Complex Table Editor</url> tool online and then exported in <pretext/> syntax. This produces verbose <pretext/> syntax that is usually equivalent to much simpler <pretext/> syntax once you understand the borders and alignment considerations below.</p>
        </introduction>

        <subsection>
            <title>Tables</title>
            <idx>table</idx>

            <p>A <tag>table</tag> is similar to other blocks in <pretext/> (<xref ref="topic-blocks"/>) and is most similar to a <tag>figure</tag>.  It will earn a number, which is likely to be a part of the text of a cross-reference pointing to the table.  Rather than a <tag>caption</tag>, it will have a <tag>title</tag>.  The main difference is that the principal content <em>must</em> be a <tag>tabular</tag>.  Only.</p>
        </subsection>

        <subsection>
            <title>Tabular</title>
            <idx>tabular</idx>

            <p>A <tag>tabular</tag> is the actual headers, rows, and columns of a table.  As discussed above, a typical use is to place it inside a <tag>table</tag>, though it can be placed all by itself, typically in among a run of paragraphs.</p>

            <p>Fundamentally a <tag>tabular</tag> is a sequence of <tag>row</tag> and each <tag>row</tag> is a sequence of <tag>cell</tag>, which could also be called <q>table entries.</q></p>
        </subsection>

        <subsection>
            <title>Table Cells</title>
            <idx><h>table</h><h>cell</h></idx>
            <idx><h>table</h><h>entry</h></idx>
            <idx><h>cell</h><h>table</h></idx>

            <p>A given cell can span multiple columns, by providing the <attr>colspan</attr> attribute with a value that is a positive number, the cell will extend to occupy additional columns.</p>
        </subsection>

        <subsection>
            <title>Table Rows</title>
            <idx><h>table</h><h>row</h></idx>
            <idx><h>row</h><h>table</h></idx>

            <p>A <tag>row</tag> of a table is a sequence of <tag>cell</tag> elements.  Each row should occupy the same number of cells, when considering the <attr>colspan</attr>, as discussed above.</p>

            <p>To achieve <em>column</em> headers, you indicate that a <em>row</em> contains headers.  Typically, the contents of every cell in this row will then be rendered in bold, or some other style.  The <tag>row</tag> element accepts a <attr>header</attr> attribute with possible values of <c>no</c> (the default), <c>yes</c>, or <c>vertical</c>.  The latter is useful if space is at a premium (which always seems to be the case with tables), and the cells of a column are narrow and the header is long.  Note that only the first (top) rows can be treated as column headers and these rows must be contiguous.  If you think you need column headers mid-tabular, maybe you really have two tables?</p>
        </subsection>

        <subsection>
            <title>Table Columns</title>
            <idx><h>table</h><h>column</h></idx>
            <idx><h>column</h><h>table</h></idx>

            <p>Prior to all of the <tag>row</tag> within a <tag>tabular</tag>, there may be a sequence of empty <tage>col</tage> elements.  Having these is optional, but once there is one, then there needs to be as many as the number of columns of the table.  These elements do not have any content that appears in the table, but are used to hold attributes that influence the borders or alignment of the cells within a column.  These are described below.</p>

            <p>So it should now be clear that, after much consideration, that we have chosen a <q>row first</q> approach to describing a table.</p>

            <p>We plan to support row headers, in a manner similar to column headers, with an attribute possible on the initial <tage>col</tage> elements.</p>
        </subsection>

        <subsection>
            <title>Table Borders and Rules</title>
            <idx><h>table</h><h>row</h></idx>
            <idx><h>row</h><h>table</h></idx>
            <idx><h>table</h><h>rule</h></idx>
            <idx><h>rule</h><h>table</h></idx>

            <p>You can view each cell of your table as having four borders.  Or you can imagine rows and columns separated by horizontal or vertical rules.  These additions to your table do not change the arrangement of information into rows and columns (a doubly-indexed data set), though you may think it makes the presentation clearer.  But less is actually more.</p>

            <note>
                <title>Vertical Rules in Tables</title>

                <p>One of the goals of <pretext/> is to gently guide authors towards good choices in the design of their documents, even if we do not claim to know it all ourselves.  Take a close look at <xref ref="table-ambiguous-characters"/>.  What's missing?  No vertical rules.  Try living without them, you will not really miss them.  If you think you need to divide a table into two halves, maybe you really need two tables (and then see the <q>side-by-side</q> capabilities, <xref ref="topic-sidebyside"/>).</p>

                <p>In the documentation for his excellent <latex/> package, <url href="https://www.ctan.org/pkg/booktabs" visual="www.ctan.org/pkg/booktabs">booktabs</url>, Simon Fear gives two rules for what he calls <q>formal tables</q>: (1) Never, ever use vertical rules, and (2) Never use double rules.  We have resisted the temptation to enforce the former and have provided an alternative to the second (three thicknesses).  He refers to using tables for layout as creating <q>tableau.</q>  If you are finicky about the look of your work, the first three pages of the documentation is recommended reading.</p>
            </note>

            <p>A given <tag>cell</tag> can have a border on its bottom edge, and on its right edge.  This is accomplished with the <attr>bottom</attr> and <attr>right</attr> attributes.  The possible values are <c>minor</c>, <c>medium</c>, and <c>major</c>, which control thickness.  (Not every conversion can produce three distinct thicknesses, so this should be considered a hint to the conversion.)  A value of <c>none</c> is the default behavior when the attribute is not used, but can be given explicitly.</p>

            <p>How to get a left border on the first cell of a row?  The <tag>row</tag> element allows a <attr>left</attr> attribute which will put a border on the left end of the row, which is also the left border of the first cell.</p>

            <p>How to get a top border on a cell?  Put a bottom border on the cell above it.  But what if the cell is already in the top row and has no cell above it?  The relevant <tag>col</tag> element allows a <attr>top</attr> attribute which will place the necessary border on the top-row cell.</p>

            <p>Borders and rules verge on presentation, so we are not concerned about which cell a border (or rule) belongs to.  So, generally <attr>bottom</attr> and <attr>right</attr> can be used in many places, and the exceptional <attr>top</attr> and <attr>bottom</attr> maybe used to get the missing border <m>n+1</m> for a vertical or horizontal sequence of <m>n</m> cells.</p>

            <p>The attributes described for cells may also be used on <tag>row</tag>, <tag>col</tag>, and <tag>tabular</tag>.  For example a thick horizontal rule after two rows of headers could be accomplished with<cd>
                <cline>&lt;row header="yes"&gt;...&lt;/row&gt;</cline>
                <cline>&lt;row header="yes" bottom="major"&gt;...&lt;/row&gt;</cline>
            </cd>We will not detail all the combinations that are possible, so experiment and you should be able to create any rational look (and some irrational ones).</p>
        </subsection>

        <subsection>
            <title>Table Cell Alignment</title>
            <idx><h>table</h><h>cell alignment</h></idx>
            <idx><h>cell alignment</h><h>table</h></idx>

            <p>The horizontal alignment of the contents of a <tag>cell</tag> can be influenced by the <attr>halign</attr> attribute with values <c>left</c>, <c>right</c>, <c>center</c>, and for <q>paragraph cells,</q> <c>justify</c>.  Similarly the <attr>valign</attr> attribute will influence the vertical alignment through values <c>top</c>, <c>middle</c>, and <c>bottom</c>.  Default alignments are <c>left</c> and <c>middle</c>.</p>

            <p>To align the cells of an entire <tag>row</tag>, <tag>col</tag>, or <tag>tabular</tag> identically, place the relevant attribute on the relevant element.  Note that these choices can be overridden by different values on individual consituents.</p>

        </subsection>

        <subsection>
            <title>Multi-line Cells</title>
            <idx><h>table</h><h>multi-line cell</h></idx>
            <idx><h>cell</h><h>table</h><h>multi-line</h></idx>

            <p>A cell of a table may contain more text that fits onto one line.  If you know exactly where you want the line-breaks to be, then structure the entire cell as a sequence of <tag>line</tag> elements.</p>

            <p>Or, if you want the contents of a cell to look and feel more like a paragraph (or several), structure the cell as a sequence of <tag>p</tag>, which can contain the usual content of a <tag>p</tag>, excepting <q>larger</q> content such as display mathematics or lists.  Now, in this case, you must constrain the width of the cell's column, to force the line-breaking necessary to render a paragraph as several lines.  Use the relevant <tage>col</tage> element, and specify a percentage of the tabular's overall width, like this:
                <cd>&lt;col width="40%"/&gt;</cd>
            A paragraph cell can be right-justified with the <attr>halign</attr> attribute set to <c>justify</c>.  But be aware that if the column is skinny, this can lead to awkward inter-word spaces.</p>
        </subsection>

        <subsection>
            <title>Breakable Tabulars</title>
            <idx><h>table</h><h>breakable</h></idx>
            <idx><h>tabular</h><h>breakable</h></idx>

            <p>A <tag>tabular</tag> may be specified as <term>breakable</term>, inside of a <tag>table</tag> or not.  Use the attribute <attr>break</attr> set to <c>yes</c>.  (The default is <c>no</c>.)  This only affects conversions to formats with page breaks, such as <init>PDF</init>.  Usually the motivation will be a <tag>table</tag> or <tag>tabular</tag> that is too long for a page, but even a shorter table can be allowed to page break.</p>

            <p>As of 2022-07-28 this is effective for simple tables, but introduces some variations for more complex constructions.  This is implemented with the <latex/> <c>longtable</c> package, which suggests it may take up to four passes with <latex/> to obtain the final version.  It is also not effective for a <tag>tabular</tag> that is a side-by-side panel.  Consult the sample article for examples where more progress is necessary.</p>
        </subsection>

        <subsection>
            <title>Table Philosophy</title>

            <p>The <pubtitle>Chicago Manual of Style</pubtitle> (15e, 13.1) says:</p>

            <blockquote>
                <p>A table offers an excellent means of presenting a large number of individual similar facts so that they are easy to scan and compare.  A simple table can give information that would require several paragraphs to present textually, and it can do so more clearly. <ellipsis/> A table should be as simple as the material allows and understandable on its own; even a reader unfamiliar with the material presented should be able to make general sense of a table.</p>
            </blockquote>

            <p>While our implementation allows for some presentational elements (borders, rules, alignment) our conversions will presume your table hews to the purposes described by CMOS.  In particular, it is not a device for spatial layout of complex elements.  You might find that the <tag>sidebyside</tag> and <tag>sbsgroup</tag> layout devices will suit that purpose better (see <xref ref="topic-sidebyside"/>).</p>

            <note>
                <title>Tables are Difficult</title>

                <p>Width is always at a premium, and then when a <tag>tabular</tag> has more than a few columns, the width becomes even more dear.  When a <tag>cell</tag> has text that looks like a phrase or a sentence, rather than numerical data or symbols, it can be even harder to pack it all in.  A common example is a schedule of talks at a small professional conference where each time slot (rows) might have two or three talks simultaneously in parallel sessions (columns).</p>

                <p>We offer <term>paragraph cells</term> which automatically break lines, but you need to specify a <attr>width</attr> on the <tag>col</tag> as a percentage to indicate where line-breaking happens.  For manual line-breaking, a <tag>cell</tag> can be structured entirely by <tag>line</tag> elements.</p>

                <p>The next complication is that the <latex/> used for <init>PDF</init> output tends to make columns as wide as necessary and will not break lines without the devices mentioned in the previous paragraph.  The <init>HTML</init> output can sometimes be a bit more forgiving and flexible.  So we suggest building the <latex/> output first and getting that right, and then the <init>HTML</init> is likely to follow along and not need much futher refinement.</p>

                <p>In contrast to most of <pretext/>, you may need to experiment, refine your approach, iterate, and maybe do things contrary to usual best practices elsewhere.  For example, the clickables for <init>URL</init>s and knowls might need to be short and less-informative in order to save some width.  Abbreviations, initialisms, and acronyms can also save some width.</p>
            </note>
        </subsection>

        <subsection>
            <title>Summary: Table Reference</title>

            <p>Finally, we summarize the available options for a table with<ellipsis/>a table.  Because it would take too much text to describe fully.</p>

            <p>This table describes how to construct tables via the <c>tabular</c> element.  The <c>table</c> element may be used to enclose the raw table, so as to associate a title and get vertical separation with horizontal centering.</p>

            <p>The <c>tabular</c> element contains a sequence of <c>row</c> elements, and must contain at least one.  Each <c>row</c> contains a sequence of <c>cell</c> elements and must have the same number in each row (acccounting for the use of the <c>colspan</c> attribute).  The contents of the <c>cell</c> elements are the text to appear in entries of the table.</p>

            <p>A sequence of <c>col</c> elements may optionally be used.  But if one appears, then there must be the right number for the width of the table.  They are empty elements always, and just carry information about their respective column.</p>

            <p>Where the body of the table below has an entry, it means the attribute may be used on the element, and affects the range of the tabular described by the element.  Employment of an attribute on elements to the right in the table will supersede use on elements to the left.  Generally, every cell has right and bottom borders, but only cells at the left side of the table have a left border and only cells across the top have a top border.  Only one cell has four borders.</p>

            <table>
                <title>Tabular Elements and Attributes (p = potential)</title>
                <tabular top="major" halign="center">
                    <col halign="left" />
                    <col/>
                    <col/>
                    <col/>
                    <col/>
                    <col halign="left"/>
                    <!--  -->
                    <row>
                        <cell>Attributes</cell>
                        <cell colspan="4" halign="center">Elements</cell>
                        <cell>Values</cell>
                    </row>
                    <row bottom="medium">
                        <cell></cell>
                        <cell><c>tabular</c></cell>
                        <cell><c>col</c></cell>
                        <cell><c>row</c></cell>
                        <cell><c>cell</c></cell>
                        <cell>* = default</cell>
                    </row>
                    <row>
                        <cell><c>top</c></cell>
                        <cell><times/></cell>
                        <cell><times/></cell>
                        <cell></cell>
                        <cell></cell>
                        <cell>none*, minor, medium, major</cell>
                    </row>
                    <row>
                        <cell><c>left</c></cell>
                        <cell><times/></cell>
                        <cell></cell>
                        <cell><times/></cell>
                        <cell></cell>
                        <cell>none*, minor, medium, major</cell>
                    </row>
                    <row>
                        <cell><c>bottom</c></cell>
                        <cell><times/></cell>
                        <cell></cell>
                        <cell><times/></cell>
                        <cell><times/></cell>
                        <cell>none*, minor, medium, major</cell>
                    </row>
                    <row>
                        <cell><c>right</c></cell>
                        <cell><times/></cell>
                        <cell><times/></cell>
                        <cell></cell>
                        <cell><times/></cell>
                        <cell>none*, minor, medium, major</cell>
                    </row>
                    <row>
                        <cell><c>halign</c></cell>
                        <cell><times/></cell>
                        <cell><times/></cell>
                        <cell><times/></cell>
                        <cell><times/></cell>
                        <cell>left*, center, right, justify</cell>
                    </row>
                    <row>
                        <cell><c>halign</c></cell>
                        <cell></cell>
                        <cell>p</cell>
                        <cell></cell>
                        <cell></cell>
                        <cell>decimal, character</cell>
                    </row>
                    <row>
                        <cell><c>header</c></cell>
                        <cell></cell>
                        <cell>p</cell>
                        <cell><times/></cell>
                        <cell></cell>
                        <cell>yes/vertical/no*</cell>
                    </row>
                    <row>
                        <cell><c>valign</c></cell>
                        <cell><times/></cell>
                        <cell></cell>
                        <cell><times/></cell>
                        <cell></cell>
                        <cell>top, middle*, bottom</cell>
                    </row>
                    <row>
                        <cell><c>colspan</c></cell>
                        <cell></cell>
                        <cell></cell>
                        <cell></cell>
                        <cell><times/></cell>
                        <cell>1*, positive integer</cell>
                    </row>
                    <row>
                        <cell><c>rowspan</c></cell>
                        <cell></cell>
                        <cell></cell>
                        <cell></cell>
                        <cell>p</cell>
                        <cell>1*, positive integer</cell>
                    </row>
                    <row>
                        <cell><c>width</c></cell>
                        <cell></cell>
                        <cell><times/></cell>
                        <cell></cell>
                        <cell></cell>
                        <cell>percentage</cell>
                    </row>
                    <row>
                        <cell>colors</cell>
                        <cell>p</cell>
                        <cell>p</cell>
                        <cell>p</cell>
                        <cell>p</cell>
                        <cell></cell>
                    </row>
                </tabular>
            </table>
        </subsection>
    </section>

    <section xml:id="topic-listing">
        <title>Program Listings</title>
        <p>A <tag>listing</tag> is really a specialized type of <tag>figure</tag>, whose purpose is to hold computer code.  Just like a figure, it has a <tag>caption</tag> and <tag>title</tag> which behave identically.  However, the enclosed planar content is limited to a <tag>program</tag> or <tag>console</tag> (see <xref ref="topic-program-console"/>).</p>
    </section>

    <section xml:id="topic-named-list">
        <title>Named Lists</title>
        <idx><h>list</h><h>named</h></idx>
        <idx><h>named list</h></idx>
        <idx><h>list</h><h>anonymous</h></idx>
        <idx><h>anonymous list</h></idx>

        <p>As mentioned above, it is not possible to have a list be the target of a cross-reference.  Should an entire list be <em>so important</em> that you need to point to it from elsewhere, then make it a <term>named list</term> by wrapping it in the <tag>list</tag> tag.</p>

        <p>This element can begin with an optional <tag>introduction</tag>, then has a single, required list, which may be any of the three types.  It concludes with an optional <tag>conclusion</tag>.  It can have an <attr>xml:id</attr> attribute, which in a way is the whole <foreign xml:lang="fr-FR">raison d'être</foreign> for this construction.  It will be numbered when rendered, and so also requires a <tag>title</tag>.  You might think of this as similar to a <tag>table</tag><mdash/>bits of information organized spatially, via indentation and line breaks.</p>

        <p>Since this element associates a number, title, to an entire list, we call it a <q>named list</q>.  What should we call a list that is authored within a paragraph and cannot be the target of a cross-reference?  We call it an <term>anonymous list</term> when we want to make the distinction.</p>
    </section>

    <section xml:id="topic-sage">
        <title>Sage</title>

        <introduction>
            <p>Until we can expand this section, get some ideas from <xref ref="overview-sage"/>.  We will also collect a few items here, to be cleaned-up later.</p>

            <p>For online output formats, sometimes the output of a Sage command can be overwhelming, and a bit complicated to parse.  Many objects in Sage also have a <latex/> representation, which can be used to create a superior output format (for some purposes).  Begin a cell with the <q>magic</q>:<cd>
                <cline>%display latex</cline>
            </cd>Experiment with the following Sage code on the next line<cd>
                <cline>integral(x^9*cos(x), x)</cline>
            </cd>Boom!  Very nice.  Try replacing <c>latex</c> with <c>None</c>, <c>plain</c>, <c>ascii_art</c>, or <c>unicode_art</c>.</p>
        </introduction>

        <subsection xml:id="sage-cell-design">
            <title>Sage Cell Server Design</title>

            <p>The ability to execute, and edit, chunks of Sage code is provided by a distinct project, the <url href="https://sagecell.sagemath.org/" visual="sagecell.sagemath.org/">Sage Cell Server</url>.  Simplifying somewhat, the Sage code a reader sees (or has edited!) is shipped out to a running instance of Sage (on a server <em>somewhere</em>) and the code is executed there.  The results of that computation are shipped back to the reader for display below the code.</p>

            <p>Two implications of this design are<ul>
                <li>It is not within your power to add additional packages for the supported languages.</li>
                <li>You cannot read a (data) file hosted on your project's site.</li>
            </ul>  Fortunately, there are workarounds.</p>

            <p>If your code needs a Python package, or an R package, or similar, and it is a standard open source package, then make a request on the <url href="https://groups.google.com/g/sage-cell" visual="groups.google.com/g/sage-cell">Sage Cell</url> Google Group.  Likely, it can be added/installed.</p>

            <!-- Details at: https://groups.google.com/g/sage-cell/c/ETeONQMYbQM/m/Tzl-rFmkAQAJ -->
            <p>Unfortunately, the ability to read files <em>anywhere</em> on the internet was abused, so this capability had to be restricted to a finite list of servers.  These include <url href="https://www.dropbox.com" visual="www.dropbox.com">DropBox</url> and <url href="https://github.com" visual="github.com">GitHub</url> where you might find it convenient to place files supporting your code.  Note that for GitHub, you likely want to use a <init>URL</init> which is a <q>raw</q> file such as for the <pretext/> repository <url href="https://github.com/PreTeXtBook/pretext/raw/master/README.md" visual="github.com/PreTeXtBook/pretext/raw/master/README.md">README</url> file, written with Markdown.</p>
        </subsection>
    </section>

    <section xml:id="topic-sidebyside">
        <title>Side-by-Side Panels</title>
        <idx>side-by-side panel</idx>

        <p>Documents, pages, and screens tend to run vertically from top to bottom.  But sometimes you want to control elements laid out horizontally.  A <tag>sidebyside</tag> is designed to play this role.  It is best thought of as a container, enclosing <term>panels</term><idx><h>panel</h><see>side-by-side panel</see></idx><idx><h>side-by-side panel</h><h>panel</h></idx>, and specifying their layout.  Examples include three images, all the same size and equally spaced.  Or a poem occupying two-thirds of the available width, with commentary adjacent in the remaining third.  Or an image next to a table.  But the most common use may be a single image (with no caption, and hence no number), whose width and horizontal placement are controlled by the layout.</p>

        <p>See the schema for the exact items that are allowed in a <tag>sidebyside</tag>.  To author, just place these items within <tag>sidebyside</tag> in the order they should appear, left to right.  Then you add attributes to the <tag>sidebyside</tag> element to affect placement.</p>

        <p>Instead of placing a <attr>width</attr> attribute on each item, instead place this on the <tag>sidebyside</tag> element.  A single <attr>width</attr> will use the same value for each panel.  For different widths, use the plural form <attr>widths</attr> and provide a space-separated list of percentages.  The default is to give each panel the same width, and as large as possible, which will result in no gap between panels.</p>

        <p>The margins can be specified with the <attr>margins</attr> attribute, which if given as a single percentage will be used for both the left and right sides.  You may also specify asymmetric left and right margins with two percentages, separated by a space, in the same attribute.  An additional option is to use the value <c>auto</c> which will set each margin to half of the (common) space between panels.  This is also the default.  In the case of a single panel, the left margin, right margin, and panel width should all add up to 100%.</p>

        <p>Once the widths and margins are known, any additional available width is used to create a common distance separating panels.  (Which is not possible when there is just a single panel.)</p>

        <p>Independent of horizontal positioning, individual panels may be aligned vertically.  The attribute is <attr>valigns</attr> and its value is a space-separated list of <c>top</c>, <c>middle</c>, and <c>bottom</c>.  The singular version, <attr>valign</attr>, is used to give every panel the same alignment, using the same keywords.  The default is to have every panel at the <c>top</c>.</p>

        <p>We could give lots of examples, but instead it might be best to just experiment.  Error-checking is very robust, so it is hard to get it too wrong.  OK, we will do just one to help explain.  Suppose a <tag>sidebyside</tag> contains three panels and has layout parameters given by<cd>
            <cline>&lt;sidebyside widths="20% 40% 25%" margins="auto" valign="middle"&gt;</cline>
        </cd>Then there will be 15% of the width left to space out the panels.  The two gaps are each 5% of the width, and the remaining 5% is split between the margins at 2.5% each.  And the vertical midlines of each panel are all aligned.</p>

        <p>For a single panel with no attributes, the panel will occupy 100% of the width.  A single panel with a specified width will get equal (auto) margins, resulting in a centered panel.</p>

        <p>Captioned items<idx><h>side-by-side panel</h><h>panel</h><h>captioned item</h></idx> as panels deserve special mention.  These will continue to be numbered consecutively, with one exception.  If you place a <tag>sidebyside</tag> inside of a <tag>figure</tag>, then the <tag>figure</tag> will be numbered, and the captioned items inside the <tag>sidebyside</tag> will be <term>sub-captioned</term><idx><h>side-by-side panel</h><h>panel</h><h>sub-captioned item</h></idx>.  In other words, the second captioned panel of a <tag>sidebyside</tag> inside Figure 5.2 would be referenced as Figure 5.2.b.</p>

        <p>An <tag>sbsgroup</tag> (<q>side-by-side group</q>) contains only <tag>sidebyside</tag>, which are displayed in order.  However, all of the layout parameters allowed on a <tag>sidebyside</tag> may be used on an <tag>sbsgroup</tag>.  This might allow a collection of fifteen images to be laid out in three rows of five images each, with widths and spacing identical for each row because the parameters are specified on the <tag>sbsgroup</tag> element.  In this way, simple grids can be constructed.  Note that any layout parameters given on an enclosed <tag>sidebyside</tag> will take priority over those given on the <tag>sbsgroup</tag>.  Captioning behavior extends to an entire <tag>sbsgroup</tag>.</p>

        <p>Since <tag>sidebyside</tag> and <tag>sbsgroup</tag> are containers they cannot be referenced and so do not have an <attr>xml:id</attr>.  However, you can reference their individual contents if they are captioned, and you can reference an enclosing <tag>figure</tag>.</p>

        <p>Generally, a <tag>sidebyside</tag> or <tag>sbsgroup</tag> can be placed as a child of a division, or within various blocks, such as <tag>proof</tag> for example.  See the schema for (evolving) specifics.</p>

        <p>It should be clear now that a <tag>sidebyside</tag> is more about presentation than most <pretext /> elements, though there is some semantic information being conveyed by grouping the panels with one another.</p>
    </section>

    <section xml:id="topic-front-matter">
        <title>Front Matter</title>

         <introduction>
            <p>A single <tag>frontmatter</tag> element can be placed early in your <tag>book</tag> or <tag>article</tag>, after some metadata, such as the overall <tag>title</tag>.  It is optional, but likely highly desirable.  The following subsections describe the items that may be employed within the <tag>frontmatter</tag>.  Most are optional, and some may be repeated.  An <tag>article</tag> differs in that it must contain a <tag>titlepage</tag> and then may <em>only</em> contain an <tag>abstract</tag>.  Generally, these will get default titles, localized in the language of your document, but these defaults may also be replaced by giving a <tag>title</tag> element.  None of these divisions themselves is numbered, precluding any content within that is numbered.  So, for example, no <tag>figure</tag> may be included.  But you could choose to include an <tag>image</tag>, perhaps within a <tag>biography</tag>.</p>

            <p>If a component of the front matter cannot be numbered, how best to subdivide something like a <tag>preface</tag>?  This is a good use of the <tag>paragraphs</tag> element.  It allows for a (minimal) title, but cannot be subdivided further.  See the later part of <xref ref="topic-divisions"/> for more about this exceptional element.</p>

            <p>These elements must appear in your source in the order given below, and will appear in your ouput in the same order, which is a generally accepted order used in the production of books.  So, for example, even if you author an <tag>acknowledgement</tag> between two <tag>preface</tag>, your output may (will?) place the Acknowledgement before the first Preface.</p>

            <p>(We have not yet described the contents of these various elements in full detail.)</p>
        </introduction>

        <subsection>
            <title>(*) Title Page</title>

            <p>Required.  Since the entire <tag>frontmatter</tag> is optional, we assume that the front matter at least includes the appearance of the document's overall <tag>title</tag>.</p>
        </subsection>

        <subsection>
            <title>(*) Abstract</title>

            <p>Optional, and only available for an <tag>article</tag>.</p>
        </subsection>

        <subsection xml:id="topic-front-colophon">
            <title>(*) Colophon</title>

            <p>The <em>front</em> colophon. (There is also a <em>back</em> colophon, see <xref ref="topic-back-colophon"/>).  Sometimes this is also called the <term>copyright page</term>.</p>
        </subsection>

        <subsection>
            <title>(*) Biographies</title>

            <p>Multiple <tag>biography</tag> elements, one per author.</p>
        </subsection>

        <subsection>
            <title>(*) Dedication</title>

            <p>A single <tag>dedication</tag> element, that might include multiple dedications (perhaps by different authors).</p>
        </subsection>

        <subsection>
            <title>(*) Acknowledgements</title>

            <p>A single <tag>acknowledgement</tag> element (note spelling), that becomes a division, and so can contain paragraphs, lists, etc.  The Chicago Manual of Style (15th Edition, 1.52) suggests that if these are short, they may be contained in a preface.</p>
        </subsection>

        <subsection>
            <title>(*) Forewords</title>

            <p>As of 2021-07-16 the <tag>foreword</tag> element is not fully implemented.  Please make a feature request if you need it.</p>

            <p>A <tag>foreword</tag> is written by somebody other than the author.  The name of the writer of the foreword need to be included<mdash/>at the end is a good location.</p>
        </subsection>

        <subsection>
            <title>(*) Prefaces</title>

            <p>Multiple prefaces are a distinct possibility, and in this case providing a different <tag>title</tag> for each would be essential.  Examples might include:  <articletitle>Preface to the Third Edition</articletitle>, <articletitle>How to Use this Book</articletitle>, or <articletitle>To the Student</articletitle>.  More ad-hoc material, such as a translator's note, can be handled as a preface.</p>

            <note xml:id="best-practice-preface">
                <title>Understand the Role of a Preface</title>

                <p>Chicago Manual of Style (15th Edition, 1.49) begins with <q>Material normally contained in an author's preface includes reasons for undertaking the work, method of research, <ellipsis/></q>  Note that a preface is not introductory content and is not an introduction.  It is written from the author's point-of-view, and may include information about why they are qualified to write on the topic of the book.  If there are several editions, the prefaces to the newer editions are placed first.  See the related <xref ref="best-practice-chapter-zero"/>.</p>
            </note>
        </subsection>

    </section>

    <section xml:id="topic-back-matter">
        <title>(*) Back Matter</title>

        <introduction>
            <p></p>
        </introduction>

        <subsection>
            <title>(*) Appendices</title>

            <p>Automatic lists (<xref ref="topic-automatic-lists"/>) can appear anywhere, but an appendix is a very natural place to place one.</p>
        </subsection>

        <subsection>
            <title>(*) Glossary</title>

            <p></p>
        </subsection>

        <subsection>
            <title>(*) References</title>

            <p></p>
        </subsection>

        <subsection>
            <title>(*) Solutions</title>

            <p></p>
        </subsection>

        <subsection>
            <title>(*) Index</title>

            <p></p>
        </subsection>

        <subsection xml:id="topic-back-colophon">
            <title>(*) Colophon</title>

            <p>The <em>back</em> colophon, what most authors think of as <em>the</em> colophon. (There is also a <em>front</em> colophon, see <xref ref="topic-front-colophon"/>).</p>
        </subsection>
    </section>

    <section xml:id="topic-index">
        <title>Index</title>

        <introduction>
            <p>Continuing our basic discussion from <xref ref="overview-index-notation"/>, we discuss some details of making and using index entries.  We will begin with how you <em>procedurally</em> author an index entry with <pretext/> syntax, and then move to general principles about how to use these constructions to create an effective index.  So these two subsections are intimately linked.</p>
        </introduction>

        <subsection>
            <title>Syntax and Placement of Index Entries</title>

            <note>
                <title>Capitalization of Index Entries</title>

                <p>The headings (entries) of an index are authored entirely in lower-case, unless it is a proper noun (name, place, <etc/>) which would normally be capitalized in the middle of a sentence.  We are not able to provide any enforcement of this advice, nor any assistance.  It is the author's responsibility to provide quality source material in this regard.  We do sort entries so that an entry with an initial capital letter arrives at the right location in the index.</p>
            </note>

            <p><em>Where</em> you place an <tag>idx</tag> entry is critical.  With <latex/> output, you will get the traditional page number as a locator in your index.  With <init>HTML</init> output we can be more careful.  We will look to see which sort of structure contains the <tag>idx</tag>.  Maybe it is an <tag>example</tag> or a <tag>subsection</tag>.  If so, the index will contain a locator that is a knowl of the example, or a link to the subsection.  The distinction is the size of the object, we do not knowl divisions.  The exception is a paragraph (<tag>p</tag>) that is a child of a division, and then the locator is a knowl of the entire paragraph.  Remember that a knowl contains an <q>in-context</q> link which can take the reader to the original location of the content in the knowl.</p>

            <p>A lot happens in a <pretext/> paragraph, especially when producing <init>HTML</init>.  Sometimes an <tag>idx</tag> can get in the way.  Our recommendation is to put <tag>idx</tag> entries <em>between</em> sentences, and not at the start or end of the paragraph.  They can be authored with each on their own line.  If you do not need the specificity of a paragraph, then locate the appropriate structure and author the <tag>idx</tag> right after the <tag>title</tag> (or where one would be).</p>

            <p>A <term>cross-reference</term> in an index is a pointer to another index entry.
                <idx><h>cross-reference</h><h>index</h></idx>
                <idx><h>index</h><h>cross-reference</h></idx>
            These are rendered as <q>See</q> and <q>See also.</q>  You can add <tag>see</tag> and <tag>seealso</tag> elements within an <tag>idx</tag>, so long as it is structured with <tag>h</tag>.  Then it is placed after the last <tag>h</tag>.  A <q>see</q> cross-reference is a direct pointer to another entry in the index.  It cannot have a locator as well.  When you build the <init>HTML</init> output, we will recognize this situation and produce a warning.  A <q>see also</q> cross-reference is an additional pointer, and so it must have a locator to go with it (you will author two <tag>idx</tag> with identical headings, the first without a <tag>seealso</tag> to create the locator, the second with the <tag>seealso</tag> to create the cross-reference.  Again, when you build the <init>HTML</init> output, we will recognize a <tag>seealso</tag> without a locator and produce a warning.</p>

            <p>Follow these directions and <pretext/> will format cross-references for you, in the style suggested by the <pubtitle>Chicago Manual of Style</pubtitle> (<acro>CMOS</acro>) for <init>HTML</init> output, and according to <latex/>'s style for print and <init>PDF</init>.</p>

            <p>(2019-03-04) We have consciously not said anything specific about what to place inside a <tag>see</tag> or <tag>seealso</tag> element.  At this writing, you need to supply the text.  Of course, this is error-prone and you will need to consult <acro>CMOS</acro> for formatting guidance.  But we have plans to do this the <pretext/> way.  First, the <c>ref/xml:id</c> mechanism will be used to automatically create the correct text for the cross-reference, both content and format.  Second, these will become live links in electronic formats.</p>

            <p>Certain index entries do not sort very well, especially entries that begin with mathematical notation.  Our first advice is to avoid this situation, but sometimes it is necessary.  The <attr>sortby</attr> attribute on an <tag>h</tag> element can contain simple text that will be used to override the content shown to the reader during the sorting of the index.</p>
        </subsection>

        <subsection xml:id="topic-index-advice">
            <title>Advice on Indexing</title>
            <idx><h>index</h><h>advice on</h></idx>

            <p>
              An index is a navigational aid for your readers (and you).
              We do not assume that a reader remembers where anything is,
              nor that the Table of Contents is a replacement for part of the index.
              Some readers of the index may not have even read your book yet,
              and are looking to get a feel for the range of topics as part of the decision of whether or not to read your book at all,
              or if it will be useful to have.
              It should be comprehensive, including everything substantive.</p>

            <p>
              Indexing is a job for a skilled professional, and most authors produce poor indexes.
              The tips in this section will help you avoid the most common pitfalls.
              We follow recommendations from the <pubtitle>Chicago Manual of Style</pubtitle>
              (specifically Chapter 18, 15th Edition),
              <pubtitle>Indexing for Editors and Authors: A Practical Guide to Understanding Indexes</pubtitle>
              <xref ref="indexing-guide"/>,
              and Pilar Wyman of <url href="http://www.wymanindexing.com/" visual="www.wymanindexing.com/">Wyman Indexing</url>.
            </p>

            <paragraphs><title>Terminology</title>
              <p>The basic element of an index is an <term>entry</term>, which consists of
                 a piece of information and its <term>locator</term>.  For example:
                 </p>
                 <pre>
                     normal subgroup,  37
                 </pre>
                 <p>
                 is an entry indicating that information about <q>normal subgroup</q>
                 can be found on page 37.
                 Indexes are (usually) organized alphabetically, with a
                 <term>main heading</term>
                 aligned with the left margin, and progressively indented <term>subheading</term>s below
                 the main heading.
              </p>

              <p>Often it is desirable to place the same locator under more than one heading,
                known as <term>double posting</term>.  For example, a desirable addition to the
                sample entry above is
                </p>
                <pre>
                subgroup,  28
                   normal,  37 .
                </pre>
                <p>
                An alternative to double posting is <term>cross referencing</term>, using
                <em>see</em> and <em>see also</em>.  Typically cross references are used to
                avoid repeating a large number of entries, or to direct the reader to related topics.
              </p>

              <p>An index may start with a <term>headnote</term> giving advice about using the index.
                Typically a headnote is not necessary unless the index has some unusual features.
              </p>
            </paragraphs>

            <paragraphs><title>Basic principles</title>
              <p>The purpose of an index is to point the reader to information.
                 Point to, not repeat.
                 For example, acronyms should be indexed at the location where they are defined,
                 not at every place they appear, and it is not necessary to define the acronym within the index.
                 People and places should be indexed when information is given about them,
                 not every time they are mentioned.
              </p>

              <p>A good index has multiple ways to find the same information.  Being redundant is desirable,
                 because it increases the chance the reader finds what they seek in the first place they look.
              </p>

              <p>Indexing is best done after the text has been written.  Adding index entries while writing
                 the text may seem to be a labor-saving device, but if you are not an experienced indexer,
                 those entries will only be a small fraction of the final index.
              </p>

              <p>Topics should be indexed in multiple ways.  If a term is defined, you should also think
                 of other words the reader might search for.  For example, you may define <q>limit point</q>
                 and consistently use only that term, but an index entry for <q>accumulation point</q> with a
                 <q><em>see</em> limit point</q> locator would be appropriate.
              </p>
              <p>Use <term>disambiguation</term> to distinguish identical terms with different meanings.
                For example
                </p>
                <pre>
                    isomorphism (of groups),  55
                    isomorphism (of rings),  123
                </pre>
                <p>
                Both of those entries should also be double posted under the main headings of <q>group</q>
                and <q>ring</q>, respectively.  No disambiguation is needed for those entries.
              </p>
              <p>
                Singular or plural forms of nouns should reflect the language in the text.
                So if a chapter is titled <articletitle>Mammals</articletitle>,
                then use a heading <c>mammals</c>.
                And if the chapter is titled <articletitle>The Mammal Class</articletitle>,
                then use a heading <c>mammal</c>.
              </p>
              <p>
                An index is typically as long as 5% of the main text.
                With many figures, or other structures creating additional whitespace,
                the percentage may be lower.  If your primary output is online,
                length may not be an issue.  For print, there are strategies for pruning an index.
              </p>
              <p>
                Once you have finished the text, and then finished the index,
                it is time for a thorough review of the index.
                There will be places for consolidation, often due to using variants of particular words.
                You may wish to remove subheadings which all appear within the range given in the heading.
                For example,
              </p>
              <pre>
                fish, 204-212
                   bass, 208-209
                   salmon, 210
                   trout, 207
              </pre>
              <p>
                could have all of its subheadings removed, especially if space is an issue.
              </p>
            </paragraphs>

            <paragraphs><title>Common pitfalls</title>
              <p>Sometimes it takes less than one second to determine that an index is poor.
                 If a quick glance reveals that the index consists mostly of main headings
                 with very few subheadings, then few readers will find it to be useful.
                 Double posting, which may mean more than literally two entries with the same locator,
                 will help readers find what they are looking for.  Most of those entries will
                 be in subheadings.
              </p>

              <p>Another instantly recognizable problem is too many locators in one entry.  This entry
              </p>
              <pre>
                  asymptote,  37, 48
              </pre>
              <p>
              is probably fine.  But once you have three or more locators in an entry, then
              your index may be improved by adding some subheadings.  If the locators in the above
              example refer separately to <q>horizontal</q> and <q>vertical</q>, then probably two subheadings
              would be more useful than two undifferentiated locators in one entry.
              </p>

              <p>An additional problem which can be seen at a glance if you know what to look for,
              is the absence of any main headings with a large number of subheadings.  On almost
              any subject there are topics which are addressed repeatedly.  This should be
              reflected in the structure of the index.  For example, in a group theory textbook
              there should be several entries under <q>group, examples</q>.  In an introductory
              calculus book the index should help the reader locate the derivative of many
              different elementary functions.
              </p>

              <p>
                Index headings should be nouns, not adjectives.  An adjective may be important,
                and you should use it, but it should not be the entire content of a heading
                since it is not an idea by itself.  But it may be a subheading. For example,
                suppose you have a paragraph on <q>highland sheep.</q>
                Then <em>both</em> of the following should appear in your index,
                since a reader might consult both locations.
              </p>
              <pre>
                highland sheep, 45
              </pre>
              <pre>
                sheep
                   highland, 45
              </pre>


<!-- Discuss pointing to entire section/chapter -->

<!-- singular plural -->


            </paragraphs>
        </subsection>
    </section>


    <section xml:id="topic-notation">
        <title>Notation</title>
        <idx>notation</idx>
        <idx>notation list</idx>
        <idx><h>list</h><h>of notation</h></idx>

        <p>We continue the introduction at <xref ref="overview-index-notation"/>.  A notation list, like an index, is a specialized collection of cross-references.  So some of the philosophy here applies equally well to the <tag>idx</tag> and <tag>index-list</tag> elements, and vice-versa.  (See <xref ref="topic-index"/>.)</p>

        <p>To generate a list of notation employed in a book or article, use the <tage>notation-list</tage> element.  This empty element belongs in an <tag>appendix</tag>.  Likely it is the only content, or you might include some preliminary material.  The title of the <tag>appendix</tag> is up to you and is not automatic.</p>

        <p>Some authors like to make definitions inside of paragraphs, ideally using a <tag>term</tag> element.  This is a natural place for a <tag>notation</tag> element.  So this approach gives an author a lot of flexibility in location.</p>

        <p>Other authors like to make definitions using the <tag>definition</tag> element, since it creates a heading and number, allows a <tag>title</tag>, and can easily serve as the target of a cross-reference.  So this is another good place for a <tag>notation</tag> element.  But now, associate it clearly with the <tag>defintion</tag> by placing it in the metadata, early on, after the <tag>title</tag>.  And not in some subsequent paragraph.  The reason will be clear in just a bit.</p>

        <p>How is a <tag>notation</tag> element constructed?  It has two elements.  The <tag>usage</tag> should be a sample piece of mathematics using the necessary symbols, and wrapped in a <em>single</em> <tag>m</tag> element.  The second element is <tag>description</tag> and should be a short phrase, or sentence-like material, decoding the sample usage, and may include <tag>m</tag> elements.  The reader sees nothing in the output at the location of the <tag>notation</tag> element.</p>

        <p>The automatically-generated notation list is then a three-column table, in the order of appearance, with the sample usage, the description, and a <term>locator</term>.  For output derived from <latex/>, such as print or <init>PDF</init>, the locator will be the page number of wherever you placed the <tag>notation</tag> element.  For <init>HTML</init> the locator is much better<mdash/>it is a knowl, for either a paragraph or for an entire definition.  The latter possibility explains why it is better to place the <tag>notation</tag> element inside a <tag>definition</tag>, if possible, rather than in a paragraph that is a constituent of a <tag>definition</tag>.</p>
    </section>

    <section xml:id="topic-automatic-lists">
        <title>Automatic Lists</title>

        <p>Sometimes it is useful to have an automatic list of various elements of one kind in a book, other than the ones already available in a <pretext/> document.  The predefined ones include an index (see <xref ref="topic-index"/>) and a list of notation (see <xref ref="topic-notation"/>).  Examples of lists one might wish to create could include lists figures, computational listings, or theorems.</p>

        <p>There is a very flexible way to make a list of various blocks (or perhaps other items) in your text.  Use an empty <tage>list-of</tage> element as a child of a division.  A very natural use would be to create an <tag>appendix</tag> for the sole purpose of holding one such list.  This is why this feature is frequently used in the back matter.  But you could place an <term>automatic list</term> many other places.</p>

        <p>We will illustrate with an example.  Suppose you know your book has theoretical results only in <tag>theorem</tag> and <tag>lemma</tag> elements.  So, for example, you never use <tag>corollary</tag> elements.  Then you could author</p>

        <pre><![CDATA[
        <appendix xml:id="appendix-list-results">
          <title>List of Results</title>

          <list-of elements="theorem lemma" divisions="chapter" empty="yes"/>
        </appendix>
        ]]>
        </pre>

        <p>The result will be a link to every <tag>theorem</tag> and <tag>lemma</tag> in the entire book, using a clickable with its type, number and title.  See <xref ref="best-practices"/> for an example. In <init>HTML</init> output the clickables will usually be knowls, which is especially handy.  The list will be organized with the titles of the chapters as headings.  The <attr>divisions</attr> attribute can have several types of divisions listed, such as both <tag>chapter</tag> <em>and</em> <tag>section</tag>.  The <attr>empty</attr> attribute set to <c>yes</c> indicates that a division heading should be used even if there is nothing on the list contained within.  The default for <attr>empty</attr> is <c>no</c>.</p>

        <p>This feature is best used when the items in the list have been authored with titles, which greatly increases the utility of the list for your reader.  Review <xref ref="best-practice-titles"/> if this advice is new to you.</p>

        <p>There is a <attr>scope</attr> attribute, which should be the name of an element which is a division containing the location of the <tag>list-of</tag> element.  Then the list is restricted to items within the specified division.  For example, if you have the <tag>list-of</tag> inside a <tag>subsection</tag> built for this purpose, and you use <c>@scope="section"</c> then the list will have all the items from throughout the section containing the list.</p>

        <p>There are four types of exercises, based on their location: inline, divisional, worksheet, and reading questions.  These may be specified inside <attr>elements</attr> by the <term>pseudo-elements</term>: <c>'inlineexercise'</c>, <c>'divisionexercise'</c>, <c>'worksheetexercise'</c>, <c>'readingquestion'</c>.  (These are just strings meant for this purpose, and are not <em>real</em> <pretext/> elements.)</p>

        <p>There may be an argument for a <attr>ref</attr> attribute that would behave similar to <attr>scope</attr>.  Make a feature request if you need it?</p>

    </section>

    <section xml:id="topic-url">
        <title><init>URL</init>s and External References</title>
        <idx>URL</idx>
        <idx>external reference</idx>

        <subsection>
            <title><init>URL</init>s to External Web Pages</title>

            <p>The <tag>url</tag> element is used to point to <em>external</em> web pages, or other online resources  (as distinct from other internal portions of your current document, which is accomplished with the <tage>xref</tage> element, <xref ref="overview-cross-references"/>).  The <attr>href</attr> attribute is always necessary, as it contains the full and complete address of the external page or resource.  Include everything the <init>URL</init> needs, such as the protocol, since this will be most reliable, and as you will see it never needs to be visible.  The element always allows, and then employs, a <attr>visual</attr> attribute for a provided more-friendly version of the address.  Finally, the content of the element, which becomes the clickable text in electronic formats, can be authored with the full range of <pretext/> markup generally available in a title or sentence.  A typical use might look like<cd>
                <cline>&lt;url href="https://example.com/" visual="example.com"&gt;Demo Site&lt;/url&gt;</cline>
            </cd>This will render as <url href="https://example.com/" visual="example.com">Demo Site</url>.  Note the automatic footnote providing the visual version in a monospace font.  If a <tag>url</tag> has content, and no <attr>visual</attr> attribute is given, then the <attr>href</attr> will be placed in a footnote, though there will be an attempt to remove standard protocols.  Compare
            <cd>
                <cline>&lt;url href="https://example.com/"&gt;Demo Site&lt;/url&gt;</cline>
            </cd>which will render as <url href="https://example.com/">Demo Site</url> versus<cd>
                <cline>&lt;url href="mailto:nobody@example.com"&gt;Bouncing Email&lt;/url&gt;</cline>
            </cd>which will render as <url href="mailto:nobody@example.com">Bouncing Email</url>.</p>

            <p>If you do not provide any content for a <tage>url</tage> element, then the clickable text will be the actual <init>URL</init> with a preference for the (optional) <attr>visual</attr> attribute, rather than the mandatory <attr>href</attr> attribute.  This should be considered as disruptive to the flow of your text, and so a poor alternative to the content version just discussed (see <xref ref="best-practice-urls"/>).  But it might be a good choice in something like a list of interesting web sites.  Whether or not a simplified version of the address, via the <attr>visual</attr> attribute, is desirable will depend on the application.  As an example, using the optional <attr>visual</attr> attribute we have<cd>
                <cline>&lt;url href="https://example.com/" visual="example.com"/&gt;</cline>
            </cd>This will render as <url href="https://example.com/" visual="example.com"/>.  Note that there is no footnote since the visual version is already apparent.</p>

            <p>If you want to squelch the automatic footnote on a <tag>url</tag> element with content, you can explicitly set the <attr>visual</attr> attribute to an empty string as <c>visual=""</c>.  This signal will inhibit the automatic footnote.  This should be a <em>very rare</em> occurence, since you are denying readers of some formats from seeing even a hint of the actual <init>URL</init>.  One example of this is a regular footnote, which contains a <init>URL</init>.  The automatic footnote, inside another footnote, becomes problematic in some conversions.  Better to squelch the footnote-within-a-footnote, and just list nearby a <init>URL</init>, likely using the <tag>c</tag> element to get a monospace font.</p>

            <p>A <tag>url</tag> inside a <tag>title</tag> has been accounted for, but should be used with caution.</p>

            <p>As with the rest of <pretext/> we have taken care to handle all of the exceptional characters that might arise in a <tag>url</tag>.  So author normally, using the necessary keyboard characters, only taking care with the two <init>XML</init> characters, <c>&lt;</c> and <c>&amp;</c>, which need escaping (see <xref ref="overview-exceptional-characters"/>).  Use <term>percent-encoding</term><idx>percent encoding</idx><idx><h>percent encoding</h><seealso>URL encoding</seealso></idx> (aka <term>URL encoding</term><idx><h>URL</h><h>URL encoding</h></idx>) for the <attr>href</attr> attribute, if necesary, to include special characters, such as spaces.  See <xref ref="topic-url-characters"/> below for a common need for the ampersand character, and a further caution  about percent-encoding of <init>URL</init>s.</p>

            <p>Finally, for conversion to <latex/>/PDF output it gets extremely tricky to handle all the various meanings of certain escape characters in <init>URL</init>s in more complicated contexts (such as tables, footnotes, and titles), so there may be some special cases where the formatting is off or you get an error when compiling your <latex/>.  We have anticipated most of these situations, but we always appreciate reports of missed cases.</p>
        </subsection>

        <subsection xml:id="topic-dataurl">
            <title>Data <init>URL</init>s</title>
            <idx><h>URL</h><h>data</h></idx>
            <idx>data URL</idx>

            <p>A <tag>dataurl</tag> element is very similar to the <tag>url</tag> element just described.  The purpose is to point to an actual file that will be of use to your readers.  What actual happens when a reader clicks on it is dependent on the format of the <pretext/> output and that reader's environment.  Maybe the file will be downloaded, or maybe a particular application will open the file.  That part is out of our hands.  Use an <attr>href</attr> attribute in the same way as for <tag>url</tag>, and the content and the <attr>visual</attr> attribute also behave similarly.</p>

            <p>The one key differerence is that you can also use a <attr>source</attr> attribute in place of <attr>href</attr> and point to a file that you provide as part of your project (not unlike providing a photographic image via the <tag>image</tag> element).  Place the file in your collection of external files (see <xref ref="processing-directory-management"/>) and provide the path to your file from below the directory of external files in the <attr>source</attr> attribute.  For <init>HTML</init> output, <pretext/> will do the rest.  For more static formats, you can set a base <init>URL</init> (see <xref ref="online-baseurl"/>) and you will get a complete <init>URL</init> that points to the instance of your file hosted with the rest of your <init>HTML</init> output.</p>

            <p>Notice that this element provides limited functionality, at best just a hyperlink to a file.  For data files that you want a reader's in-browser computer program to process, read about the <tag>datafile</tag> element at <xref ref="topic-datafile"/>.</p>
        </subsection>

        <subsection xml:id="topic-visual-urls">
            <title>Visual <init>URL</init>s</title>
            <idx><h>URL</h><h>visual</h></idx>

            <p>By a <term>visual URL</term> we mean a version of a <init>URL</init> that is simpler than the <q>real</q> <init>URL</init>, but that provides enough information that a reader can type the <init>URL</init> into some other device with a minimum of effort, and with success.  Consider that your project may someday be a print (hardcopy) book, or that your project will be converted to braille for a blind reader.  These are some ideas about making a <init>URL</init> simpler.  We welcome more ideas.<ul>
                <li>Remove standard/default protocols like <c>http://</c> and <c>https://</c> which most browsers will furnish in their absence.</li>
                <li>Sites like <url href="https://stackexchange.com/" visual="stackexchange.com">StackExchange</url> list posts with a long identifying number, followed by something that looks like the title.  In practice, the number is enough.</li>
                <li>Experiment with dropping a trailing slash<mdash/>they are frequently unnecessary.</li>
                <li>Often a leading <c>www.</c> in a domain name is not necessary.</li>
                <li>Try providing just a domain name in place of a top-level landing page, it will often redirect to a longer <init>URL</init>.</li>
                <li>You could use a <url href="https://en.wikipedia.org/wiki/Wikipedia:URLShortener" visual="https://w.wiki/4QA">URL shortener</url>, though some thought should be given to <url href="https://en.wikipedia.org/wiki/Google_URL_Shortener" visual="https://w.wiki/4eEM">its longevity</url>.  Will you remember where your short <init>URL</init>s point once they are no longer functional.  Safer to have your long <init>URL</init>s in an <attr>href</attr> in your source, and use <pretext/> to make them friendlier.</li>
            </ul></p>

            <note xml:id="best-practice-urls">
                <title>Craft URLs Carefully</title>

                <p>Your writing will be smoother, and easier on your readers, if you do not interrupt a sentence with a long <init>URL</init>, unless somehow it is really of interest and relevant right there.  So provide content (the <q>clickable</q> text) when you use the <tag>url</tag> element (rather than an empty <tage>url</tage>).  This obligates you to provide a <attr>visual</attr> attribute, which feels a little like a tedious exercise.  But this will be very welcome to some of your readers, those who are unable or prefer not to use electronic formats.  Just above (<xref ref="topic-visual-urls"/>), we provide suggestions for crafting these to be more pleasing, but still useful, versions of <init>URL</init>s.</p>
            </note>
        </subsection>

        <subsection xml:id="topic-url-characters">
            <title>Characters in <init>URL</init>s</title>
            <idx><h>URL</h><h>query string</h></idx>

            <p>A <init>URL</init> can have a <term>query string</term>, which has a list of parameters following a question-mark.  The parameters are separated by ampersands (&amp;), which will need to be escaped, so as to not confuse the <init>XML</init> processor.  So use <c>&amp;amp;</c> anywhere the ampersand <em>character</em> is necessary, such as a <attr>source</attr> attribute, or a monospace version of a <init>URL</init> achieved with a <tag>c</tag> element.  Also, the question-mark character should <em>not</em> be <init>URL</init>-encoded (<c>%3F</c>) (despite advice just given above), so if necessary edit it to be the actual character.  General advice about exceptional characters in <init>XML</init> source can be found in <xref ref="overview-exceptional-characters"/>.</p>
        </subsection>
    </section>

    <section xml:id="topic-video">
        <title>Video</title>
        <idx>video</idx>

        <introduction>
            <p>A video is a natural way to enhance a document when rendered in an electronic format, such as <init>HTML</init> web pages.  It might be additional information that is hard to communicate with text (marine invertebrates swimming), a lecture or presentation that augments your text, or even some artistic work, such as a symphony legally hosted on YouTube, when you could never hope to get copyright clearance yourself.</p>

            <p><pretext /> supports videos you own and distribute with your source, videos shared openly on the Internet via stable <init>URL</init>s, and videos available on YouTube.  Go straight to to the end of this section to see how easy it is to incorporate a YouTube video.</p>

            <p>HTML5 web browsers are able to play video files in three formats, summarized in the following table.</p>

            <table xml:id="table-video-formats">
                <title>HTML5 video formats</title>

                <tabular>
                    <row>
                        <cell>Format</cell>
                        <cell>Extension</cell>
                        <cell>Reference</cell>
                    </row>
                    <row>
                        <cell>Ogg, Theora</cell>
                        <cell><c>.ogg</c></cell>
                        <cell>Free and open, <url href="https://en.wikipedia.org/wiki/Ogg" visual="en.wikipedia.org/wiki/Ogg">Wikipedia</url></cell>
                    </row>
                    <row>
                        <cell>WebM</cell>
                        <cell><c>.webm</c></cell>
                        <cell>Royalty-free, <url href="https://en.wikipedia.org/wiki/WebM" visual="en.wikipedia.org/wiki/WebM">Wikipedia</url></cell>
                    </row>
                    <row>
                        <cell>MPEG-4</cell>
                        <cell><c>.mp4</c></cell>
                        <cell>Patent encumbered, <url href="https://en.wikipedia.org/wiki/MPEG-4_Part_14" visual="en.wikipedia.org/wiki/MPEG-4_Part_14">Wikipedia</url></cell>
                    </row>
                </tabular>
            </table>
        </introduction>

        <subsection>
            <title>Video Element</title>

            <p>The <tag>video</tag><idx>video</idx> element is used to embed a video in output formed from <init>HTML</init>.  Subsections below describe the different ways to indicate the source of the video.  The video may be placed inside a <tag>figure</tag> or can be a panel of a <tag>sidebyside</tag>.  The former will have a caption, be numbered, and hence can be the target of a cross-reference (<tag>xref</tag>).  The latter is anonymous, but allows for horizontal layout, and combinations with other panels.</p>

            <p>Size is controlled by a <attr>width</attr> attribute expressed as a percentage (on the <tag>video</tag> element when used in a figure, or as part of the <tag>sidebyside</tag> layout parameters).  Height is controlled by giving the <term>aspect ratio</term><idx>aspect ratio</idx><idx><h>aspect ratio</h><seealso>video</seealso></idx><idx><h>video</h><h>aspect ratio</h></idx> with the <attr>aspect</attr> attribute on the <tag>video</tag> element.  The value can be a ratio expressed like <c>4:3</c> or a decimal number computed from the width divided by the height, such as <c>1.333</c>.  The default for videos is a 16:9 aspect ratio, which is very common, so you may not need to specify this attribute.</p>

            <p>Options include specifying a <attr>start</attr> and an <attr>end</attr> in seconds as integers (no units) if you only want to highlight a key portion of a video.  The <attr>play-at</attr> attribute can take the following values<dl width="narrow">
                <li>
                    <title><c>embed</c></title>
                    <p>Play in place (the default action).</p>
                </li>
                <li>
                    <title><c>popout</c></title>
                    <p>Play in new window or tab, at 150% width.</p>
                </li>
                <li>
                    <title><c>select</c></title>
                    <p>Provide the reader the choice of the other two options.</p>
                </li>
            </dl>In an educational setting, sometimes the preview images provided by YouTube can be distracting, or for an author-provided video you may wish to provide your own preview image.  The <attr>preview</attr> attribute can take on the following values<dl width="narrow">
                <li>
                    <title><c>generic</c></title>
                    <p><pretext /> supplies a Play-button image.</p>
                </li>
                <li>
                    <title><c>default</c></title>
                    <p>Whatever the video playback provides.  This is identical to simply not including <attr>attribute</attr> at all</p>
                </li>
                <li>
                    <title>Path to an image file</title>
                    <p>Typically, this will be a relative path, starting with <c>images/</c>.  This image will be used as preview for the online version and the print version.</p>
                </li>
            </dl></p>
        </subsection>

        <subsection>
            <title>Author-Provided Videos</title>

            <p>If you own and possess your video content, then you can distribute it with your <pretext /> source, and it can be hosted as part of your <init>HTML</init> output.  Then the <attr>source</attr> should be a relative file name that points to the file containing the video.  If you are able to provide more than one of the three formats in <xref ref="table-video-formats" />, then you can provide the filename <em>without an extension</em>.  If a browser cannot play one format, it may be able to play another.  <pretext /> will write the code to make that happen, preferentially in the order of the table (more open formats first!).  In other words, you can provide files in more than one format and increase the likelihood that a reader's browser will find a format it can playback.</p>
        </subsection>

        <subsection>
            <title>Network-Hosted Videos</title>

            <p>If a video is shared openly on the Internet, you can simply provide the full <init>URL</init> for the <attr>source</attr> attribute.  All the other attributes are the same as for the author-provided case, above.  Read <xref ref="topic-url-characters" /> for some considerations when authoring a <init>URL</init>, since there are a few gotchas.</p>

            <p>You can frequently discover the <init>URL</init> of a video by first playing it, and then using a context menu (<eg /> via a right-click) to reveal an option to copy the video's location.  However, note that there are various techniques sites use to make such a <init>URL</init> temporary, or otherwise unusable.  So do some research about potential uses and test carefully.  Our example below is provided from a United States government site.</p>

            <figure>
                <caption>Sea Hares, Flower Garden Banks National Marine Sanctuary</caption>
                <video xml:id="video-sea-hares" href="https://flowergarden.noaa.gov/image_library/video/seaharew.mp4" width="80%" preview="sea-hare.jpg" />
            </figure>
        </subsection>

        <subsection>
            <title>YouTube Videos</title>

            <p>For a video hosted at YouTube, find the 11-character identification string in the address of a video you are viewing.  It will look something like <c>hAzdgU_kpGo</c>.  Then, instead of the <attr>source</attr> attribute, simply provide this identification string as the <attr>youtube</attr> attribute, such as<cd>
                <cline>youtube="hAzdgU_kpGo"</cline>
            </cd>That's it.  All of the options above are then implemented and realized with YouTube's embedded player.</p>

            <p>This can be a great way to incorporate popular or artistic content, legally, which might be difficult or costly to acquire through copyright clearance.</p>

            <figure>
                <caption>The Eagles, <articletitle>Hotel California</articletitle></caption>
                <video xml:id="video-hotel-california" youtube="YW4dzWE1SUs" width="60%" start="12" preview="hotel-california.jpg" />
            </figure>

            <figure>
                <caption>Mozart, Piano Sonata in C Major, K. 545, II</caption>
                <video xml:id="mozart-piano-sonata" youtube="1Yv_AINhVn4" width="80%" preview="mozart-piano.jpg" />
            </figure>

            <p>The <c>pretext</c> script (<xref ref="pretext-script" />) may be used to download the provided preview images for YouTube videos (only).  Filenames will be formed from the <attr>xml:id</attr> of the <tag>video</tag> element.  These will be used in static versions of output, such as print.  Once custom preview images are implemented for author-hosted video, their static representation will improve.</p>

            <p>Additionally, a YouTube <term>playlist</term> can be included in one of two ways. You may set the <attr>youtube</attr> attribute to be a space-separated list of several video IDs (an <q>itemized</q> playlist). Alternatively, you may set the <attr>youtubeplaylist</attr> attribute to a YouTube playlist ID (a <q>named</q> playlist). At present, a named playlist will not get a thumbnail image from Youtube, and either the <q>generic</q> thumbnail will be used or you can supply your own <attr>preview</attr>.</p>

            <figure>
                <caption>YouTube Playlist</caption>
                <video youtubeplaylist="PLGRecdYLYDNdX5NEkS3KH-ZtCqc2f8lJ_" />
            </figure>

            <p>Make a feature-request if a scheme similar to the one for YouTube, but for some other video-hosting service, would be useful for your project.</p>
        </subsection>
    </section>

    <section xml:id="topic-music">
        <title>(*) Music</title>

        <p>TODO: Scholarly works discussing music may use notes and chords in text, and displays of sheet music are easily supported. (TODO: add some discussion to <xref ref="overview" />.)</p>

    </section>

    <section xml:id="topic-units-measure">
        <title>(*) Units of Measure</title>
        <p></p>
    </section>

    <section xml:id="topic-unicode">
        <title>Unicode Characters</title>
        <idx>Unicode characters</idx>

        <introduction>

            <p><pretext /> supports (and encourages) the use of Unicode characters.  Here are some relevant comments.<ul>
                <li><p>Unicode characters will migrate well to any output format based on <init>HTML</init>.  Most browsers will have a variety of fonts with glyphs to realize these characters.</p></li>

                <li><p><latex /> will not always behave as smoothly.  For openers, you definitely will want to use the <c>xelatex</c> engine to build a <init>PDF</init>.  Then you need to be sure your system has a font with the necessary characters and you make the font known to <c>xelatex</c>.  We are working out the details of the best way to accomplish this.</p></li>

                <li><p>How do you get a Unicode character into your source?  In part this is specific to your operating system and editor, so is outside the scope of this guide, but we have hints below for popular operating systems.</p></li>

                <li><p>You can always place a Unicode character in your source using <init>XML</init> syntax.  The first thing an <init>XML</init> parser will do is convert this syntax into a character.  The number of the <c>SECTION SIGN</c> in hexadecimal is <c>A7</c>, so the syntax <c>&amp;#xA7;</c> is identical to the  character &#xA7;.  Of course, this will get tedious fast.</p></li>

                <li><p>The <url href="https://www.cs.tut.fi/~jkorpela/fui.html8" visual="www.cs.tut.fi/~jkorpela/fui.html8">Full Unicode Input</url> utility at <c>www.cs.tut.fi/~jkorpela/fui.html8</c> will allow you to specify a chunk of 256 consecutive Unicode numbers and then you can click on characters to make a string of several or many.  You can cut/paste these into your source, or convert the whole lot to <init>XML</init> syntax all at once.</p></li>

                <li><p>Unicode characters have standardized names.  You can find these, and more information, including font support, at the Unicode section of <url href="http://www.fileformat.info/info/unicode/" visual="www.fileformat.info/info/unicode/">FileFormat.info</url>.  If you are struggling to find a specific character, then using this site's name in a search will often quickly locate what you need.  Be sure to experiment with the test pages there for browser and font support (including checking your local configuration).</p></li>

                <li>
                    <p><alert>Warning</alert>: do not use Unicode characters as a way to get mathematical symbols (that is delegated to our use of <latex /> syntax).  And do not use Unicode when we have provided an empty element for a character.  These empty elements are conveniences, which spare you from looking up Unicode numbers and make your source more readable.  We also sometimes fine-tune these characters in ways that are not possible if you embed them as Unicode.  An example is <c>&lt;times /&gt;</c>, for use outside of a strictly mathematical setting:  <q>I bought a 2<times />4 at the lumberyard.</q></p>
                </li>
            </ul></p>
        </introduction>

        <subsection>
            <title>Unicode Support in OSX</title>

            <p>Mitch Keller reports on 2017-01-12 a way to get some popular characters with OSX.  Use the Keyboard preference pane under System Preferences. In there, you can enable <cd>
                <cline>Show Keyboard, Emoji, &amp; Symbols Viewers in menu bar</cline>
            </cd>Once you activate the keyboard viewer, you get a keyboard on your screen. When you hold down <c>opt</c>, it shows you what other symbol you would get if you push <c>opt+letter</c>. For instance, <c>opt+w</c> gives an upper-case Greek sigma and <c>opt+=</c> gives a not-equals sign (neither of which we can handle when processing the latex version of this guide). To get ä, you type <c>opt+u</c> and then hit <c>a</c>. This is illustrated by the keys for diacritical marks being highlighted in orange while holding opt.  The shift key can have an effect to produce variations of some characters, such as quote marks (dumb versus smart).</p>
        </subsection>

        <subsection>
            <title>(*) Unicode Support in Linux</title>
            <p></p>
        </subsection>

        <subsection>
            <title>(*) Unicode Support in Windows</title>
            <p></p>
        </subsection>
    </section>

    <section xml:id="topic-braille-practices">
        <title>Braille Best Practices</title>
        <idx><h>braille</h><h>best practices</h></idx>

        <p>This is an evolving list of best practices for authoring (and publishing) so that a conversion to braille is as useful as possible for the blind reader.</p>

        <p>Many recommendations for mathematics will be useful to any reader, but perhaps even moreso for a blind reader, so read <xref ref="topic-mathematics-practices"/>.  Recommendations here may also improve your project for all readers.  See <xref ref="publisher-braille"/> for more about the mechanics of producing output as braille.</p>

        <paragraphs>
            <title>Division Numbering</title>

            <p>Braille uses various devices to indicate division headings, since font weight, size, and color are not available.  These include starting on a new page, centering text, preceding with a blank lines, standard levels of indentation (4 or 6 cells), and combinations of these devices.</p>

            <p>In a conversion from <pretext/>, the text of each heading is the number of the division, followed by the title.  So the formatting and the presence of a hierarchical number are together good clues that a new division is starting.  And the number of parts in the hierarchical number will also serve as a precise indicator of the depth of the division.</p>

            <p>As a publisher, you can <q>turn off</q> division numbering below some level (<xref ref="publication-file-numbering"/>).  Think carefully about the impact this will have on a blind reader, since lesser division headings will be harder to recognize without a leading number.</p>
        </paragraphs>

        <paragraphs>
            <title>Side-By-Side Layout</title>

            <p>A <tag>sidebyside</tag> can be a very useful device, but think carefully about its suitability.  As of 2022-11-30, we have yet to even handle them carefully in a braille conversion.  And if your panels hold images, that is even harder, since we do not have good support for tactile images yet.</p>

            <p>In any event, we will likely <q>unwind</q> a <tag>sidebyside</tag> into a series of its panels running <em>down</em> the page, rather than <em>across</em>, along with a note about how many panels to expect.  So when you author a <tag>sidebyside</tag>, consider how this alternate presentation in braille will be received by the reader.</p>
        </paragraphs>
    </section>

    <section xml:id="topic-doctest-sage">
        <title>(*) Testing Sage Examples</title>
        <p></p>
    </section>

    <section xml:id="topic-xinclude">
        <title>Xinclude Modularization</title>

        <p>The <c>xinclude</c><idx><c>xinclude</c></idx> mechanism is not part of <pretext />, <foreign>per se</foreign>.  It is of some use for organizing your authoring, so you do not have mammoth files open in your text editor.  As discussed in <xref ref="processing-modular" /> there is very little value in modularizing so much that you have many very small files, and also almost no benefit whatsoever to using directory structure to duplicate the inherent tree-like structure of <init>XML</init>.  Many small files, or deeply-nested directories, seem to be of little help and can cause more headaches than they are worth.</p>

        <p>The <c>xinclude</c> mechanism automatically introduces a <attr>xml:base</attr> attribute, which we need to account for in the RELAX-NG schema (<xref ref="schema" />).  So we limit which <pretext /> elements may be the root element of an included file.  The rough, general rule is that if an element <em>can</em> have a title, then it can be the root element of an included file.  So in particular each of the divisions (<tag>chapter</tag>, <tag>section</tag>, <etc />) is a candidate.</p>

        <p>One special exception to this restriction is the use of text files, containing absolutely no markup at all.  Two good examples are the <tag>input</tag> child of a <tag>program</tag> or the <tag>latex-image</tag> element used to describe an <tag>image</tag> by source code that <latex /> understands.</p>

        <p>In both cases you can put the text content of these elements in a separate file, use the <attr>href</attr> attribute of <tag>xi:include</tag> to point to the file, and then the twist is to set the <attr>parse</attr> attribute to the value <c>text</c>.  This has two general benefits.  First, you now <em>cannot</em> have any <init>XML</init> in the file, so you do not have to have a single root element for the file (and so the schema imposes no restrictions).  Second, you do not need to escape any problematic characters like ampersands and angle brackets (<xref ref="topic-verbatim-literal" />), nor use the misunderstood <init>CDATA</init> mechanism.</p>

        <p>Additionally, in the case of <tag>latex-image</tag> you can park unsightly code away in files so you do not have to look at it, or you can create a small driver <latex /> program to test each one, or even better, you may want to use the same image more than once (maybe in different figures?) and can just include it repeatedly, while only ever editing the single copy.</p>

        <p>Finally, the <tag>input</tag> and <tag>output</tag> children of <tag>program</tag>, <tag>sage</tag>, and <tag>console</tag> are also candidates for this device.  In particular, you may want to have the code for a program in its own file where you can test it easily with an interpreter or compiler.  There is one gotcha.  If you were to put a newline between <tag>input</tag> and <tag>xi:include</tag> there is the very real potential of unwanted whitespace bleeding into your <pretext /> output.  Our suggested remedy uses an example from Bob Plantz.  Convert</p>

        <pre>
        &lt;program language="c">
            &lt;input>
                &lt;xi:include parse="text" href="intAndFloat.c"/>
            &lt;/input>
        &lt;/program>
        </pre>

        <p>to</p>

        <pre>
        &lt;program language="c">
            &lt;input>&lt;xi:include parse="text" href="intAndFloat.c"/>&lt;/input>
        &lt;/program>
        </pre>

        <p>There are some fancy <init>XSLT</init> tricks you can employ to use more complicated content repeatedly.  Your source will be less portable, and we do not support or recommend these techniques.  But if you want a go anyway, see hints at <url href="http://www.sagehill.net/docbookxsl/DuplicateIDs.html" visual="www.sagehill.net/docbookxsl/DuplicateIDs.html"/>.  Note the reliance on <c>xpointer()</c>, and that the final technique is restricted to DocBook, a different <init>XML</init> vocabulary.</p>
    </section>

    <section xml:id="topic-localization">
        <title>Localization</title>
        <idx>localization</idx>
        <idx>internationalization</idx>

        <introduction>
          <p>We briefly introduced <pretext/> support for authoring documents in multiple languages in <xref ref="overview-localization"/>.  Here are some more details.</p>

          <p>First, authors are encouraged to write the actual text of their documents using the language of their choice.  See <xref ref="topic-unicode"/> for details. For <init>HTML</init> this should be straightforward, for other output formats (especially <init>PDF</init>) the publisher may need to have various fonts installed (see <xref ref="latex-fonts"/>).</p>

          <p>Localization for <pretext/> itself is restricted to the items <pretext/> names for you.  This includes things like <tag>theorem</tag>, but also items such as the labels of navigation buttons.  To have this in your language requires two things, described in the following subsections.</p>
        </introduction>

        <subsection>
          <title>Localization Files</title>

          <!-- 2023-02-07: 15 languages -->
          <p>The prerequisite is that a localization file for your language exists.  Fifteen languages are already supported, such as <c>es-ES</c> (Peninsular Spanish), <c>pt-BR</c> (Brazilian Portuguese), and <c>hu-HU</c> (Hungarian/Magyar); the default language code is <c>en-US</c> (American English).  For a up-to-date list of which languages are available, see <url href="https://github.com/PreTeXtBook/pretext/tree/dev/xsl/localizations" visual="xsl/localizations">the localization stylesheet folder on GitHub</url>.</p>

          <p>If such a file does not exist, you will need to create one or find someone to help you do so. Brief instructions for this <url href="https://github.com/PreTeXtBook/pretext/blob/dev/xsl/localizations/README.md" visual="xsl/localizations/README.md">are in the README file</url> for this directory.  These instructions suggest using the <c>en-US</c> file as a template and as a source of more detailed instructions.  We highly encourage anyone who creates such a file to contribute it to our growing list of localization stylesheets; see <xref ref="contributing"/> in the Appendices for details.</p>
        </subsection>

        <subsection>
          <title>Changing the Document Language</title>

          <p>In order to use a localization, simply place <c>xml:lang="es-ES"</c> (with language code as appropriate for your project) as an attribute on your <tag>pretext</tag> element.  For example:<cd>
            <cline>&lt;pretext xml:lang="hu-HU"/></cline>
          </cd>Then you can process your source as usual.  Be sure to check that the translations look appropriate in your output.</p>

          <p>While processing your source, you may encounter warnings for missing translations, like this:<cd>
            <cline>MBX:WARNING: could not translate string with id</cline>
            <cline>"hypothesis" into language for code "pt-PT"</cline>
          </cd>In this case, the localization stylesheet is missing a translation for this tag, and it will remain in <c>en-US</c>.  We welcome contributions to keep stylesheets fully complete; see <xref ref="contributing"/> for details.</p>
        </subsection>

        <subsection>
          <title>Multilingual Documents</title>

          <p>As of the start of 2023, we are improving support to allow for <em>parts</em> of a document to be in different languages.  Much as you place an <attr>xml:lang</attr> attribute on the overall <tag>pretext</tag> element, you can place this attribute, <em>with a different supported language</em> onto any element, and all of the content within that element should react according to the new language.  A division would be most natural, but perhaps also a block or a paragraph?  Development continues, and in particular not every part of an <init>HTML</init> page always reacts.</p>
        </subsection>
    </section>

    <section xml:id="topic-accessibility">
        <title>Accessibility</title>
        <idx>accessibilty</idx>
        <idx>web accessibilty</idx>

        <p>Continuing our discussion from <xref ref="overview-accessibility" /> we begin by listing features of our conversion to <init>HTML</init> which happen automatically.  These come in part from the recommendations at the <url href="https://www.w3.org/WAI/standards-guidelines/wcag/" visual="www.w3.org/WAI/standards-guidelines/wcag/">Web Content Accessibility Guidelines</url> of the Web Accessibility Initiative.<dl width="narrow">
            <li>
                <title>HTML</title>
                <p>Wherever possible we supply <init>HTML</init> elements and attributes that will be interpreted sensibly by a screen reader in the absence of the visual styling provided by <init>CSS</init>.  This means we are very careful about the role of headings (<c>h1</c> through <c>h6</c>) for screenreaders, both for divisions and the block elements they contain.  We provide HTML that passes validation checks.  And so on.  Employing attributes from the <url href="https://www.w3.org/WAI/standards-guidelines/aria/" visual="www.w3.org/WAI/standards-guidelines/aria/">Accessible Rich Internet Applications</url> suite of web standards (<init>ARIA</init>) will go a long way to improving accessibility.  This work is on-going, as of 2021-11-03.</p>
            </li>
            <li>
                <title>Mathematics</title>
                <idx><h>accessibility</h><h>mathematics</h></idx>
                <idx><h>web accessibility</h><h>mathematics</h></idx>
                <p>MathJax (<url href="https://www.mathjax.org/" visual="mathjax.org"/>) is the JavaScript library we use to render mathematics within the <init>HTML</init> output.  It provides extensive capabilities for screen readers to render the mathematics audibly, and by default your project's output is configured to take advantage of these features.  We refer the reader to the MathJax documentation of <url href="http://docs.mathjax.org/en/latest/misc/accessibility-features.html" visual="docs.mathjax.org/en/latest/misc/accessibility-features.html">Accessibility Features</url> for details.  But here is a simple experiment you can do yourself right now to simulate how a blind reader could experience mathematics with the combination of <pretext />, MathJax, and a screen reader.<ol>
                    <li>Find some moderately complicated mathematics, such as in the <q>Mathematics</q> section of the sample article, or your own project, or the sample from MathJax copied below.</li>
                    <li>Bring up the context menu on that display (a mouse right-click for most).</li>
                    <li>Turn on the <c>Accessibility > Explorer > Activate</c> menu item.  The page will reload, and the <c>Explorer</c> menu item will earn many more menu items.  This setting is reasonably sticky, so you should not have to do this repeatedly.  Having this on will incur some processing time as part of each page load, so you may want to turn it off later.</li>
                    <li>Turn on the <c>Accessibility > Explorer > Speech Output</c> menu item.</li>
                    <li>Turn on the <c>Accessibility > Explorer > Subtitles</c> menu item.  (If <c>Subtitles</c> is <q>greyed out</q>, try toggling <c>Speech Output</c>.)</li>
                    <li><c>TAB</c> until some mathematics is given focus (a discrete border appears).</li>
                    <li><c>SHIFT-SPACE</c> will activate exploration of the mathematics with the Explorer.  A subtitle, with an aural rendering of the mathematics, will appear below the display.</li>
                    <li>You can navigate (explore) the expression tree with the up, down, left, and right arrow keys.  The subtitles will change as you do this.</li>
                </ol></p>
                <p>From the MathJax demonstration page, Maxwell's equations for practice:<idx>Maxwell's equations</idx><md>
                    <mrow>\nabla \times \vec{\mathbf{B}} -\, \frac1c\, \frac{\partial\vec{\mathbf{E}}}{\partial t}
                    &amp; = \frac{4\pi}{c}\vec{\boldsymbol{\jmath}}</mrow>
                    <mrow>\nabla \cdot \vec{\mathbf{E}} &amp; = 4 \pi \rho</mrow>
                    <mrow>\nabla \times \vec{\mathbf{E}}\, +\, \frac1c\, \frac{\partial\vec{\mathbf{B}}}{\partial t} &amp; = \vec{\mathbf{0}}</mrow>
                    <mrow>\nabla \cdot \vec{\mathbf{B}} &amp; = 0</mrow>
                </md><notation><usage><m>\nabla</m></usage><description>gradient operator</description></notation></p>

            </li>

            <li>
                <title>3D Images</title>
                <p>Asymptote is a language for describing 2D and 3D images, which we support as much as possible.  The 3D images produced are rotatable for exploration via a mouse or finger.  For those with motor limitations, the images may also be manipulated with keyboard controls.  (Many assistive technologies rely on, or emulate, keyboards.)</p>
            </li>

            <li>
                <title>Skip to Main Content</title>
                <p>Repeatedly pressing the <c>Tab</c> key will move a reader from one location to the next in a web document.  Since your Table of Contents in the left sidebar is a series of many links, a reader will need to tab through <em>all</em> of these to eventually reach the interesting content on a page.</p>

                <p>However, we support a common device.  The first link on every page is hidden from all readers, but an initial <c>Tab</c> will present a link labeled <c>Skip to Main Content</c> which when executed will take the reader past the Table of Contents and to the start of the content at the top of the page.</p>
            </li>

            <li>
                <title>Links</title>
                <p>Hyperlinks have colors, styles (such as underlining), and effects (such as mouse hover) which are consistent with <init>WCAG</init> recommendations.  Rather than being underlined by default, we instead use high-contrast color choices.</p>
            </li>

            <li>
                <title>Colors</title>
                <p>We are sensitive to the fact that some readers have difficulty distinguishing between certain colors.  So we do our best to distinguish text, or other elements, without relying exclusively on color.  For example, the <tag>delete</tag> and <tag>insert</tag> elements may render text with strike-through and underlining (respectively) to show the distinction.</p>

                <p>But you can help as you author.  For example, see <xref ref="color-in-math"/>.</p>
            </li>

            <li>
                <title>Justified Text</title>
                <p>Right-justified text (an even right margin) can sometimes lead to spaced-out text that is difficult for some readers.  For print, our use of <latex/> as an intermediate format, leads to <init>PDF</init> output where right-justified text can be superior to the alternative, <term>ragged right</term> text.  For more see <xref ref="print-justification"/> and <xref ref="styling-justification"/>.</p>
            </li>

            <li>
                <title>Watermarks</title>
                <p>If a document has a watermark (<xref ref="watermarks"/>), then a screen reader will announce its presence at the beginning of each page of <init>HTML</init> content.</p>
            </li>
        </dl></p>

        <p>Here are features which are provided, but require your participation as the author.<dl width="narrow">
            <li>
                <title>Image Description</title>
                <p>Images you author or supply will be invisible to some readers.  Within every <tag>image</tag> element you can use a <tag>description</tag> element.  The content here will migrate to places like the <init>HTML</init> <attr>alt</attr> attribute to be picked up by screen readers.</p>

                <p>Make the content very expressive and detailed, but not overly verbose.  Also, do not use any markup whatsoever, just simple characters, and avoid quotation marks.  You can learn more at sites such as the one provided by the Web Accessibility Initiative (<init>WAI</init>) at <url href="https://www.w3.org/WAI/fundamentals/accessibility-principles/#alternatives" visual="www.w3.org/WAI/fundamentals/accessibility-principles/#alternatives">Text alternatives for non-text content</url>.</p>

                <p>We cannot do this one for you, this is for the author only.  But we can give you the tools do it as easily and as correctly as possible.</p>
            </li>

            <li>
                <title>Image Formats</title>
                <p>University offices that provide services for students with disabilities are often interested in the images themselves from a text, as standalone files.  For example, they might be able to manufacture tactile versions.  You could use the <c>pretext</c> script to produce a variety of different formats and bundle these up in a single archive file for distribution at your book's website.  Or you can make each image available through adjacent links placed automatically.  We call these <q>image archives.</q>  See <xref ref="topic-images-archive" />.</p>

                <p>Futhermore, as described above, a 3D image authored with Asymptote code can be superior for those with motor disabilities.  So this functionality begins with an author's choice to employ Asymptote.</p>
            </li>

            <li>
                <title>Cross-References</title>
                <p><xref ref="topic-cross-referencing" /> describes a variety of ways to customize the look and content of a cross-reference.  You can create a larger target for clickable items by making the text as long as possible.  So for example an <tag>xref</tag> authored as<cd>
                    <cline>&lt;xref ref="theorem-FTC" text="type-global" /&gt;</cline>
                </cd>would cause the clickable portion to be something like <q>Theorem 5.16</q>, whereas<cd>
                    <cline>&lt;xref ref="theorem-FTC" text="global" /&gt;</cline>
                </cd>would then cause the clickable portion to be simply the much shorter <q>5.16</q>.  Of course, you can set a default style for your entire document, so it is not necessary to continually provide the <attr>text</attr> attribute.</p>
            </li>

            <li>
                <title>Link Text</title>
                <p>Default link text, such as <q>Theorem 4.15</q> has been chosen to be informative.  But for internal links (<tag>xref</tag>) or external links (<tag>url</tag>) you can choose alternative content for the clickable portion of the text.  Think carefully about your choices here and try to avoid text like <q>here</q> or <q>click here.</q>  For a <tag>url</tag>, the default content is the <attr>href</attr>, which can always be improved by providing content.</p>

                <p>Here is a device which we now use more frequently.  Despite our aversion to footnotes, create a <tag>url</tag> element and provide meaningful content, such as the title of the web page you are referencing.  Then immediately afterwards add a footnote (<tag>fn</tag>) which contains only the actual <init>URL</init>, perhaps wrapped in a <tag>c</tag> element.  Since this is mostly meant for print, it is safe to drop things like the <c>https://</c> protocol specification and therefore <em>not</em> make it active (for a second time).  This is in use within this section.</p>
            </li>

            <li>
                <title>Commutative Diagrams</title>
                <p>Whenever possible, author commutative diagrams using the syntax of the <c>amscd</c> <latex/> package.  Then online and braille output will be more accessible.  See <xref ref="commutative-diagrams"/> for more.</p>
            </li>

            <li>
                <title>Punctuation after Mathematics</title>
                <p>Periods, commas, and semi-colons that follow directly after mathematics are handled differently by <pretext/> for visual formats versus non-visual ones (e.g. braille, audio).   But this only happens if you author the punctuation in the <em>logically</em> correct location and let <pretext/> do the rest for you.  See <xref ref="authoring-math-punctuation"/> and <xref ref="punctuation-display-math"/> for details.</p>
            </li>

        </dl></p>

        <p>Watching a blind reader navigate a web page can be a very enlightening experience.  Or you might even undertake learning one yourself.  Here are some suggestions for getting started (current on 2018-05-31).<ul>
            <li><init>NVDA</init>, <url href="https://www.nvaccess.org/" visual="www.nvaccess.org"/>, Windows, open source via GPL</li>
            <li>Orca, <url href="https://help.gnome.org/users/orca/stable/" visual="help.gnome.org/users"/>, Linux, open source via LGPL</li>
            <li>VoiceOver, included with Apple's macOS and iOS</li>
            <li>ChromeVox, <url href="http://www.chromevox.com/" visual="www.chromevox.com"/>, ChromeOS, free from Google</li>
            <li><acro>JAWS</acro>, <url href="https://www.freedomscientific.com/Products/Blindness/JAWS" visual="www.freedomscientific.com"/>, Windows, commercial</li>
        </ul></p>

        <p>Much of the technical work for accessibility is accomplished by <pretext/> developers.  But authors have responsibilities, too.  So testing can be part of your workflow.  One free tool is <url href="https://www.deque.com/axe/" visual="www.deque.com/axe">axe</url> from <url href="https://www.deque.com" visual="www.deque.com">Deque Systems</url>.</p>

        <p>We have concentrated on making <init>HTML</init> output accessible, since that seems the most natural and best supported.  But we are aware of efforts for other formats.<dl>
            <li>
                <title>PDF/<latex/></title>
                <p>A <init>PDF</init> may not lend itself naturally to providing an accessible format.  But there have been efforts.  The <url href="https://tug.org/twg/accessibility/" visual="tug.org/twg/accessibility/"><tex/> Users Group on PDF Accessibility and PDF Standards</url> is an excellent resource to start with.  There is also a <url href="https://github.com/PreTeXtBook/pretext/issues/1046" visual="github.com/PreTeXtBook/pretext/issues/1046"><pretext/> issue #1046</url>.</p>
            </li>
            <li>
                <title>EPUB</title>
                <p>The International Digital Publishing Forum has information on <url href="http://idpf.org/a11y" visual="idpf.org/a11y">EPUB Accessibility</url>.</p>
            </li>
        </dl></p>
    </section>
    <section xml:id="topic-slides">
        <title>Slides</title>
        <idx>slides</idx>
        <p>
Slideshows may be authored in <pretext/> by using the following tags.
        <ul>
          <li>
<c>slideshow</c> replaces the usual <c>article</c> or <c>book</c> tag to
let <pretext/> know you are authoring a set of slides. As usual, you may then
define your <c>title</c>, <c>subtitle</c>, and <c>frontmatter</c>.
          </li>
          <li>
Similar to articles, your content should be organized into several
<c>section</c>s.
          </li>
          <li>
And within each section, a <c>slide</c> represents a full screen of information.
Within a slide, you may author <pretext/> content as usual, such as paragraphs
(<c>p</c>), lists (<c>ul</c>), and so on.
          </li>
          <li>
Several elements support setting the <attr>pause</attr> attribute to the
value <c>yes</c> to allow stepping through
parts of a slide (e.g. it inserts a Beamer <c>\pause</c>).
          </li>
        </ul>
        </p>
        <p>
A minimal working example may be found in the
<url href="https://github.com/PreTeXtBook/pretext/blob/dev/examples/sample-slideshow/sample-slideshow.xml" visual="examples/sample-slideshow/sample-slideshow.xml">
  Examples folder of the PreTeXt repo on GitHub
</url>.
See publishing details for various outputs in <xref ref="publisher-slides"/>.
        </p>
    </section>

    <section xml:id="topic-literate-programming">
        <title>Literate Programming</title>
        <idx>literate programming</idx>

        <p>We continue (and do not repeat) the introduction at <xref ref="overview-literate-programming"/>.  <pretext/> implements the literate programming paradigm with two primary elements, <tag>fragment</tag> and <tag>fragref</tag>.</p>

        <p>A <tag>fragment</tag> is a chunk of code.  Almost always it has a <attr>xml:id</attr> attribute.  It begins with a mandatory <tag>title</tag>.  It may have index entries, but see below for advice using the <tag>list-of</tag> element.  Then there is a mix of <tag>code</tag> and <tag>fragref</tag> elements.  The <tag>code</tag> element holds the actual text in whatever computer language you are using.  Line breaks are respected.  Use the <init>XML</init> escape characters <c>&amp;lt;</c> and <c>&amp;amp;</c> if your code needs the <c>&lt;</c> or <c>&amp;</c> characters.  Do not try to use <init>XML</init> markup inside the <tag>code</tag> element.</p>

        <p>A <tag>fragref</tag> is a reference to some other <tag>fragment</tag>.  This is accomplished via the <attr>ref</attr> attribute which points to the target via an <attr>xml:id</attr>.  So this is very similar to an <tag>xref</tag> (<xref ref="overview-cross-references"/>), but not enough alike to have the same element name.   The most important distinction is that the <c>xsl/pretext-litprog.xsl</c> stylesheet will <em>replace</em> the <tag>fragref</tag> with the <em>contents</em> of the target <tag>fragment</tag>.  In other conversions, the <tag>fragref</tag> will be a visual expression of the target <tag>fragment</tag>, possibly with some active means to visit or examine the target (hyperlink, knowl), more similar to an <tag>xref</tag>.</p>

        <p>So the <c>xsl/pretext-litprog.xsl</c> stylesheet will course through your fragments converting the tree-like structure given by the references in the <tag>fragref</tag> elements into a depth-first traversal that will assemble the <tag>code</tag> elements, and only the <tag>code</tag> elements, linearly into a program.  Notice that it is your job as the author of the program to be certain that this rearrangement results in a syntactically correct program.  (<pretext/> is good, but not that good.)</p>

        <p>If you are with us this far, you are wondering just where the root of this tree is?  In other words, just <em>which</em> <tag>fragment</tag> does this traversal begin with?  Good question.  At least one <tag>fragment</tag> must have a <attr>filename</attr> attribute.  Then a traversal will begin here and your program will be output to the file with the name you specify.  You are not limited to one file/root, so if your program has multiple source files they may be documented/collected into a single <pretext/> source file.  (Notice this implies that every <tag>fragment</tag> <em>must</em> have an <attr>xml:id</attr> or a <attr>filename</attr>.)</p>

        <p>You can place a <tag>fragment</tag> most anywhere you might place any other numbered block (such as <tag>example</tag>), though we would tend to place them as children of divisions.  The remainder of your document can have all the usual <pretext/> features: a table of contents, a preface, divisions, an index, references, etc.  Then a conversion to <init>PDF</init>, <init>HTML</init>, or other formats, will include your code, but in an order that might be more human-readable, and with careful documentation in close proximity.</p>

        <p>Automatically migrating each <tag>fragment</tag> to an index is a bad idea.  (We already experimented.)  Instead you can try putting<cd>
            <cline>&lt;list-of elements="fragment"/&gt;</cline>
        </cd>into an <tag>appendix</tag>.  Perhaps a pointer early on to its existence will help your reader.  This list can be subdivided with the use of the <attr>divisions</attr> attribute.  See <xref ref="topic-automatic-lists"/>.  Note that you might still want to provide an index, but remember that its construction is a job for an author (<xref ref="topic-index-advice"/>).</p>

        <p>Literate programming has been developed to support the authoritative <init>RELAX-NG</init> version of the <pretext/> schema.  Since <init>RELAX-NG</init> is a declarative language, the rearrangement of code hunks is not quite as critical.  But still, see <c>schema/pretext.xml</c> for a non-trivial example.  As of 2020-11-11 there are a few caveats.  Start a discussion on the development forum if you have a need.<ul>
            <li>The conversion to a program has no explicit support for languages which interpret indentation meaningfully (e.g. Python).  The <tag>code</tag> element makes <em>no changes</em>, so you could succeed if authored carefully.  Some sort of relative indentation attribute might be a good solution.</li>

            <li>We do not syntax-highlight the code.  A language attribute might allow us to recycle existing features.</li>

            <li>Numbering is serial from the start of the document.  Raise a feature request if you think hierarchical numbering is indicated.</li>
        </ul></p>
    </section>

</chapter>
