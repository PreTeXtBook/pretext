<?xml version="1.0" encoding="UTF-8"?>

<!--   This file is part of the documentation of PreTeXt      -->
<!--                                                          -->
<!--      PreTeXt Author's Guide                              -->
<!--                                                          -->
<!-- Copyright (C) 2013-2016  Robert A. Beezer                -->
<!-- See the file COPYING for copying conditions.             -->

<chapter xml:id="topics">
    <title>Topics</title>

    <introduction>
        <p>This long chapter provides the main documentation for a variety of the features of <pretext />.  Some sections are just stubs and need to be written.  Requests for sections to prioritize are welcome, though some sections are waiting for features to stabilize.</p>
    </introduction>

    <section xml:id="topic-paragraphs">
        <title>Paragraphs</title>

        <introduction>
            <p>Much of your writing will happen in paragraphs, delimited by the simple tag, <tag>p</tag>.  You are reading one right now.  They are a basic building block of divisions, and also a basic building block of other structures.  For example, an ordered list, <tag>ol</tag>, contains a sequence of list items, <tag>li</tag>, and a typical list item might be a sequence of paragraphs.  (Do not confuse this element with the anomalous <tag>paragraphs</tag> subdivision, <xref ref="topic-divisions" />).</p>

            <p>Paragraphs are a choke-point of sorts.  Many tags can <em>only</em> be used within paragraphs, and many others <em>cannot</em> be used within paragraphs.  Notice too, that we do a certain amount of manipulation of whitespace in a paragraph, in ways that you may not even notice.</p>

            <p>The following subsections together contain allowed, or encouraged, markup within a paragraph.  Many of these may be used in captions and titles, but some of the more complicated constructions (which appear later here) cannot be used in captions or titles.</p>

            <!-- Rutter, "Web Typography", "em dash", "en dash" (no hyphen) -->
            <p>One more comment: typewriters, computer keyboards, and the <acro>ASCII</acro> character set have together conspired to limit the full range of characters that typographers and printers have used historically.  A case in point is the hyphen, which is a single key on a keyboard.  However, there are at least three common dashes of differing lengths (hyphen, en dash, and em dash), and in the context of mathematics or a computer program, the hyphen might be the binary operation of subtraction or the unary operation of negation.  Another example is the <q>upright</q>, or <q>dumb</q>, quote mark that is a single key on a keyboard, while careful typography will employ <q>smart</q>, or <q>curly</q>, quote marks that have left and right variants.  (Sometimes called <q>66</q> and <q>99</q> based on their shape.)  <pretext /> will help you navigate this complexity, but you will want to use keyboard characters or markup appropriately.  So if you care about communicating clearly, and making your writing easy for a reader to use, absorb the details that follow and the philosophy they implement.</p>

            <p>We will say it again.  <pretext /> is a markup language, and our various output formats (<latex />, <init>HTML</init>, <init>EPUB</init>, Jupyter notebooks) in turn employ markup languages.  These use different escape characters and give different characters special meanings.  Our job is to insulate you from this variety, so you can concentrate on authoring you <em>ideas</em>.</p>

            <p>We begin with some simple <q>grouping</q> elements which contain several excellent examples of the importance and utility of careful markup.  There is a plethora of empty tags for individual characters, and these are very important (see <xref ref="topic-character-elements" />).  We defer them to the end of this section, since they are not as instructive, but do not think this means they are an afterthought.  They can be extremely critical for successful conversions.  Also do not miss <xref ref="practice-careful-markup" /> in the conclusion of this section.</p>
        </introduction>

        <subsection>
            <title>Simple Markup in Paragraphs</title>

            <p>Beyond empty tags that translate to various characters, there are relatively simple tags that can call attention to various <em>portions</em> of a sentence, or generate more complicated constructions than described above.</p>

            <p>Most, if not all, of the markup in this subsection may also be used within titles and captions, though they might lose some of their features when used in a title, especially when the title is duplicated in other contexts, such as a Table of Contents.</p>

            <!-- fragment names, and their elements, from schema source
            delimiter-group: q, sq, braces, angles, brackets, dblbrackets
            highlight-group: em, term, alert, pubtitle, articletitle, foreign
            abbreviation-group: abbr, acro, init
            editing-group: delete, insert, stale
            xml-group: tag, tage, attr
            scientific-name-group: taxon
            footnotes: fn
            mathematics: m
            verbatim: c, email
            -->

            <!-- Groupings via symbols or characters -->

            <paragraphs>
                <title><tag>q</tag>, quotes, <q>group</q></title>
                <p>This is the first of several grouping tags, using characters with left and right variants, and some of the most common markup in your writing.  Presentation uses double quote marks that are <term>smart quotes</term>, meaning that they look different in their opening and closing variants.  (See <tag>blockquote</tag> for extensive runs of quoted text that can stand alone, and which can carry an attribution.)</p>
            </paragraphs>

            <paragraphs>
                <title><tag>sq</tag>, single quotes, <sq>group</sq></title>
                <p>Perhaps less-often used than <tag>q</tag>, so a couple more characters to type.  Presentation is paired single-quotes, opening and closing.</p>
            </paragraphs>

            <paragraphs>
                <title><tag>angles</tag>, angle brackets, <angles>group</angles></title>
                <p>Left and right angle brackets to enclose a phrase.  This is not for creating a set of generators in mathematics, use the appropriate mathematics tag and syntax for that.  Note also that the characters used here are definitely distinct from the inequality symbols, &lt; and &gt;.</p>
            </paragraphs>

            <paragraphs>
                <title><tag>dblbrackets</tag>, double square brackets, <dblbrackets>group</dblbrackets></title>
                <p>Double left and right square brackets to enclose a phrase.  This is not for grouping expressions in mathematics, use the appropriate mathematics tag and syntax for that.  These are used in the analysis of texts to note various restorations or deletions.  Inquire if you feel there should be more semantic markup for this purpose.</p>
            </paragraphs>

            <!-- Font-face-changing markup -->

            <paragraphs>
                <title><tag>em</tag>, emphasis, <em>important</em></title>
                <p>Use this element to surround characters in a phrase that is to be emphasized.  This will typically be rendered in italics, though this choice is left to the implementation of a particular conversion.  See also, <tag>alert</tag>.</p>

                <p>If you are new to using a markup language, this is a place to stop and think.  As a <pretext /> author you are never able to say, <q>I want this text to appear in italics.</q>  Rather, you specify that certain text has a certain purpose or meaning.  Emphasis is a way of <em>calling attention</em> to a portion of a sentence or paragraph.  A font change (to italic) is a common and effective device.  But a particular format might have a better, or different, way to achieve this.  Perhaps in an electronic format, the letters are animated and dance up and down.  (Just kidding.  But you may be reminded of frequent blinking text in the early days of web design, supported by a non-standard <tag>blink</tag> element.)  Seriously, now would be a good time to review <xref ref="philosophy" />.</p>
            </paragraphs>

            <paragraphs>
                <title><tag>alert</tag>, alert, <alert>critical</alert></title>
                <p>Use this to heavily emphasize something to a greater degree than just emphasis.  Maybe think of it as <alert>SHOUTING</alert>.  Bold italic font, or a bright color, or both, would be normal choices for presentation.  Overuse of this tag will dilute its effectiveness.</p>
            </paragraphs>

            <paragraphs>
                <title><tag>term</tag>, terminology, <term>larvae</term></title>
                <p>Use this to identify a word or phrase that is being defined, in contrast to actually using a structured <tag>definition</tag>.  Typical presentation is a bold font.  Caution: the use of this tag is to communicate a defined term and converters may make use of this interpretation, given the importance of definitions in scholarly work.  It would be considered <term>tag abuse</term> to use this tag to simply bold a word or phrase for some other reason, perhaps as an alternative to <tag>em</tag> or <tag>alert</tag>.</p>
            </paragraphs>

            <paragraphs>
                <title><tag>foreign</tag>, foreign words, idioms, phrases, <foreign>Hola</foreign></title>
                <p>This tag is used to identify words or phrases from a language other than the main one used for the overall document.  It is best practice to use a <attr>xml:lang</attr> attribute to identify the language, since this will assist screen readers and hyphenation algorithms.  We may also recognize the need for a different script (font).  Usual presentation is italics for languages using a Latin script.  This should not be used for entire paragraphs as a way of assisting with a translation of an entire document.</p>

                <p>Note that when we use italics for emphasis <em>and</em> to point out foreign words or phrases, there is a loss of information in our output.  In other words, we can no longer reliably (in an automated way) convert our output back to equivalent PreTeXt source from its visual representations.  <foreign xml:lang="fr-FR">C'est la vie</foreign>.  See <xref ref="philosophy" /> again.</p>
            </paragraphs>

            <paragraphs>
                <title><tag>pubtitle</tag>, <tag>articletitle</tag>, titles of books and articles</title>
                <p>These provide the ability to typographically distinguish the title of another work, and are not a replacement for careful bibliographies and citations.  Use <tag>pubtitle</tag> for longer, complete works, such as books, plays, or entire websites.  Use <tag>articletitle</tag> for shorter, component works, such as a chapter of a book, a research article, or a single webpage.</p>

                <p>Presentation for a longer work will be italics or an oblique (slanted) font, and for a shorter work, the title will simply be quoted.</p>
            </paragraphs>

            <!-- Font-size changing group -->

            <paragraphs>
                <title><tag>abbr</tag>, <tag>init</tag>, <tag>acro</tag>, abbreviation, initialism, acronym, <abbr>Mr.</abbr>, <init>XML</init>, <acro>SCUBA</acro></title>
                <p>An abbreviation is a condensed or shortened version of some word or phrase, such as <abbr>Mr.</abbr> for <q>Mister.</q>  Converters should take care with periods (full stop) inside an <tag>abbr</tag> as distinguished from the end of a sentence (which may not always be clear given the absence of a tag delimiting sentences).  An initialism is an abbreviation read as a sequence of letters, often the first letter of words in a phrase, such as <init>HTML</init> for <q>HyperText Markup Language.</q>  An acronym is much like an initialism, but the letters are read as a pronounceable word (which sometimes actually enters the language as a word, such as <q>radar</q> which began as RAdio Detection And Ranging).  An example is <acro>SCUBA</acro> which stands for <q>Self-Contained Underwater Breathing Apparatus.</q>  Initialisms and acronyms may be presented in a small-capitals font or as regular capitals reduced in size.</p>
            </paragraphs>

            <!-- Editing group -->

            <paragraphs>
                <title><tag>delete</tag>, <tag>insert</tag>, <tag>stale</tag>, editing assistance, <delete>gone</delete>, <insert>new</insert>, <stale>old</stale></title>
                <p>These denote portions of a text that is being changed in some way, presumably as part of an editing process.  Conceivably, they could be managed by some other tool acting on your source.  Stale text is that which is slated for removal eventually, but is left in place so that it may be consulted.  There is no support presently for actually deleting or incorporating text, though that would be a reasonable feature request.</p>

                <p>Red and green, for leaving and entering, are natural choices for presentation.  But in consideration of those readers who cannot always distinguish different colors, other devices, such as strikethrough or underlining, should also be employed.</p>
            </paragraphs>

            <!-- XML syntax group -->

            <paragraphs>
                <title><tag>tag</tag>, <tag>tage</tag>, <tag>attr</tag>, tag, empty tag, attribute, <tag>section</tag>, <tage>hash</tage>, <attr>width</attr></title>
                <p>These are <pretext /> tags for when we write about <pretext /> and need to discuss tags, empty tags, and attributes.  Given how we design <pretext /> tags the content of these elements should only be the 26 lower-case letters and a dash/hyphen.  These should render in ways that make the three types of language elements obvious without much further discussion.  Just a bit self-serving, but not unjustified.</p>
            </paragraphs>

            <!-- Scientific names -->

            <paragraphs>
                <title><tag>taxon</tag>, scientific names, <taxon>Escherichia coli</taxon></title>
                <p>This element may surround a full scientific name, resulting in presentation in italics.  There are subelements <tag>genus</tag> and <tag>species</tag> which may be used to delineate those components.</p>

                <p>A <attr>ncbi</attr> attribute on <tag>taxon</tag> accepts an identifier from the <url href="https://www.ncbi.nlm.nih.gov/">National Center for Biotechnology Information</url>.  Feature requests for ways to make this more useful are welcome.</p>
            </paragraphs>

            <!-- Footnotes -->

            <paragraphs>
                <title><tag>fn</tag>, footnotes</title>
                <idx>footnotes</idx>
                <p>A footnote can be inserted in a paragraph and a mark will be left behind.  Where the content of the footnote goes depends on the capabilities of the output format.  Because a footnote allows you to begin a new piece of text <em>anywhere</em>, it can be difficult to handle technically.  For this reason it is banned from places like titles and its possible content is limited (for openers, no paragraphs).</p>

                <p>A footnote is the farthest thing from structured writing that we can think of.  It can go anywhere.  Resist the temptation to use it, and your writing will improve.  We frequently entertain the thought of making footnotes impossible in <pretext />.  See the <tag>aside</tag> element for a possible alternative.</p>
            </paragraphs>

            <!-- Inline mathematics -->

            <paragraphs>
                <title><tag>m</tag>, mathematics, <m>x^2+y^2</m></title>
                <p>Simple, inline expressions using mathematical notation may be used in paragraphs, and in titles and captions.  The syntax is <latex />.  See <xref ref="topic-mathematics" /> for full details.</p>
            </paragraphs>

            <!-- Inline verbatim -->

            <paragraphs>
                <title><tag>c</tag>, code, verbatim text, literal text, <c>import</c></title>
                <p>Short bursts of raw, or verbatim, text can be wrapped in the <tag>c</tag> element.  Strictly speaking, <q>code</q> is a misnomer, as the text may be anything you need to communicate exactly as one would type it at a keyboard or as input to a computer program.  Anything longer than a handful of characters, or needing accurate line breaks should consider the <tag>cd</tag>, <tag>pre</tag>, <tag>program</tag> or <tag>console</tag> tags.  Presentation is normally a monospaced sans serif font, perhaps of a slightly heavier weight, and designed for the job with features such as unambiguous zeros (versus the letter <sq>oh</sq>).  See <xref ref="topic-verbatim-literal" /> for details.</p>
            </paragraphs>

            <paragraphs>
                <title><tag>email</tag>, email address, <email>nobody@example.com</email></title>
                <p>Very similar to the <tag>c</tag> tag, this may be used to get a monospace presentation of an email address, possibly as an active link in some formats.</p>
            </paragraphs>

        </subsection>

        <subsection>
            <title>Cross-References and Paragraphs</title>

            <!-- fragment names, and their elements, from schema source
            reference: url, xref, notation
            index: idx
            -->

            <p>There are several devices for creating cross-references.  Generally, these are unwise (or banned) in titles, and if allowed may be inactive in certain portions of an electronic output format (such as when migrating to a Table of Contents).</p>

            <paragraphs>
                <title><tag>url</tag>, linking external resources</title>
                <p>This is a cross-reference <em>to</em> some item separate and distinct for your document.</p>

                <p>A Uniform Resource Locator (<init>URL</init>) is, loosely speaking, an Internet address for some item.  Presentation depends on the capabilities of the output format to serve the resource.  There is a mandatory attribute, <attr>href</attr>, that contains the full <init>URL</init>, including a protocol (such as <c>http://</c>).  Used as an empty tag, the visual text will be the exact contents of the <attr>href</attr> attribute.  So, <url href="http://www.example.com" /> can be achieved with
                    <cd>&lt;url href="http://www.example.com"/&gt;</cd>
                </p>

                <p>You may also wish to provide some text other than the actual <init>URL</init>, which you can specify as the content of the <tag>url</tag> element.  For example, <url href="http://www.example.com">IANA Test Site</url> can be achieved with
                    <cd>&lt;url href="http://www.example.com"&gt;IANA Test Site&lt;/url&gt;</cd>
                In order to have a URL occur in print output in a useful way, and in electronic output in an active way, I often shorten the full <init>URL</init> in the visual portion and mark it up as verbatim text.  So illustrating again, we get <url href="http://www.example.com"><c>example.com</c></url> from
                    <cd>&lt;url href="http://www.example.com"&gt;&lt;c&gt;www.example.com&lt;/c&gt;&lt;/url&gt;</cd>
                Notice the necessity and/or desirability of marking the text in a way that distinguishes it as literal text.</p>

                <p>Note also that this tag is meant for <em>external</em> resources, so see the <tag>xref</tag> element (below) or <xref ref="topic-cross-referencing" /> for ways to link internally (<ie /> within your document).</p>
            </paragraphs>

            <paragraphs>
                <title><tag>xref</tag>, cross-references</title>
                <p>This is a cross-reference <em>to</em> some item contained within your document.</p>

                <p>Extensive and intuitive capabilities for cross-referencing are a primary feature of <pretext />.  Typical use is an empty tag with the <attr>ref</attr> attribute specifying the value of an <attr>xml:id</attr> on the <term>target</term> of the cross-reference.  This should work easily without much more instruction, but familiarize yourself with the details in <xref ref="topic-cross-referencing" /> to get the most out of some the available options. </p>
            </paragraphs>

            <paragraphs>
                <title><tag>idx</tag>, index target</title>

                <p>This indicates that the containing structure (theorem, example, etc.), or top-level paragraph, should be the <em>target</em> of an entry of the index (a special sort of cross-reference).  See <xref ref="overview-index-notation"/> and <xref ref="topic-index"/> for general details.</p>
            </paragraphs>

            <paragraphs>
                <title><tag>notation</tag>, index target</title>

                <p>This indicates that the containing definition, or top-level paragraph, should be the <em>target</em> of an entry of the list of notation (a special sort of cross-reference).  See <xref ref="overview-index-notation"/> and <xref ref="topic-notation"/> for general details.</p>
            </paragraphs>
        </subsection>

        <subsection xml:id="topic-structure-in-paragraph">
            <title>Structured Markup in Paragraphs</title>

            <!-- Schema, reference groups:      -->
            <!-- List, MathDisplay, CodeDisplay -->

            <p>There are three categories of items which typically are structured further, and which are almost entirely restricted to appearing in a paragraph.  Given their complexity, details are covered in other sections of this guide.</p>

            <paragraphs>
                <title>Lists</title>
                <p>With only one major exception (and three minor ones), a list <em>must</em> appear within a paragraph.  See <xref ref="overview-lists" /> for an introduction and <xref ref="topic-lists" /> for precise details.</p>
            </paragraphs>

            <paragraphs>
                <title>Display Mathematics</title>
                <p>Displayed mathematics, which is a single equation or a sequence of (aligned) equations, can only be placed within a paragraph.  The relevant tags are <tag>me</tag>, <tag>men</tag>, <tag>md</tag>, and <tag>mdn</tag>, with the latter two necessarily structured with <tag>mrow</tag> elements.  See <xref ref="overview-math" /> for an introduction and <xref ref="topic-mathematics" /> for precise details.</p>
            </paragraphs>

            <paragraphs>
                <title>Display Verbatim</title>
                <p>The <tag>cd</tag> tag, by analogy with the <tag>md</tag> tag for displayed mathematics, may be used to display one or more lines of verbatim text (such as a series of commands), possibly structured with the <tag>cline</tag> tag.  See <xref ref="overview-verbatim-literal" /> for an introduction and <xref ref="topic-verbatim-literal" /> for precise details.</p>

                <p>This should not be confused with the <tag>pre</tag>, <tag>console</tag>, or <tag>program</tag> tags, which have slightly different uses, and all of which must be used <em>outside</em> of a paragraph.</p>
            </paragraphs>
        </subsection>

        <subsection xml:id="topic-character-elements">
            <title>Characters in Paragraphs</title>

            <!-- Unambiguous:  ~, !, @, #, $, %, ^, (, ), _, =, +, [, ], {, }, \, |, :, ;, and , -->
            <!-- Exceptional:  <, & -->

            <!-- fragment names, and their elements, from schema source
            dash-character:       nbsp, ndash, mdash
            xml-character:        ampersand, less, greater
            latex-character:      hash, dollar, percent, tilde, underscore,
                                  circumflex, backslash, lbrace, rbrace
            delimiter-character:  lsq, rsq, rq, lq
            exotic-character:     ellipsis, asterisk, backtick, slash, midpoint,
                                  swungdash, permille, pilcrow, section-mark,
                                  copyright, registered, trademark
            generator:            today, timeofday, tex, latex, pretext, webwork,
                                  eg, ie, circa, etc
            arithmetic-character: minus, solidus, times, obelus, plusminus
            siunit:               (deferred to its own section)
            music-character:      (deferred to its own section)
            -->

            <introduction>
                <p>Some keyboard characters are unambiguous, for example, the percent sign, %.  Other keyboard characters are poor replacements for several different characters.  Is a slash, /, being used to separate information/ideas, or is it a <term>solidus</term> being used to form a fraction such as 3<solidus/>4?  Other characters, such as per-mille, <permille/>, are not present on keyboards at all.  We organize this section according to these types of distinctions.</p>
            </introduction>

            <subsubsection>
                <title>Unambiguous Keyboard Characters</title>

                <p>The keyboard characters `, ~, !, @, #, $, %, ^, *, (, ), _, =, +, [, ], {, }, \, |, :, ;, and , are entered as-is and are only rendered one way.  Easy.</p>

                <p>Of course, the fifty-two Latin letters, and ten decimal digits, are also in this category.  If you have an international, or bilingual, or country-specific keyboard, then common accented versions of Latin letters (as used in Europe and the Western Hemisphere) may also be used directly from your keyboard.</p>
            </subsubsection>

            <subsubsection xml:id="topic-exceptional-characters">
                <title>Exceptional Keyboard Characters</title>
                <idx>exceptional characters</idx>
                <idx><h>characters</h><h>exceptional</h></idx>
                <idx>CDATA</idx>

                <p><init>XML</init> is a <term>markup language</term>, which in part means that some keyboard characters are co-opted to signal the start of markup.  For <init>XML</init> this character is the less-than symbol, &lt;.  It signals the start of a <term>tag</term>, and then an opening tag ends with a greater-than symbol, &gt;, while a closing tag has an extra / right after the &lt;.</p>

                <p>This begs the question:  if a &lt; is used in our <init>XML</init> source to signal the start of a tag, then how did we get one to appear here in this sentence without mistakenly starting a tag?  Once a markup language gives some characters special meanings, then there needs to be an <term>escape character</term>.  For <init>XML</init> the escape character is the ampersand, &amp;.  So to author the &lt; and &gt; symbols, we type <term>escaped</term> versions: <c>&amp;lt;</c> and <c>&amp;gt;</c>.</p>

                <p>I hear you now say, <q>But now we just took the &amp; out of the running and gave it a special meaning.  How do we get an ampersand?</q>  Easy, use the escaped version:  <c>&amp;amp;</c>.</p>

                <p>So the short answer is: never, ever type the &lt; or &amp; keyboard characters in isolation.  The very beginning of the processing of <init>XML</init> (<ie/> <pretext/>) will fail fatally on these characters.  Instead, always use the sequences <c>&amp;lt;</c> and  <c>&amp;amp;</c> and then very early the <init>XML</init> processing will convert them to characters, <em>without</em> interpreting them as signals for aspects of the markup.</p>

                <p>It does not seem necessary to author &gt; as <c>&amp;gt;</c>, though there is no real harm in doing so.  The two other characters with escaped versions are the single and double quotes, <c>&apos;</c> and <c>&quot;</c>, which have escaped version of <c>&amp;apos;</c> and <c>&amp;quot;</c> (respectively).  These are only necessary for attribute values, and we have been careful to design <pretext/> so that they are not necessary.</p>

                <remark>
                    <title>Excessive Escaped Characters</title>

                    <p>If you know another markup language, such as <tex/>, <latex/>, Markdown, <init>JSON</init>, or <init>PGML</init>, think about how many characters have been given special meanings, and the subsequent necessity to use escaped versions.  And if you want to write about computer languages, realize that each such language also gives certain keyboard characters special meanings.</p>

                    <p><init>XML</init> only has five exceptional characters, and in your daily use, <pretext/> really only requires you to be aware of two, the minimum necessary for a markup language.</p>
                </remark>

                <note>
                    <title>A <init>CDATA</init> Section is Never Necessary</title>

                    <p>We hate to mention it, but sooner or later, we need to have an uncomfortable discussion about the misunderstood <init>CDATA</init> section, and risk confusing the rest of this subsubsection.  And this is the place.  But you can come back later, if you wish.</p>

                    <p>You will read other places about very special markup known as a <init>CDATA</init> section.  The name stands for <term>character data</term>, which means <q>all characters, no markup</q>.  Think of it as switching off the <init>XML</init> processing for a while, so in particular, <c>&amp;</c>, <c>&lt;</c>, <c>&gt;</c> no longer have any special meaning at all.  That <em>could</em> be nice, but realize that now there is no opportunity to have any markup present using <init>XML</init> syntax, since it is ineffective.</p>

                    <p><em>A <init>CDATA</init> section is always a convenience and is never necessary.</em></p>

                    <p>When would it be convenient?  Maybe you have some <latex/> inside an <tag>md</tag> with a large matrix that uses lots of ampersands to separate the entries.  Inside a <init>CDATA</init> you can author it with bare &amp; rather than a plethora of <c>&amp;amp;</c> or <c>\amp</c>.  But you lose the ability to include an <tag>xref</tag> in that <init>CDATA</init>, so you need to be surgical about its scope.  Perhaps a Tikz diagram in a <tag>latex-image</tag> has a multitude of <c>&lt;-&gt;</c> or a chunk of Sage code in an <tag>input</tag> has a lot of finitely-generated algebraic structures authored as <c>R.&lt;x&gt; = ...</c> (which is not even legal Python syntax either!).  These places where there is little, or no, markup could be <em>convenient</em> places to use a <init>CDATA</init>.  Be sure to read the warning at <xref ref="deprecation-fixer-cdata"/> in <xref ref="processing-updating-source"/> before you go all-in.</p>
                </note>
            </subsubsection>

            <subsubsection>
                <title>Ambiguous Keyboard Characters</title>

                <p>Some keyboard characters have a primary interpretation, and are imitations of other typographic characters.  Your output will be of higher quality if you understand these distinctions and employ the proper variant.</p>

                <!-- / forward slash, solidus        -->
                <!-- ' apostrophe, rsq               -->
                <!-- ` backtick,  lsq                -->
                <!-- . period, sentence/abbreviation -->
                <!-- - hyphen, see ...........       -->
                <!-- ~ tilde, swungdash              -->
                <!-- " do not use, lq, rq            -->

                <table>
                    <title>Ambiguous Keyboard Characters and Alternatives</title>
                    <tabular>
                        <row bottom="medium">
                            <cell>Keyboard</cell>
                            <cell>Primary</cell>
                            <cell>Notes</cell>
                        </row>
                        <row>
                            <cell><c>/</c></cell>
                            <cell>(forward) slash</cell>
                            <cell><tage>solidus</tage> is a fraction bar, <solidus/></cell>
                        </row>
                        <row>
                            <cell><c>'</c></cell>
                            <cell>apostrophe</cell>
                            <cell><tage>rsq</tage> is a right single quote, <rsq/></cell>
                        </row>
                        <row>
                            <cell><c>`</c></cell>
                            <cell>backtick</cell>
                            <cell><tage>lsq</tage> is a right single quote, <lsq/></cell>
                        </row>
                        <row>
                            <cell><c>.</c></cell>
                            <cell>period</cell>
                            <cell>abbreviations <em>and</em> end-of-sentence</cell>
                        </row>
                        <row>
                            <cell><c>-</c></cell>
                            <cell>hyphen</cell>
                            <cell>See dashes, and arithmetic</cell>
                        </row>
                        <row>
                            <cell><c>"</c></cell>
                            <cell>upright double quote</cell>
                            <cell><tage>lq</tage> is <lq/>, <tage>rq</tage> is <rq/></cell>
                        </row>
                    </tabular>
                </table>

                <p>Note that the four quote marks (left/right, single/double) are meant for the actual characters.  Always use the grouping constructions described above (<ie/> <tag>q</tag> and <tag>sq</tag>) when grouping a phrase with quote marks.  Note, too, that there is never a good reason to use the keyboard quote character (<c>"</c>) unless you are creating some sort of verbatim text, such as a program listing or describing literal keyboard input.</p>

                <p>When creating print or <init>PDF</init> via <latex/> a period may get different trailing space depending on location and context, generally being its use in abbreviations or to conclude a sentence.  We do not yet have this dual-use under control.</p>
            </subsubsection>

            <subsubsection>
                <title>Extraordinary Characters</title>

                <p>Some characters or symbols are typically not available on a keyboard, so we provide empty elements.  Many of these may be entered directly into your source as Unicode characters, and they will do well in your <init>HTML</init> output.  However, these may fail entirely if you create print or <init>PDF</init> via <latex/> using the <c>pdflatex</c> engine.  Furthermore, even for <init>HTML</init> output there may be several Unicode characters that are very similar.</p>

                <p>So again, for the best quality output be aware of these elements and use them.  Please suggest additions if you do not find what you need and are resorting to Unicode characters.</p>

                <paragraphs>
                    <title><tage>ellipsis</tage>, <ellipsis />, ellipsis</title>
                    <p>Typically three low dots with no intervening space, to indicate a continuation.  This will always perform better than three consecutive periods.</p>
                </paragraphs>

                <paragraphs>
                    <title><tage>midpoint</tage>, <midpoint />, midpoint</title>
                    <p>A small centered (vertically) dot, which can be used to separate pieces of information, especially in displayed text (<ie /> outside of paragraphs).  Not to be confused with a bullet preceding a list item, or multiplication in mathematics.</p>
                </paragraphs>

                <paragraphs>
                    <title><tage>swungdash</tage>, <swungdash />, swung dash</title>
                    <p>Another decorative separator, not to be confused with the keyboard tilde character since it is wider and thicker.</p>
                </paragraphs>

                <paragraphs>
                    <title><tage>permille</tage>, <permille />, per mille</title>
                    <p>Like per cent, but now a number expressed as its product with <m>1000</m> (rather than with <m>100</m>).</p>
                </paragraphs>

                <paragraphs>
                    <title><tage>pilcrow</tage>, <pilcrow />, pilcrow, paragraph mark</title>
                    <p>Mark used historically to indicate the start of an internal paragraph, and in a more modern use, to indicate a permalink.</p>
                </paragraphs>

                <paragraphs>
                    <title><tage>section-mark</tage>, <section-mark />, section mark</title>
                    <p>Used to prefix the number of a section, or other division.  (So the word section is being used generically here.)</p>
                </paragraphs>

                <paragraphs>
                    <title><tage>copyright</tage>, <copyright />, copyright</title>
                    <p>The symbol used in publishing, legal, or business contexts.  For a <pretext /> project, copyright information can be specified within the <tag>colophon</tag> portion of the <tag>frontmatter</tag>.</p>
                </paragraphs>

                <paragraphs>
                    <title><tage>trademark</tage>, <trademark />, trademark</title>
                    <p>The symbol used in legal or business contexts.</p>
                </paragraphs>

                <paragraphs>
                    <title><tage>registered</tage>, <registered />, registered</title>
                    <p>The symbol used in legal or business contexts.</p>
                </paragraphs>

                <table>
                    <title>Extraordinary Characters and Their Empty Elements</title>
                    <tabular>
                        <row bottom="medium">
                            <cell>Character</cell>
                            <cell>Name</cell>
                            <cell>Element</cell>
                        </row>
                        <row>
                            <cell><ellipsis/></cell>
                            <cell>ellipsis</cell>
                            <cell><tage>ellipsis</tage></cell>
                        </row>

                        <row>
                            <cell><midpoint/></cell>
                            <cell>midpoint</cell>
                            <cell><tage>midpoint</tage></cell>
                        </row>

                        <row>
                            <cell><swungdash/></cell>
                            <cell>swung dash</cell>
                            <cell><tage>swungdash</tage></cell>
                        </row>

                        <row>
                            <cell><permille/></cell>
                            <cell>per-mille</cell>
                            <cell><tage>permille</tage></cell>
                        </row>

                        <row>
                            <cell><pilcrow/></cell>
                            <cell>pilcrow</cell>
                            <cell><tage>pilcrow</tage></cell>
                        </row>

                        <row>
                            <cell><section-mark/></cell>
                            <cell>section-mark</cell>
                            <cell><tage>section-mark</tage></cell>
                        </row>

                        <row>
                            <cell><copyright/></cell>
                            <cell>copyright</cell>
                            <cell><tage>copyright</tage></cell>
                        </row>

                        <row>
                            <cell><trademark/></cell>
                            <cell>trademark</cell>
                            <cell><tage>trademark</tage></cell>
                        </row>

                        <row>
                            <cell><registered/></cell>
                            <cell>registered</cell>
                            <cell><tage>registered</tage></cell>
                        </row>
                    </tabular>
                </table>
            </subsubsection>

            <subsubsection>
                <title>Accented Characters</title>

                <p>The second 128 Unicode characters (hex <c>80</c> to <c>FF</c>) contain many of the most frequently-used accented characters in Western languages, along with niceties such as the German <foreign>eszett</foreign>, &#xDF;, or the Scandinavian <foreign>æsc</foreign>, &#xE6;, an a-e ligature.  Like the fifty-two Latin letters (part of the <em>first</em> 128 Unicode characters), these may be used as-is.  They may be present on your keyboard, or you may need to learn keyboard shortcuts or specifics of your operating system to enter them as Unicode characters.  In a pinch, you can often cut-and-paste a few characters from web pages.</p>

                <p>This table is indexed by the Unicode number, in hexadecimal notation.  The first 32 of the 128 (<c>U+0080</c><ndash/><c>U+009F</c>) are control codes and <c>U+00A0</c> is a non-breaking space, so is invisible, while <c>U+00AD</c> is a soft hyphen (which we have not implemented and so is excluded).</p>

                <!-- ex &#x0080; - &#x009F; controls -->
                <!-- ex &#x00A0; non-breaking space  -->
                <!-- ex &#x00AD; soft hyphen         -->
                <table>
                    <title>Latin-1 Supplement, Unicode <c>U+00A0</c><ndash/><c>U+00FF</c></title>
                <tabular>
                    <row><cell />
                    <cell><c>0</c></cell>
                    <cell><c>1</c></cell>
                    <cell><c>2</c></cell>
                    <cell><c>3</c></cell>
                    <cell><c>4</c></cell>
                    <cell><c>5</c></cell>
                    <cell><c>6</c></cell>
                    <cell><c>7</c></cell>
                    <cell><c>8</c></cell>
                    <cell><c>9</c></cell>
                    <cell><c>A</c></cell>
                    <cell><c>B</c></cell>
                    <cell><c>C</c></cell>
                    <cell><c>D</c></cell>
                    <cell><c>E</c></cell>
                    <cell><c>F</c></cell></row>
                    <row><cell><c>00A_</c></cell><cell><nbsp /></cell><cell>&#x00A1;</cell><cell>&#x00A2;</cell><cell>&#x00A3;</cell><cell>&#x00A4;</cell><cell>&#x00A5;</cell><cell>&#x00A6;</cell><cell>&#x00A7;</cell>
                                                 <cell>&#x00A8;</cell><cell>&#x00A9;</cell><cell>&#x00AA;</cell><cell>&#x00AB;</cell><cell>&#x00AC;</cell><cell>        </cell><cell>&#x00AE;</cell><cell>&#x00AF;</cell></row>
                    <row><cell><c>00B_</c></cell><cell>&#x00B0;</cell><cell>&#x00B1;</cell><cell>&#x00B2;</cell><cell>&#x00B3;</cell><cell>&#x00B4;</cell><cell>&#x00B5;</cell><cell>&#x00B6;</cell><cell>&#x00B7;</cell>
                                                 <cell>&#x00B8;</cell><cell>&#x00B9;</cell><cell>&#x00BA;</cell><cell>&#x00BB;</cell><cell>&#x00BC;</cell><cell>&#x00BD;</cell><cell>&#x00BE;</cell><cell>&#x00BF;</cell></row>
                    <row><cell><c>00C_</c></cell><cell>&#x00C0;</cell><cell>&#x00C1;</cell><cell>&#x00C2;</cell><cell>&#x00C3;</cell><cell>&#x00C4;</cell><cell>&#x00C5;</cell><cell>&#x00C6;</cell><cell>&#x00C7;</cell>
                                                 <cell>&#x00C8;</cell><cell>&#x00C9;</cell><cell>&#x00CA;</cell><cell>&#x00CB;</cell><cell>&#x00CC;</cell><cell>&#x00CD;</cell><cell>&#x00CE;</cell><cell>&#x00CF;</cell></row>
                    <row><cell><c>00D_</c></cell><cell>&#x00D0;</cell><cell>&#x00D1;</cell><cell>&#x00D2;</cell><cell>&#x00D3;</cell><cell>&#x00D4;</cell><cell>&#x00D5;</cell><cell>&#x00D6;</cell><cell>&#x00D7;</cell>
                                                 <cell>&#x00D8;</cell><cell>&#x00D9;</cell><cell>&#x00DA;</cell><cell>&#x00DB;</cell><cell>&#x00DC;</cell><cell>&#x00DD;</cell><cell>&#x00DE;</cell><cell>&#x00DF;</cell></row>
                    <row><cell><c>00E_</c></cell><cell>&#x00E0;</cell><cell>&#x00E1;</cell><cell>&#x00E2;</cell><cell>&#x00E3;</cell><cell>&#x00E4;</cell><cell>&#x00E5;</cell><cell>&#x00E6;</cell><cell>&#x00E7;</cell>
                                                 <cell>&#x00E8;</cell><cell>&#x00E9;</cell><cell>&#x00EA;</cell><cell>&#x00EB;</cell><cell>&#x00EC;</cell><cell>&#x00ED;</cell><cell>&#x00EE;</cell><cell>&#x00EF;</cell></row>
                    <row><cell><c>00F_</c></cell><cell>&#x00F0;</cell><cell>&#x00F1;</cell><cell>&#x00F2;</cell><cell>&#x00F3;</cell><cell>&#x00F4;</cell><cell>&#x00F5;</cell><cell>&#x00F6;</cell><cell>&#x00F7;</cell>
                                                 <cell>&#x00F8;</cell><cell>&#x00F9;</cell><cell>&#x00FA;</cell><cell>&#x00FB;</cell><cell>&#x00FC;</cell><cell>&#x00FD;</cell><cell>&#x00FE;</cell><cell>&#x00FF;</cell></row>
                    </tabular>
                </table>
            </subsubsection>

            <subsubsection>
                <title>Arithmetic</title>

                <p>If you are writing about technical subjects, then you will want to avail yourself of <pretext/>'s extensive support for mathematics.  Otherwise, you may wish to write <em>really simple</em> arithmetic within sentences without extra formatting.  Notice that there is no provision for preventing line-breaks in the midst of these expressions.</p>

                <p>So you can author (2<times/>6)<obelus/>3+10<minus/>15 = -1, but that is about the limit of the complexity of expressions you should author without using the extensive capabilities designed for <em>mathematics</em>, rather than <em>arithmetic</em>.  Note that the spaces around the equal sign have been supplied in the source, but no spaces have been provided around the operators.  Also, the minus sign and the negative are slightly different because the subtraction uses the <tage>minus</tage> element, while the negative answer uses a plain keyboard hyphen/dash.</p>

                <p>Using the <tag>m</tag> element instead, the above is <m>(2\times 6)\div 3+10-15=-1</m>.  Note the more careful spacing, and the appropriate symbols for subtraction and negation, with no special care in the <latex/> syntax used in the source.</p>

                <p>Note also that the plus sign, <c>+</c> and the equals sign, <c>=</c>, can be provided in text as the unambiguous keyboard characters.</p>

                <paragraphs>
                    <title><tage>minus</tage>, <minus/>, minus, subtraction, negation</title>
                    <p>For simple arithmetic expressions in text, this symbol may be used.  Note that the keyboard hyhpen (or dash) might be acceptable for your purposes, but they are different.</p>
                </paragraphs>

                <paragraphs>
                    <title><tage>times</tage>, <times />, times, multiplication</title>
                    <p>For simple arithmetic expressions in text, this symbol may be used.  Or it may be used to specify dimensions, as in <q>I bought a 2<times />4 at the lumber yard.</q></p>
                </paragraphs>

                <paragraphs>
                    <title><tage>solidus</tage>, <solidus />, solidus, virgule, fraction bar</title>
                    <p>For simple arithmetic expressions in text, this symbol may be used to form a fraction.  It should appear to have a significantly shallower slope than the forward slash, /.</p>
                </paragraphs>

                <paragraphs>
                    <title><tage>obelus</tage>, <obelus/>, obelus, division sign</title>
                    <p>For simple arithmetic expressions in text, this symbol may be used to indicate division.</p>
                </paragraphs>

                <paragraphs>
                    <title><tage>plusminus</tage>, <plusminus/>, plus-minus sign</title>
                    <p>For simple arithmetic expressions in text, this symbol may be used to indicate a tolerance or a choice of two values, one the negative of the other.</p>
                </paragraphs>

                <!--
                http://gcp.fcaglp.unlp.edu.ar/_media/integrantes:psantamaria:latex:textcomp.pdf
                + regular
                - negative
                - subtract \textminus
                <times/>  \texttimes
                <solidus/> \textfractionsolidus
                <division/> F7 \textdiv
                <plusminus/> b1 \textpm
                -->
            </subsubsection>

            <subsubsection>
                <title>Separators</title>

                <paragraphs>
                    <title><tage>ndash</tage>, <ndash />, en dash</title>
                    <p>A dash, the width of a lowercase <sq>n</sq>, or exactly half the width of the em dash.  This is typically used to express a range, such as <c>1955&lt;ndash /&gt;1975</c>, with no intervening spaces.  It is often expressed as two hyphens when typed.  Bringhurst suggests an ndash surrounded by spaces <ndash /> thusly <ndash /> when setting off phrases.</p>
                </paragraphs>

                <paragraphs>
                    <title><tage>mdash</tage>, <mdash />, em dash</title>
                    <p>A dash, the width of a lowercase <sq>m</sq>, or twice the width of the en dash.  This is typically used to express a secondary part of a phrase, much like the use of a semi-colon or parentheses.</p>
                </paragraphs>

                <paragraphs>
                    <title><tage>nbsp</tage>, non-breaking space</title>
                    <p>A space, but which ties two words together and discourages a line break when formatted, such as <c>Summer&lt;nbsp /&gt;1967</c>.  This can also be used to discourage a period in an abbreviation from being interpreted as the end of a sentence, such as <c>C.R.&lt;nbsp /&gt;Darwin</c>.</p>
                </paragraphs>

                <paragraphs>
                    <title><tage>midpoint</tage>, <tage>swungdash</tage>, <midpoint/>, <swungdash/>, midpoint, swung dash</title>
                    <p>These can be used<midpoint/>as more decorative<swungdash/>separators.</p>
                </paragraphs>
            </subsubsection>
        </subsection>

        <subsection>
            <title>Keyboard Keys</title>
            <idx>keyboard keys</idx>
            <idx><h>keys</h><h>keyboard</h></idx>

            <p>If you are writing a software manual, or writing about how to use a calculator as part of a science textbook, then you might want to make it very clear which keys to press on a keyboard.  The <tag>kbd</tag> element can hold content like <c>Z</c> or <c>Caps Lock</c> and your output will have a very nice looking keyboard key with the desired label.  For example, <kbd>Z</kbd> and <kbd>Caps Lock</kbd>.  For keys labeled with graphics, like the arrow keys, instead of content, provide the <attr>name</attr> attribute with a value from the following table.  Request additions to this table if you are using this feature (2019-11-22).</p>

            <table>
                <title>Keyboard Keys Specified by <attr>name</attr> Attribute</title>
                <!-- IMPORTANT: long names in the last column to keep table-width under control -->
                <tabular>
                    <row>
                        <cell><c>left</c></cell>
                        <cell><kbd name="left"/></cell>
                        <cell><c>right</c></cell>
                        <cell><kbd name="right"/></cell>
                        <cell><c>up</c></cell>
                        <cell><kbd name="up"/></cell>
                        <cell><c>down</c></cell>
                        <cell><kbd name="down"/></cell>
                    </row>
                    <row>
                        <cell><c>enter</c></cell>
                        <cell><kbd name="enter"/></cell>
                        <cell><c>shift</c></cell>
                        <cell><kbd name="shift"/></cell>
                        <cell><c>solidus</c></cell>
                        <cell><kbd name="solidus"/></cell>
                        <cell></cell>
                        <cell></cell>
                    </row>
                    <row>
                        <cell><c>plus</c></cell>
                        <cell><kbd name="plus"/></cell>
                        <cell><c>minus</c></cell>
                        <cell><kbd name="minus"/></cell>
                        <cell><c>times</c></cell>
                        <cell><kbd name="times"/></cell>
                        <cell><c>left-paren</c></cell>
                        <cell><kbd name="left-paren"/></cell>
                    </row>
                    <row>
                        <cell><c>obelus</c></cell>
                        <cell><kbd name="obelus"/></cell>
                        <cell><c>squared</c></cell>
                        <cell><kbd name="squared"/></cell>
                        <cell><c>inverse</c></cell>
                        <cell><kbd name="inverse"/></cell>
                        <cell><c>right-paren</c></cell>
                        <cell><kbd name="right-paren"/></cell>
                    </row>
                </tabular>
            </table>
        </subsection>

        <subsection>
            <title>User-Interface Icons</title>

            <p>When writing about software, you may wish to call attention to icons used in the interface.  Similar to graphical keyboard keys, use the <tag>icon</tag> element with a <attr>name</attr> attribute with a value from the following table.  See <xref ref="latex-icons"/> for information about using icons as part of <latex/> output.</p>

            <!-- Keep table skinny with short names left and long names right -->
            <table>
                <title>User-Interface Icons available with <tage>icon</tage></title>

                <tabular>
                    <col/>
                    <col halign="center" right="medium"/>
                    <col/>
                    <col halign="center" right="medium"/>
                    <col/>
                    <col halign="center"/>
                    <row bottom="medium">
                        <cell>Name</cell>
                        <cell>Icon</cell>
                        <cell>Name</cell>
                        <cell>Icon</cell>
                        <cell>Name</cell>
                        <cell>Icon</cell>
                    </row>
                    <row>
                        <cell><c>file-save</c></cell>
                        <cell><icon name="file-save"/></cell>
                        <cell><c>arrow-left</c></cell>
                        <cell><icon name="arrow-left"/></cell>
                        <cell><c>media-rewind</c></cell>
                        <cell><icon name="media-rewind"/></cell>
                    </row>
                    <row>
                        <cell><c>arrow-up</c></cell>
                        <cell><icon name="arrow-up"/></cell>
                        <cell><c>arrow-right</c></cell>
                        <cell><icon name="arrow-right"/></cell>
                        <cell><c>media-fast-forward</c></cell>
                        <cell><icon name="media-fast-forward"/></cell>
                    </row>
                    <row>
                        <cell><c>menu</c></cell>
                        <cell><icon name="menu"/></cell>
                        <cell><c>arrow-down</c></cell>
                        <cell><icon name="arrow-down"/></cell>
                        <cell><c>media-skip-to-start</c></cell>
                        <cell><icon name="media-skip-to-start"/></cell>
                    </row>
                    <row>
                        <cell><c>wrench</c></cell>
                        <cell><icon name="wrench"/></cell>
                        <cell><c>media-stop</c></cell>
                        <cell><icon name="media-stop"/></cell>
                        <cell><c>media-pause</c></cell>
                        <cell><icon name="media-pause"/></cell>
                    </row>
                    <row>
                        <cell><c>gear</c></cell>
                        <cell><icon name="gear"/></cell>
                        <cell><c>media-play</c></cell>
                        <cell><icon name="media-play"/></cell>
                        <cell><c>media-skip-to-end</c></cell>
                        <cell><icon name="media-skip-to-end"/></cell>
                    </row>
                    <row>
                        <cell><c>power</c></cell>
                        <cell><icon name="power"/></cell>
                        <cell/>
                        <cell/>
                        <cell/>
                        <cell/>
                    </row>
                   <!-- <cell><c></c></cell><cell><icon name=""/></cell> -->
                   <!-- Keep rows full (w/ empty cells) to please HTML validator -->
                </tabular>
             </table>

        </subsection>

        <subsection>
            <title>Other Markup in Paragraphs</title>

                <!-- <title>Generators</title> -->

            <paragraphs>
                <title><tage>today</tage>, <tage>timeofday</tage>, <today />, <timeofday /></title>
                <p>Values at the time of <init>XML</init> processing.  Useful for marking drafts or other frequently revised material such as online versions.</p>
            </paragraphs>

            <paragraphs>
                <title><tage>tex</tage>, <tage>latex</tage>, <tage>pretext</tage>, <tage>webwork</tage>, <tex />, <latex />, <pretext />, <webwork /></title>
                <p>Conveniences for frequently-mentioned accessories to <pretext />.</p>
            </paragraphs>

            <paragraphs>
                <title><tage>fillin</tage>, <fillin characters="5" />, fill-in blank</title>
                <p>A <q>fill in the blank</q> blank.  While meant for use with normal text, it may also be used within mathematics contexts.  The <attr>characters</attr> attribute may be used to hint at how long the line will be, should the default value of 10 be too long or too short.  Here we have set <attr>characters</attr> to the value <c>5</c>.</p>
            </paragraphs>

            <paragraphs>
                <title><tage>ie</tage>, <tage>eg</tage>, <tage>ca</tage>, <tage>vs</tage>, <tage>etc</tage>, <ie />, <eg />, <ca />, <vs />, <etc /></title>
                <p>A small collection of frequently-used Latin abbreviations, with attempts to handle the tricky periods wisely in <latex /> output.  Strictly speaking <bc /> is not Latin, but we include it for completeness.  Tags are always lowercase, no punctuation, usually two letters.</p>
                <sidebyside>
                    <tabular>
                        <row><cell>Tag</cell><cell>Realization</cell><cell>Meaning</cell></row>
                        <!--  -->
                        <row><cell><c>ad</c></cell>    <cell><ad/>    </cell><cell><foreign>anno Domini</foreign>, in the year of the Lord</cell>      </row>
                        <row><cell><c>am</c></cell>    <cell><am/>    </cell><cell><foreign>ante meridiem</foreign>, before midday</cell>              </row>
                        <row><cell><c>bc</c></cell>    <cell><bc/>    </cell><cell>English, before Christ</cell>                                       </row>
                        <row><cell><c>ca</c></cell>    <cell><ca/>    </cell><cell><foreign>circa</foreign>, about</cell>                              </row>
                        <row><cell><c>eg</c></cell>    <cell><eg/>    </cell><cell><foreign>exempli gratia</foreign>, for example</cell>               </row>
                        <row><cell><c>etal</c></cell>  <cell><etal/>  </cell><cell><foreign>et alia</foreign>, and others</cell>                       </row>
                        <row><cell><c>etc</c></cell>   <cell><etc/>   </cell><cell><foreign>et caetera</foreign>, and the rest</cell>                  </row>
                        <row><cell><c>ie</c></cell>    <cell><ie/>    </cell><cell><foreign>id est</foreign>, in other words</cell>                    </row>
                        <row><cell><c>nb</c></cell>    <cell><nb/>    </cell><cell><foreign>nota bene</foreign>, note well</cell>                      </row>
                        <row><cell><c>pm</c></cell>    <cell><pm/>    </cell><cell><foreign>post meridiem</foreign>, after midday</cell>               </row>
                        <row><cell><c>ps</c></cell>    <cell><ps/>    </cell><cell><foreign>post scriptum</foreign>, after what has been written</cell></row>
                        <row><cell><c>vs</c></cell>    <cell><vs/>    </cell><cell><foreign>versus</foreign>, against</cell>                           </row>
                        <row><cell><c>viz</c></cell>   <cell><viz/>   </cell><cell><foreign>videlicet</foreign>, namely</cell>                         </row>
                    </tabular>
                </sidebyside>
            </paragraphs>

            <paragraphs>
                <title>SI Units</title>
                <p><foreign xml:lang="fr-FR">Système international (d'unités)</foreign> (International System of Units) is a system of measurement used universally in science.  <pretext /> has comprehensive support for this system and its notation and abbreviations.  See <xref ref="overview-si-units" /> for a short introduction and <xref ref="topic-units-measure" /> for detailed descriptions of the relevant elements and their use.</p>
            </paragraphs>

            <paragraphs>
                <!-- <title>music notation</title> -->
                <title><doublesharp/>, <sharp/>, <natural/>, <flat/>, <doubleflat/>, music notation</title>
                <p>Notes, chords, and other notation may appear within sentences as part of a discussion.  See <xref ref="topic-music" /> for detailed descriptions of the relevant elements.</p>
            </paragraphs>
        </subsection>

        <conclusion>
            <note xml:id="practice-careful-markup">
                <title>Understand the Importance of Careful Markup</title>

                <p>There is a lot of detailed information in this section.  Much of it is critically important.  If you are new to thinking in terms of markup (rather than <acro>WYSIWYG</acro> tools), it might be overwhelming, a lot to digest, and hard to separate the wheat from the chaff.  Careful here means using the necessary markup, not using it for other purposes different than its intent (<term>tag abuse</term>), planning ahead for different output formats, but not becoming a slave to over-doing it.</p>

                <p>So come back here often for a re-read.  And keep in mind that <pretext /> is designed around principles (<xref ref="list-principles" />), and that it is markup (<xref ref="principle-markup" />) which enables multiple outputs (<xref ref="principle-multiple-outputs" />) and effective and beautiful online versions (<xref ref="principle-web-versions"/>).</p>
            </note>
        </conclusion>
    </section>

    <section xml:id="topic-exercises">
        <title>(*) Exercises, Inline and Divisional</title>
        <p></p>
    </section>

    <section xml:id="topic-worksheet">
        <title>(*) Worksheets</title>
        <p></p>
    </section>

    <section xml:id="topic-references">
        <title>(*) Lists of Works Cited (References)</title>
        <p></p>
    </section>

    <section xml:id="topic-verbatim-literal">
        <title>Verbatim and Literal Text</title>

        <introduction>

            <p>This section expands on parts of <xref ref="overview-verbatim-literal" />.  For descriptions of more involved uses, such as program listings and console sessions, see <xref ref="topic-program-listings" />.</p>

            <p>The tags described here contain <em>only raw characters</em>.  By that we typically mean the first 128 characters of the <acro>ASCII</acro> code.  Unicode characters are likely to migrate to HTML output just fine, but results for <latex /> output will be variable.  The restriction to character data has two consequences.  First, any markup mistakenly included will have its content silently ignored and dropped.  Second, you need to observe the rules on exceptional characters and escaped characters for <init>XML</init> for literal text, which are mercifully simple.</p>

            <blockquote>
                <p>In your source, use <c>&amp;amp;</c> for an &amp;, use <c>&amp;lt;</c> for &lt;, and optionally use <c>&amp;gt;</c> for &gt;.  Otherwise, every other <acro>ASCII</acro> character will render faithfully across all possible formats.</p>
            </blockquote>

            <p>See <xref ref="topic-exceptional-characters"/> for more detail and explanation.</p>
        </introduction>

        <subsection xml:id="short-verbatim-text">
            <title>Short, Inline, Verbatim Text</title>
            <idx>verbatim text</idx>
            <idx>literal text</idx>

            <p>The <tag>c</tag> tag is a mnemonic for <q>code</q>, but is really meant to be any chunk of literal characters that you want to emphasise that way.  So a <q>typewriter</q> font of fixed-width characters would be a typical presentation.  It is meant for use within a sentence or caption (<q>inline</q>) so its use is limited to those situations, and others that are similar, such as a title or a cell of a table.  Typically these pieces of text do not hyphenate words, and so can lead to spillover into a right margin.  In these situations, consider options below for longer pieces of text.</p>
        </subsection>

        <subsection xml:id="long-verbatim-text">
            <title>Longer, Inline, Verbatim Text</title>

            <p>For longer pieces of verbatim text, use the <tag>cd</tag> tag, which is short for <q>code display</q>, analogous to the <tag>md</tag> for mathematics.  It is used within sentences of a paragraph and will be presented with a vertical break above and below, but without interrupting the paragraph.  Because of the display presentation, it cannot be used other places, such as a <tag>title</tag>, where a vertical gap is not appropriate.  All of the previous discussion about exceptional characters applies for this tag.</p>

            <p>You have two options in use.  You may author inline with the rest of a sentence, with no extra newlines or whitespace before, after, or within the content.  The result will be a single displayed line.</p>

            <p>Or you may structure the content using one, or more, of the <tag>cline</tag> tag, which is meant to be similar to the <tag>line</tag> tag used elsewhere.  You should still take care to not place any extra whitespace before or after the <tag>cd</tag> element, but in between the <tag>cline</tag> you may use as much visual formatting of your source as you wish, especially if you like your source to mirror your output.</p>
        </subsection>

        <subsection xml:id="block-verbatim-text">
            <title>Blocks of Verbatim Text</title>

            <p>If you want to isolate large chunks of verbatim text outside of paragraphs, the <tag>pre</tag> tag is the one to use.  It can be used as a peer of paragraphs (and other structures) as a child of a division, or it can be placed into a <tag>listing</tag> to receive a caption, title and number.</p>

            <p>You can structure the contents with <tag>cline</tag> in exactly the same manner as for <tag>cd</tag>.  But you may find this tedious.  Instead, you can make the content of <tag>pre</tag> a sequence of lines separated by newlines.  So that you can preserve the indentation of your source, the line closest to the left margin is taken to actually be the left margin, and a corresponding amount of leading whitespace will be removed from every line.  This will work well if you recognize two caveats.  First, results will be unpredictable if you mix spaces and tabs for indentation.  Sticking with spaces is best.  Second, if your first characters of content immediately follow the <tag>pre</tag> tag then there is no leading whitespace and it is as if that line is already at the left margin.  Then subsequent indentation may seem too severe to you.</p>

            <p>As previously mentioned, <xref ref="topic-program-listings" /> discusses the <tag>console</tag> and <tag>program</tag> tags which are more specific, and hence more capable.  Review the possibilities before you decide between <tag>pre</tag>, <tag>console</tag>, and <tag>program</tag>.</p>
        </subsection>
    </section>

    <section xml:id="topic-cross-referencing">
        <title>Cross-References and Citations</title>
        <idx>cross-reference</idx>
        <idx>citation</idx>

        <introduction>
            <p>When you read a novel, you would likely read it cover-to-cover (in one sitting?) and then put it away and never read it again.  But for a textbook, you may read cover-to-cover, but you may also frequently skip around, especially at exam time.  And once read, it might become a reference work for you, since you know it so well.  So years later you might come back looking for something.  Cross-references help with all this, so use them liberally.  Recognize that an index is really just a specialized way to provide an abundance of cross-references.</p>
        </introduction>

        <subsection>
            <title>Creating a Cross-Reference</title>

            <p>It is a two-step process to make a cross-reference.<ol>
                <li>Put an <attr>xml:id</attr> attribute on any element you think you might want to reference later.  Be organized about the values of these attributes, and in particular do not number them, as this has no place in your source, and you do not want to maintain the changing numbers over the life of your project.  See the advice in <xref ref="overview-cross-references" /> about banned characters.  Some elements do not accept this attribute because the element has nothing to identify it (no number, no title).  Typically these are <term>containers</term><idx>container</idx> such as <tag>sidebyside</tag>, <tag>statement</tag>, or <tag>ol</tag>.  In these cases, put the attribute on the closest enclosing element.</li>

                <li>To make a cross reference, you create an <tage>xref</tage> element with a <attr>ref</attr> attribute with the same value as <attr>xml:id</attr> attribute on the element you want to reference.</li>
            </ol>Simple.  It is meant to be, so you can use it liberally.  But we also know authors want some flexibility.</p>

            <note>
                <title>Use <attr>xml:id</attr> Frequently</title>

                <p>Use the <attr>xml:id</attr> attribute liberally, on any object you might want to reference later, and on every division.  It is easier to do as you author and will be very valuable later.  (Trust us on this one.)  Develop a system so you can recall them predictably, but keep them readable.  Don't use numbers, they will change.  Then make frequent cross-references.  They are relatively easy for you and will be incredibly useful for each and every one of your many readers, over and over and over again.</p>
            </note>
        </subsection>

        <subsection>
            <title>Text of a Cross-Reference</title>

            <p>By default, a cross-reference will visually be text like Theorem 5.2.  Depending on your output format, it may have various devices to help you locate that theorem.  Maybe a page number, or it is a hyperlink, or the whole theorem is the content of a knowl.  You can change the default look of cross-references by setting the <attr>text</attr> attribute in <c>docinfo/cross-references</c>.  But you can also change the visual appearance of a cross-reference on a case-by-case basis.  Add a <attr>text</attr> attribute to your <tage>xref</tage> element to override the document-wide setting.  The first column of this table lists the possible attribute values, either document-wide, or on a per-cross-reference basis.  The second column has live cross-references to a section of an earlier chapter (that is far away).  The third column has live cross-references to another section of this chapter (which is close by).  For the fourth column, we have placed content (<q>Extra</q>) into the <tag>xref</tag> element as an override of, or addition to, some of the text for the cross-references of the preceding column.  Study the table and then read some more explanation following.  Note that <c>type-global</c> is the default.</p>

            <table>
                <title>Cross-reference visual text styles</title>
                <tabular>
                    <row bottom="major">
                        <cell><attr>text</attr></cell>
                        <cell>Far Away</cell>
                        <cell>Close By</cell>
                        <cell>With Content</cell>
                    </row>

                    <row>
                        <cell><c>type-local</c></cell>
                        <cell><xref ref="overview-title"     text="type-local" /></cell>
                        <cell><xref ref="topic-divisions" text="type-local" /></cell>
                        <cell><xref ref="topic-divisions" text="type-local">Extra</xref></cell>
                    </row>

                    <row>
                        <cell><c>type-global</c></cell>
                        <cell><xref ref="overview-title"     text="type-global" /></cell>
                        <cell><xref ref="topic-divisions" text="type-global" /></cell>
                        <cell><xref ref="topic-divisions" text="type-global">Extra</xref></cell>
                    </row>

                    <row>
                        <cell><c>type-hybrid</c></cell>
                        <cell><xref ref="overview-title"     text="type-hybrid" /></cell>
                        <cell><xref ref="topic-divisions" text="type-hybrid" /></cell>
                        <cell><xref ref="topic-divisions" text="type-hybrid">Extra</xref></cell>
                    </row>

                    <row>
                        <cell><c>local</c></cell>
                        <cell><xref ref="overview-title"     text="local" /></cell>
                        <cell><xref ref="topic-divisions" text="local" /></cell>
                        <cell><xref ref="topic-divisions" text="local">Extra</xref></cell>
                    </row>

                    <row>
                        <cell><c>global</c></cell>
                        <cell><xref ref="overview-title"     text="global" /></cell>
                        <cell><xref ref="topic-divisions" text="global" /></cell>
                        <cell><xref ref="topic-divisions" text="global">Extra</xref></cell>
                    </row>

                    <row>
                        <cell><c>hybrid</c></cell>
                        <cell><xref ref="overview-title"     text="hybrid" /></cell>
                        <cell><xref ref="topic-divisions" text="hybrid" /></cell>
                        <cell><xref ref="topic-divisions" text="hybrid">Extra</xref></cell>
                    </row>

                    <row>
                        <cell><c>phrase-global</c></cell>
                        <cell><xref ref="overview-title"     text="phrase-global" /></cell>
                        <cell><xref ref="topic-divisions" text="phrase-global" /></cell>
                        <cell>Warning</cell>
                    </row>

                    <row>
                        <cell><c>phrase-hybrid</c></cell>
                        <cell><xref ref="overview-title"     text="phrase-hybrid" /></cell>
                        <cell><xref ref="topic-divisions" text="phrase-hybrid" /></cell>
                        <cell>Warning</cell>
                    </row>

                    <row>
                        <cell><c>title</c></cell>
                        <cell><xref ref="overview-title"     text="title" /></cell>
                        <cell><xref ref="topic-divisions" text="title" /></cell>
                        <cell>Warning</cell>
                    </row>

                    <row>
                        <cell><c>custom</c></cell>
                        <cell></cell>
                        <cell></cell>
                        <cell><xref ref="topic-divisions" text="custom">Extra</xref></cell>
                    </row>
                </tabular>
            </table>

            <p>Note that <c>local/global</c> describes the uniqueness of the number (and is affected by your choice of numbering schemes), while <c>type</c> refers to an automatic prefix of the number.  The text of the type will vary according to the document's language. If a cross-reference and its target are close to each other, a number like 5.8.2.4 might be overkill, when just a 4 would suffice.  A <c>hybrid</c> scheme will use the shorter number whenever it makes sense.  There are two <c>phrase</c> schemes, and it should be clear what text <c>title</c> will produce (though realize there must be a title for the object, possibly a default provided by <pretext />).  Finally, if desired, the text can be customized with any text you like.</p>

            <p>You can also override the text used in a cross-reference link.  You do this by providing content to the <tag>xref</tag> element.  In other words, do not use an empty tag, but put some (simple) text in the element.  Generally, this additional text becomes a prefix of a number or a replacement of a type.  It is better to use these overrides, since in electronic formats, the text of the override will be incorporated into the <q>clickable</q> portion of the resulting link, making a larger item to hit.  Recognize that this extra content will not benefit from automatic internationalization.</p>

            <p>Here are careful examples of providing content inside the <tag>xref</tag> element, where we have provided the content <q>Division</q> in the live examples.  The list is not exhaustive.</p>

            <!-- expand and add links to the Preface to demo default titles -->
            <table xml:id="txo">
                <title>Cross-reference text overrides</title>
                <tabular>
                    <row bottom="major">
                        <cell><attr>text</attr></cell>
                        <cell>Example</cell>
                    </row>
                    <row>
                        <cell><c>'global'</c></cell>
                        <cell><xref ref="topic-cross-referencing" text="global">Division</xref></cell>
                    </row>
                    <row>
                        <cell><c>'type-global'</c></cell>
                        <cell><xref ref="topic-cross-referencing" text="type-global">Division</xref></cell>
                    </row>
                    <row>
                        <cell><c>'custom'</c></cell>
                        <cell><xref ref="topic-cross-referencing" text="custom">Division</xref></cell>
                    </row>
                </tabular>
            </table>
        </subsection>

        <subsection>
            <title>Variations</title>

            <p>There are some variant uses for the <tag>xref</tag> tag.<ul>
                <li>Replace <attr>ref</attr> by <attr>provisional</attr> and give it a value with some simple text like <c>subsection on eagle habitat</c> and you will get reminders that once you write this future subsection you need to link it in right here.  This is just a convenience for authors during the early stages of a writing project.</li>

                <li>Replace <attr>ref</attr> by the pair <attr>first</attr> and <attr>last</attr>.  Provide attribute values just as you would for <attr>ref</attr>.  The code will check that the targets have the exact same tag, and that the order is correct.  You will get a link that looks like a range, separated by an en dash.  As a link, only <attr>first</attr> will be used for the linking mechanism (<ie />, one link is generated, not two).  Experiment with <attr>text</attr> and content overrides.</li>

                <li>The <attr>ref</attr> attribute may be a list of <attr>xml:id</attr>, separated by commas or by spaces.  Then you will get back a list of cross-references.  This is meant for a list of citations, producing a look like [5, 9, 22], but it makes no restriction to this case.  Use it generally, but it is unlikely to get any more capable.  If you want a different list, just use multiple <tag>xref</tag> and format as you desire.</li>
            </ul></p>

            <p>You can create many different combinations with the text options and the variants.  Here is one example.  You want to say <xref first="start-here" last="schema" text="global">Chapters</xref>.  As a range you use the variant with two references. You would get <q>Chapter</q> out front automatically with the <c>type-global</c> scheme, but a plural form makes more sense.  So you use that text as an override.  We could use either <c>type-global</c> or <c>global</c> to get the same text, and possibly <c>type-hybrid</c> depending on the place where you built the cross-reference.  So possibly, one of these schemes might be your document-wide setting and you do not need to specify it now.  Here is what we just used:<cd>
                <cline>&lt;xref first="start-here" last="schema" text="global"&gt;Chapters&lt;/xref&gt;</cline>
            </cd></p>

            <p>You can place a cross-reference into a <tag>title</tag> element, but a particular conversion is free to simply render it as text, and not as an active link.</p>

            <p>Finally, there is fairly robust error-checking to protect against typographical errors in the attribute values that need to match up for all this to work.  Also, there is a check that the <attr>xml:id</attr> are unique.  But all this checking happens at processing-time, not at the validation step.  Any suggestions for improvements that make these checks even more robust are welcome.</p>
        </subsection>

        <subsection>
            <title>Citations</title>
            <idx>citation</idx>

            <p>Citations are just specialized cross-references to <tag>biblio</tag> elements, and so behave the same way as other cross-references.  However they will always visually look like [23], and there is no notion of <q>type name.</q></p>
        </subsection>

        <subsection>
            <title>Equations</title>

            <p>Similar to citations, references to equations (<tag>men</tag> and <tag>mrow</tag> elements) will visually look like (4.2), where the type name is implied by the parentheses.  Notice that you cannot cross-reference an <tag>me</tag> element (it has no number) or an <tag>md</tag> element (it is just a container, filled with <tag>mrow</tag> that you can target if you give them numbers).  Consult <xref ref="topic-display-math" /> for details about controlling the numbering of equations within an <tag>md</tag> or <tag>mdn</tag> element.</p>
        </subsection>



        <subsection xml:id="topic-cross-reference-list-item">
            <title>Lists</title>

            <p>Roughly, you can target a list item for a cross-reference, but not the list itself, since it is a container.  See <xref ref="topic-list-item-target" /> for precise details about using list content as the target of a cross-reference.  Note also, that an entire named list may be the target of a cross-reference, see <xref ref="topic-named-list" />.  Here we concentrate on the text of the cross-reference itself.</p>

            <p>First, note that if you cross-reference a list item of an anonymous list, there is a very real possibility that the number will be ambiguous, and there is no option for <attr>text</attr> will save you, and never can be.  See the middle column of <xref ref="table-xref-list-item" /> for the demonstration.  We assiduously try to make it <em>impossible</em> to ever create ambiguous text for cross-references, especially in consideration of print output.  Use the feature carefully.</p>

            <note xml:id="practice-ambiguous-list-items">
                <title>Take Care Referencing Anonymous Lists</title>

                <p>Cross-references to list items of anonymous lists can easily be ambiguous and then useless for readers of print.  Keep such a cross-reference close to its target, ideally within the same list, and/or perhaps using additional, unambiguous clues about location (which you  expect will survive later editing):
                <ol>
                    <li xml:id="ambiguous-list-item-one">See <xref ref="ambiguous-list-item-two" /> of this list.</li>
                    <li xml:id="ambiguous-list-item-two">See <xref ref="ambiguous-list-item-one" /> in the list appearing in <xref ref="practice-ambiguous-list-items" />.</li>
                </ol></p>
            </note>

            <p>The <c>local</c> option, discussed generally above, behaves differently for a cross-reference to a list item of an ordered list that is contained in a named list.  As seen in the table just below, the local portion of the number is the part that comes from the list item, without the part that comes from the location of the <tag>list</tag> block.</p>

            <table xml:id="table-xref-list-item">
                <title>Cross-references to list items, visual text styles</title>
                <tabular>
                    <row bottom="major">
                        <cell><attr>text</attr></cell>
                        <cell>Named List</cell>
                        <cell>Anonymous List</cell>
                        <cell>With Content</cell>
                    </row>

                    <row>
                        <cell><c>type-local</c></cell>
                        <cell><xref ref="named-list-target"  text="type-local" /></cell>
                        <cell><xref ref="anon-list-target" text="type-local" /></cell>
                        <cell><xref ref="named-list-target" text="type-local">Extra</xref></cell>
                    </row>

                    <row>
                        <cell><c>type-global</c></cell>
                        <cell><xref ref="named-list-target"  text="type-global" /></cell>
                        <cell><xref ref="anon-list-target" text="type-global" /></cell>
                        <cell><xref ref="named-list-target" text="type-global">Extra</xref></cell>
                    </row>

                    <row>
                        <cell><c>type-hybrid</c></cell>
                        <cell><xref ref="named-list-target"  text="type-hybrid" /></cell>
                        <cell><xref ref="anon-list-target" text="type-hybrid" /></cell>
                        <cell><xref ref="named-list-target" text="type-hybrid">Extra</xref></cell>
                    </row>

                    <row>
                        <cell><c>local</c></cell>
                        <cell><xref ref="named-list-target"  text="local" /></cell>
                        <cell><xref ref="anon-list-target" text="local" /></cell>
                        <cell><xref ref="named-list-target" text="local">Extra</xref></cell>
                    </row>

                    <row>
                        <cell><c>global</c></cell>
                        <cell><xref ref="named-list-target"  text="global" /></cell>
                        <cell><xref ref="anon-list-target" text="global" /></cell>
                        <cell><xref ref="named-list-target" text="global">Extra</xref></cell>
                    </row>

                    <row>
                        <cell><c>hybrid</c></cell>
                        <cell><xref ref="named-list-target"  text="hybrid" /></cell>
                        <cell><xref ref="anon-list-target" text="hybrid" /></cell>
                        <cell><xref ref="named-list-target" text="hybrid">Extra</xref></cell>
                    </row>

                    <row>
                        <cell><c>phrase-global</c></cell>
                        <cell><xref ref="named-list-target"  text="phrase-global" /></cell>
                        <cell>Warning</cell>
                        <cell>Warning</cell>
                    </row>

                    <row>
                        <cell><c>phrase-hybrid</c></cell>
                        <cell><xref ref="named-list-target"  text="phrase-hybrid" /></cell>
                        <cell>Warning</cell>
                        <cell>Warning</cell>
                    </row>

                    <row>
                        <cell><c>title</c></cell>
                        <cell><xref ref="named-list-target"  text="title" /></cell>
                        <cell><xref ref="anon-list-target" text="title" /></cell>
                        <cell>Warning</cell>
                    </row>

                    <row>
                        <cell><c>custom</c></cell>
                        <cell></cell>
                        <cell></cell>
                        <cell><xref ref="named-list-target" text="custom">Extra</xref></cell>
                    </row>
                </tabular>
            </table>

            <p>The <c>hybrid</c> options employ a different definition of when the distance between a cross-reference and its target is close enough that the number can be shortened, without becoming ambiguous.  When an <tag>xref</tag> and its target are part of the same <tag>list</tag>, then the common part of the number derived from the <tag>list</tag> is not needed.  To illustrate we need to make a small <tag>list</tag> with cross-references contained within.</p>

            <list>
                <title>Small test</title>
                <ol>
                    <li>(<c>type-global</c>)  Flowers are not <xref ref="nearby-item" text="type-global" />.</li>
                    <li>(<c>type-hybrid</c>)  Fish are not <xref ref="nearby-item" text="type-hybrid" />.</li>
                    <li>(<c>hybrid</c>)  Bacteria are not <xref ref="nearby-item" text="hybrid" />.</li>
                    <li>(<c>phrase-global</c>)  Fungi are not <xref ref="nearby-item" text="phrase-global" />.</li>
                    <li>(<c>phrase-hybrid</c>)  Trees are not <xref ref="nearby-item" text="phrase-hybrid" />.</li>
                    <li xml:id="nearby-item">Mammals.</li>
                </ol>
            </list>
        </subsection>

        <conclusion>
            <note>
                <title>Be Rational About Numbering Variations</title>

                <p>With distinct numbering schemes for divisions, theorems, figures, equations, and citations, along with ten different text styles for a cross-reference, plus variants, per-cross-reference settings, and text overrides, there is a huge supply of combinations.  Likely you can create some really ugly cross-references.  Use the flexibility sensibly.</p>
            </note>
        </conclusion>
    </section>


    <section xml:id="topic-divisions">
        <title>Divisions</title>

        <p>A <term>division</term><idx>division</idx> (or more carefully, a <term>structural division</term><idx>structural division</idx>) is a structured component of a book or article that would be recognized by most any reader.  They are essential to the organization of a <pretext /> project.  Notice that we use the generic term division, since a <tag>section</tag> is just one example of a division.</p>

        <p>Divisions are <tag>book</tag>, <tag>article</tag>, <tag>part</tag>, <tag>chapter</tag>, <tag>section</tag>, <tag>subsection</tag>, <tag>subsubsection</tag>, and <tag>paragraphs</tag>.  Their use is fairly intuitive, though there are some restrictions, so please read on.</p>

        <p>A <tag>book</tag> must contain at least one <tag>part</tag> or at least one <tag>chapter</tag>, which may contain <tag>section</tag>, <tag>subsection</tag>, and <tag>subsubsection</tag>.  A <tag>part</tag> simply contains a sequence of <tag>chapter</tag> and functions in two user-selectable ways: structural (<eg /> numbering will reset), or decorative (merely inserting a decorative page between two chapters and sectioning the Table of Contents).</p>

        <p>An <tag>article</tag> is simpler and shorter than a book.  It might be really simple and have no divisions at all, or it may have <tag>section</tag>s.  It cannot have <tag>chapter</tag>s, as that would be a <tag>book</tag>.  Within a <tag>section</tag>, <tag>subsection</tag>s and <tag>subsubsection</tag>s may follow.</p>

        <p>Divisions must nest properly and may not be skipped.  So a <tag>section</tag> cannot contain a <tag>chapter</tag> and a <tag>subsection</tag> may not be contained in a <tag>chapter</tag> without an intervening <tag>section</tag>.</p>

        <p>A division <em>must</em> contain a <tag>title</tag>, and may contain one or more index entries (see <xref ref="topic-index" />), which should appear before anything else.  Any division may be unstructured, with just a sequence of <term>top-level content</term><idx>top-level content</idx> such as paragraphs, figures, lists, theorems, <etc />  Or a division may be structured, and in this case it must follow a prescribed pattern.  There may be a single, optional <tag>introduction</tag>, filled with top-level content, followed by a sequence of at least one of the appropriate divisions, ending with a single, optional <tag>conclusion</tag>, filled with top-level content.  It is an error to begin with a run of top-level content inside a division and then begin to use divisions.  (The solution is to make the initial content an <tag>introduction</tag> and/or one or several divisions.)</p>

        <p>There are exceptions to the above.  For one, <tag>paragraphs</tag> is an anomalous division, as a sort of lightweight sectioning command.  It may appear in any division, at any location within a division, it may not be divided further (it is a leaf of the document tree), it never gets a number, and its title is formatted in a subsidiary way.  I especially like to use this in a two- or three-page <tag>article</tag> that has no other divisions at all.  Typical presentation has the title in bold, without much change in font size (if at all), inline with the first paragraph, and perhaps a bit of vertical space as it begins and ends.  Despite the name, it may contain more than just paragraphs, so may contain any top-level-content that would go in any other division.</p>

        <p>Two other anomalous divisions are <tag>exercises</tag> and <tag>references</tag>.  These can be placed as a final component of any division from <tag>chapter</tag> on down.  So for example, an <tag>exercises</tag> could be a peer of several <tag>section</tag>s, contained within a structured <tag>chapter</tag>, and in this case would behave similar to the other <tag>section</tag>s.  Or an unstructured <tag>chapter</tag> may have a sequence of paragraphs, figures, examples, and the like, and conclude with a single <tag>exercises</tag>.  Detail on allowed content and behavior are in <xref ref="topic-exercises" /> and <xref ref="topic-references" />, respectively.</p>
    </section>

    <section xml:id="topic-mathematics">
        <title>Mathematics</title>
        <idx>mathematics</idx>

        <introduction>
            <p>As mentioned in the overview, <xref ref="overview-math" />, we use <latex /> syntax for mathematics.  In order to allow for quality display in <init>HTML</init>, and other electronic formats, this limits us to the subset of <latex /> supported by the very capable <url href="https://www.mathjax.org/">MathJax</url> Javascript library.  Generally this looks like the <c>amsmath</c><idx><c>amsmath</c></idx> package maintained by the American Mathematical Society at their <url href="http://www.ams.org/publications/authors/tex/amslatex">AMS-LaTeX page</url>.  For a complete and precise list of what MathJax supports, see MathJax's <url href="http://docs.mathjax.org/en/latest/input/tex/macros/">Supported <tex/>/<latex/> commands</url><fn><c>http://docs.mathjax.org/en/latest/input/tex/macros/</c></fn> (2019-11-10: this link may be specific to MathJax 3.0, which we have not yet adopted.)</p>
        </introduction>

        <subsection>
            <title>Inline Mathematics</title>

            <p>Use the <tag>m</tag> to place variables or very short expressions within a sentence of a paragraph, the content of a <tag>title</tag>, a <tag>cell</tag> of a table, a footnote, or other similar locations of sentence-like text.  You can't cross-reference this text, nor make a knowl with it.  Though you can typically cross-reference a containing element.</p>

            <p>Do not use <latex />-isms like <c>\displaystyle</c> to try to end-run the inline nature.  It will just lead to poor results.</p>
        </subsection>

        <subsection>
            <title>One-Line Display Mathematics</title>

            <p>The <tag>me</tag> element can be used for longer expressions or a single equation.  Typically you will get vertical separation above and below, and the contents will be centered.  See below about concluding periods (and other punctuation), and alignment.  The <tag>men</tag> variant will produce a numbered equation, and therefore with a provided <attr>xml:id</attr> attribute, can be the target of a cross-reference (<tag>xref</tag>).</p>
        </subsection>

        <subsection xml:id="topic-display-math">
            <title>Multi-line Display Mathematics</title>

            <p>We begin with a pure container, either <tag>md</tag> or <tag>mdn</tag>.  The former numbers no lines, the latter numbers every line.  Within the container, content, on a per-line basis, goes into a <tag>mrow</tag> element.  You can think of <tag>mrow</tag> as being very similar to <tag>me</tag>.  If you are tempted to put a <latex /> <c>\\</c> into an <tag>mrow</tag>, think twice.</p>

            <p>On any given <tag>mrow</tag> you can place the <attr>number</attr> attribute, with allowable values of <c>yes</c> and <c>no</c>.  These will typically be used to override the behavior inherited by the container, but there is no harm if they are redundant.  A given line of the display may be the target of a cross-reference, though the numbering flexibility means you can try (and fail) to target an unnumbered equation.</p>

            <p>An <tag>mrow</tag> may have a <attr>tag</attr> attribute in place of a <attr>number</attr> attribute.  This will create a <q>number</q> on the equation which is just a symbol.  This is meant for situations where you do not want to use numbers, and the resulting cross-reference is <q>local.</q>  In other words, the <tag>xref</tag> and its target are not far apart, such as maybe within the same <tag>example</tag> or the same <tag>proof</tag>.  Allowable values for the attribute are: <c>star, dstar, tstar, dagger, ddagger, tdagger, hash, dhash, thash, maltese, dmaltese, tmaltese</c>.  These are the names of symbols, with prefixes where the prefix <c>d</c> means <q>double</q>, and the prefix <c>t</c> means <q>triple</q>.  Cross-references to these tagged equations happens in the usual way and should behave as expected.  See <xref ref="overview-cross-references" /> and <xref ref="topic-cross-referencing" /> for more on cross-references.</p>
        </subsection>

        <subsection xml:id="mathematics-xml-characters">
            <title>exceptional characters</title>

            <p>The <latex /> macros, <c>\amp</c>, <c>\lt</c>, and <c>\gt</c> are always available within these mathematics elements, so that you can avoid the exceptional XML characters <c>&amp;</c>, <c>&lt;</c> and <c>&gt;</c>.  See <xref ref="overview-exceptional-characters" /> for this same information, but in the broader context of your entire document.</p>
        </subsection>

        <subsection>
            <title>Text in Mathematics</title>

            <p>Once in a while, you need a little bit of <q>regular</q> text within an expression and you do not want it to look like a product of a bunch of one-letter variables.  Use the <c>\text{}</c> macro for these.  Only.  Other ways of switching out of math-mode and into some sort of <q>regular</q> text will appear inferior, and can raise errors in certain conversions.<ul>
                <li>Do place surrounding spaces inside the <c>\text{}</c> macro.</li>
                <li>Do not place any mathematics inside the  <c>\text{}</c> macro.</li>
                <li>Do not use the <c>\mbox{}</c> macro as a substitute.</li>
                <li>Do not use font-changing commands (<eg /> <c>\rm</c>) as a substitute.</li>
            </ul></p>

            <p>For example,<cd>
                <cline>&lt;me&gt;f(x) = \begin{cases} x^2 \amp \text{if } x\gt 0\\</cline>
                <cline>           -7 \amp \text{otherwise} \end{cases}&lt;/me&gt;</cline>
            </cd>produces
            <me>f(x) = \begin{cases}x^2\amp\text{if }x\gt 0\\-7\amp\text{otherwise}\end{cases}</me>.  This example amply illustrates the use of macros for XML exceptional characters (twice), appropriate use of the <c>\text{}</c> macro (twice), spaces in the <c>\text{}</c> macro (once), sentence-ending punctuation (see the source, the period is <em>not</em> inside the <tag>me</tag> element) and yes, we did think twice about the <c>\\</c> (an exception to the rule).</p>
        </subsection>

        <subsection>
            <title>Cross-References in Display Mathematics</title>

            <p>A cross-reference is achieved with the <tag>xref</tag> element, see <xref ref="overview-cross-references" />.  You can place an <tag>xref</tag> inside a <tag>mrow</tag>, and remarkably, it will do the right thing.  This is one of only two <init>XML</init> elements you can mix-in with <latex /> syntax.  A typical use is to provide a justification or explanation for a step in a proof, derivation, or simplification.  And it works best with alignment, see below.</p>
        </subsection>

        <subsection>
            <title>Alignment in Display Mathematics</title>

            <p>Displayed mathematics is implemented with the AMS-<latex /> <c>align</c> environment.  Ampersands are used to control this, so use the <c>\amp</c> macro for these.  The first ampersand in a line or row is an alignment point, typically a symbol, like an equality.  The next ampersand is a column separator, then the next is an alignment point, then a column separator, then<ellipsis />  The moral of the story is you should have <m>n</m> alignment points, with <m>n-1</m> column separators, for a total of <m>2n-1</m> ampersands<mdash />always an odd number.</p>

            <p>For example,<cd>
                <cline>&lt;md&gt;</cline>
                <cline>  &lt;mrow&gt;A \amp = B \amp D \amp = E \amp \amp \text{Because}&lt;/mrow&gt;</cline>
                <cline>  &lt;mrow&gt;  \amp = C \amp   \amp = F \amp \amp &lt;xref ref="txo" /&gt;&lt;/mrow&gt;</cline>
                <cline>&lt;/md&gt;</cline>
            </cd>produces
            <md>
                <mrow>A \amp = B \amp D \amp = E \amp \amp\text{Because}</mrow>
                <mrow>  \amp = C \amp   \amp = F \amp \amp<xref ref="txo" /></mrow>
            </md>.</p>

            <p>Sometimes you want several short equations on one line.  Do not use <tag>me</tag>.  Instead use a single <tag>mrow</tag> inside an <tag>md</tag>, and use alignment to spread them out evenly.</p>

            <p>For multi-line display mathematics with no ampersands present, each line will be centered.  This is implemented with the AMS-<latex /> <c>gather</c> environment.</p>

            <p>You can fool the alignment behavior by hiding all your ampersands in macro definitions, so there is the optional <attr>alignment</attr> attribute for the <tag>md</tag> or <tag>mdn</tag> element, in order to force the right kind of alignment.  Allowable values are <c>gather</c>, <c>align</c>, and <c>alignat</c>.  The latter is similar to <c>align</c>, but no space is automatically provided between columns.  You can leave it that way, or explicitly add your own.  For example, this allows you to precisely arrange individual terms of a system of linear equations, especially when terms with zero coefficients are omitted.  When using the <c>alignat</c> option <pretext /> tries to count ampersands to see how many columns you intend, since <latex /> needs this number (we are not sure why).  This detection can be fooled too, especially if you have something like a matrix with lots of ampersands for other purposes.  So set the <attr>alignat-columns</attr> attribute to the <em>number of intended columns</em>, if necessary.</p>
        </subsection>

        <subsection xml:id="commutative-diagrams">
            <title>Commutative Diagrams</title>

            <p>Commutative diagrams may be authored using the <init>AMS</init> <latex/> <c>amscd</c> package<fn><url href="https://ctan.org/pkg/amscd"><c>ctan.org/pkg/amscd</c></url></fn>.  While restricted in some ways, such as the lack of sloped or curved arrows, it has one important advantage over more general drawing tools.  Support for <init>HTML</init> output comes from MathJax, and hence has accessible versions included in the output.</p>

            <p>Typical use would be within an <tag>me</tag> element, so starting with <c>\begin{CD}</c>.  Despite this being multi-line output, we have not chosen to integrate it within the more general <c>md/mrow</c> structure, but that decision can be revisited.</p>
        </subsection>

        <subsection>
            <title>Fill-In Blanks in Mathematics</title>

            <p>The other mix-in <init>XML</init> element is <tag>fillin</tag> with an optional <attr>characters</attr> attribute that takes an integer value.  You will get a thin horizontal line, on the baseline, which can suggest to a reader that they should supply something within the surrounding mathematics.  The attribute suggests the length of the line<mdash />experiment a bit, since it is not super-precise.</p>
        </subsection>

        <subsection>
            <title>Page Breaks for Tall Display Mathematics</title>

            <p>For print output, do nothing additional and <latex /> will do its best to break your display between lines.  You can turn this behavior off by setting the <attr>break</attr> attribute on the <tag>md</tag> or <tag>mdn</tag> to the value <c>no</c>.  Once you do this, you can then selectively allow a page break after a given <tag>mrow</tag> by setting the <attr>break</attr> attribute on the <tag>mrow</tag> to the value <c>yes</c>.</p>
        </subsection>

        <subsection>
            <title>Your Macros</title>

            <p>These go in the <tag>docinfo</tag> section, wrapped in a <tag>macros</tag><idx>macro</idx> element.  Keep them simple<mdash />one or two arguments, and one-line definitions.  This is not the place to be fancy, and not the place to try to end-run the structural aspects of <pretext />.  The idea is to define something like <c>\adjoint{A}</c> for the matrix <c>A</c> to be a superscript asterisk, and later you can change your mind and use a superscript dagger instead.  Keep in the spirit of <pretext /> and use readable, semantic macros.  For example, do not use <c>\a{A}</c> for the adjoint of <c>A</c>.</p>

            <p><pretext /> will use your macros correctly for print and for <init>HTML</init>, after erasing whitespace from the left margin, and stripping <latex /> comments.</p>

            <p>The name of your macros also cannot contain any numbers, otherwise MathJax will <q>silently</q> fail and may not read any subsequent macros you might have. This is important because <pretext/> will place custom macros for you at the end of your own, defined at <xref ref="mathematics-xml-characters"/>, to be used. Those would fail to be processed by MathJax if your own macros caused it to stop reading.</p>
        </subsection>

        <subsection xml:id="punctuation-display-math">
            <title>Punctuation After Display Math</title>

            <p>If a chunk of displayed math concludes a sentence, then the sentence-ending punctuation should appear at the conclusion of the display.  (And certainly not at the start of the first line after the display!)  But do not author the punctuation within the mathematics element, put it afterwards, where it logically belongs.</p>

            <p>More specifically, place a sentence-ending period (say) <em>immediately</em> after the closing of an <tag>me</tag>, <tag>men</tag>, <tag>md</tag>, or <tag>mdn</tag> element. <pretext /> will place the period in your output in the right place and in the right way.  (By using <latex />'s <c>\text{}</c> macro, if you are curious to know the details.)  Here is an example.  The <init>XML</init> source<cd>
                <cline>&lt;md&gt;</cline>
                <cline>    &lt;mrow&gt;(a+b)^2&lt;/mrow&gt;</cline>
                <cline>&lt;/md&gt;.  Now...</cline>
            </cd>will render as<md>
                <mrow>(a+b)^2</mrow>
            </md>.  Now<ellipsis /></p>

            <p>This all applies more generally to clause-ending punctuation, such as a comma.  Take notice of the requirement that the punctuation must be <em>immediately</em> after the closing tag of the math element, otherwise it will not migrate properly.  For example, do not interrupt the flow with whitespace, or an <init>XML</init> comment, or anything else.</p>

            <p>For inline mathematics (the <tag>m</tag> element) the same authoring principle holds, though you would likely do this naturally.  Author the punctuation <em>outside</em> the element, where it will remain.</p>

            <p>Here is a technical subtlety that will demonstrate some of the inner machinery of <pretext /> and our conversions.  In your work, locate a theorem that has some numbered display mathematics (<c>mdn</c>) which is at the end of a sentence, and which you have authored as described above.  In <init>HTML</init> output, test a cross-reference (<c>xref</c>) to the theorem and you will see the period for the end of the sentence at the end of the display, where it should be.  Now test a cross-reference (<c>xref</c>) to one of the numbered equations.  First, the knowl will contain the entire display, to provide context, but it also will not contain the period, since the rest of the sentence is not in the knowl and so the period is not necessary.</p>

            <note xml:id="authoring-math-punctuation">
                <title>Authoring Punctuation after Mathematics</title>

                <p><em>Always</em> follow the instructions in <xref ref="punctuation-display-math"/> about placing all punctuation following mathematics <em>after</em> the math element, not inside it.  <pretext/> will do the right thing for display math for you.  But furthermore, there are some special situations where the output format is not visual, such as braille or audio, where the placement of the punctuation is both different and important to not confuse <q>reader.</q>  You can help ensure your various outputs are of the highest quality by observing these sorts of details.</p>
            </note>
        </subsection>

        <subsection xml:id="math-list-items">
            <title>Lists of Mathematical Expressions</title>

            <p>It is common to make lists of expressions, equations, or identities.  Think of the definitions of trigonometric functions, a collection of antiderivatives, or a compendium of generating functions.</p>

            <p>In these situations, author a list item, <tag>li</tag>, within an <tag>ol</tag> or <tag>ul</tag>, by using <em>only</em> the necessary <tag>m</tag> element.  Do not use an intervening <tag>p</tag>, and do not include any adjacent text.  Whitespace is OK.  Then <pretext/> will add <latex/>'s <c>\displaystyle</c> command to improve the visual appearance of the mathematics, and so you do not need to.</p>

            <p>If you prefer to not have this behavior, insert an intervening <tag>p</tag>, and output will be identical, but without the <c>\displaystyle</c>.</p>

            <p>Note that <em>any</em> text, other than whitespace, outside the <tag>m</tag> tag will disable this feature, <em>including punctuation</em>. However, according to the Chicago Manual of Style, 14e, 6.127, <q>Items carry no closing punctuation unless they consist of complete sentences.</q> So that comma at the end of your equation probably doesn't belong there anyway.</p>
        </subsection>

        <subsection>
            <title>Additional Packages</title>

            <p>Generally, you cannot add additional packages for use within mathematics.  The exception is a package with support available optionally within MathJax.  And it must have the same name as its normal <latex /> version.  Then set a <c>docinfo/latex-preamble/package</c> element to be the common name of the package.   (The <c>cancel</c> package is one such example.)</p>

            <p>Then the supported macros of the package will be available with your mathematics elements, and you can use them within other macro definitions.  We do not guarantee the absence of conflicts with other packages in use, even if employed by <pretext />.  Nor do we support debugging such conflicts.</p>
        </subsection>

        <subsection>
            <title>Extras</title>

            <p>There are two existing additional options, which we might want to remove some day for technical reasons.  Macros from the <c>extpfeil</c> extensible arrows package are available by default, and an <c>\sfrac{}{}</c> macro is available for appealing inline <q>slanted fractions.</q></p>
        </subsection>
    </section>

    <section xml:id="topic-lists">
        <title>Lists</title>
        <idx>list</idx>
        <idx><h>list</h><h>label</h></idx>

        <introduction>
            <p>A <term>list</term> is an unusual construction, even if everybody knows exactly what one is.  We view the list itself as a container of various chunks of text, while those chunks of text are the <term>list items</term>.  Each item has a <term>label</term> to identify it (which is quite different from how <latex/> uses the term <q>label</q>).</p>

            <p>Markup and processing is complicated by the possibility of a list item containing a list, resulting in <term>nested lists</term>.  We simplify this problem by <em>requiring</em> that a list appear within a paragraph (<tag>p</tag>), see <xref ref="topic-structure-in-paragraph"/>.  One of the three exceptions is the possibility to place a list into a block that earns a caption and a number, using the <tag>list</tag> element, see <xref ref="topic-named-list"/>.</p>

            <p>The final subsection contains some examples that you may wish to consult as you read this section.</p>
        </introduction>

        <subsection>
            <title>Ordered, Unordered, Description Lists</title>

            <p>An <term>ordered list</term> has items with labels that are naturally ordered (usually numerically or alphabetically).  We borrow from <init>HTML</init>, and use the <tag>ol</tag> tag to construct an ordered list.  Some commentators suggest an ordered list should only be used when the order of the content is important.  So the steps in a recipe would belong in an ordered list, but the shopping list when you go to the store need not be an ordered list.</p>

            <p>An <term>unordered list</term> has items with labels that have no inherent order and so are usually symbols like circles, disks, squares, <etc/>  We borrow from <init>HTML</init>, and use the <tag>ul</tag> tag to construct an unordered list.</p>

            <p>A <term>description</term> list has items that have <em>short</em> pieces of text as their labels.  We borrow from <init>HTML</init>, and use the <tag>dl</tag> tag to construct a description list.</p>

            <p>Ordered lists are used as part of <tag>objectives</tag> (<xref provisional="topic-objectives" />) and exercises (<xref ref="topic-exercises-solutions" />).  Any of the three lists may occur inside the <tag>list</tag> element (below, <xref ref="topic-named-list" />).  Otherwise, a list must occur within a paragraph, <tag>p</tag>.  This means that to place a list within a list item of another list, the list item must contain a paragraph.</p>
        </subsection>

        <subsection>
            <title>List Labels</title>

            <p>Do nothing, and your ordered and unordered lists will get sensible default labels.  They are consistent in the following sense.  If your list has two items, and each of the two items contains a list, then these two lists will use the same type of label.</p>

            <p>For a description list, you author each label as part of each list item, as discussed below in the discussion of list items.</p>

            <p>If you want to change how an ordered list is labeled, then you use the <attr>label</attr> attribute on the <tag>ol</tag>, whose value is a <term>format code</term>.  This string contains one of five codes (a single character), which may be surrounded by other characters, excluding the five codes.  For example <c>label="(A)"</c> will produce uppercase letters wrapped in parentheses:  (A), (B), (C), <ellipsis />.  The extra formatting works well in a conversion to <latex />, but is not possible technically in a conversion to <init>HTML</init>, so it should be considered decorative, and not relied upon for meaning.  The formatting does not carry through to the numbers of list items in cross-references.</p>

            <p>If you want to change how an unordered list is labeled, then you use the <attr>label</attr> attribute on the <tag>ul</tag>, whose value is a <term>format code</term>.  This string contains one of three codes in the table below.  Then every item of the list will have that symbol as its label.</p>

            <sidebyside>
                <table>
                    <title>Ordered List Labels</title>
                    <tabular>
                        <row><cell>Code</cell><cell>Realization</cell></row>
                        <row><cell>1</cell><cell>Arabic numerals</cell></row>
                        <row><cell>a</cell><cell>Lowercase letters</cell></row>
                        <row><cell>i</cell><cell>Lowercase Roman numerals</cell></row>
                        <row><cell>A</cell><cell>Uppercase letters</cell></row>
                        <row><cell>I</cell><cell>Uppercase Roman numerals</cell></row>
                        <row><cell>0</cell><cell>Arabic numerals, from zero</cell></row>
                    </tabular>
                </table>
                <table>
                    <title>Unordered List Labels</title>
                    <tabular>
                        <row><cell>Code</cell><cell>Realization</cell></row>
                        <row><cell>disc</cell><cell>Filled small circle, aka a bullet</cell></row>
                        <row><cell>circle</cell><cell>Small circle</cell></row>
                        <row><cell>square</cell><cell>A square</cell></row>
                    </tabular>
                </table>
            </sidebyside>

            <p>Default label types are assigned to each level of nested lists in the order shown in the table, and cycle back to the top of the table if necessary, though zero-based Arabic numerals will be skipped for ordered lists.</p>

            <p>Start with the defaults, and experiment as needed.  See the examples below for some extreme (and unwise) customizations of labels.</p>

            <p>For a description list, possible labels are more varied than what you can express with an <init>XML</init> attribute.  So the list item must have a <tag>title</tag> element (see below).  This should be very short text, and may contain inline mathematics.  It is often rendered in bold, so be aware that some markup may get lost.  Perhaps for obvious reasons, do not include footnotes, cross-references, or display mathematics.  The <tag>dl</tag> element has a <attr>width</attr> attribute, with possible values <c>narrow</c>, <c>medium</c>, and <c>wide</c>.  The default is <c>narrow</c>.  This is a <em>hint</em> about how much text you have in these labels, and in certain presentations may make better use of horizontal space on a page.</p>
        </subsection>

        <subsection>
            <title>List Items</title>

            <p>So now you have a list all organized as a container.  What do you put in it?  List items, using the <tag>li</tag> tag, again borrowed from <init>HTML</init>, and independent of the type of list.</p>

            <p>A list item could be really simple, maybe just one or two words.  Then you can use, and conceptualize, an <tag>li</tag> element as not much different from a <tag>p</tag> element, and the rules about content are not much different.  Even several full sentences, with some intermediate displayed mathematics, is fine.</p>

            <p>But once you want two paragraphs in a list item, then you need to structure the contents of the item.  So a list item might have five paragraphs in it, requiring five <tag>p</tag> elements.  Notice that this is how you nest lists.  Make a list item, include a paragraph, then put the subsidiary list into the paragraph.  Indeed, this is the only way to nest lists.  A consequence of this is that the only way to have an unstructured list item is if it is a terminal item, like the leaf of a tree.</p>

            <p>Other items may be interspersed among the paragraphs of a list item, such as a chunk of verbatim text delimited by a <tag>pre</tag> tag.  But anything with a number, such as a <tag>figure</tag> or <tag>remark</tag> is banned, in part because the consequences for numbering and organization become too complicated.  Imagine a remark, and a paragraph of the remark has a list.  Fine so far.  But if the items of that list can again contain remarks, the possibilities become endless.  You should be able to include non-textual items, like an <tag>image</tag>, and work is underway to improve this.  You can use a <tag>sidebyside</tag> in a structured list item, which can in turn hold an <tag>image</tag>, <tag>tabular</tag>, or similar.  But you cannot place items in such a <tag>sidebyside</tag> that are numbered, so a <tag>figure</tag> or <tag>table</tag> is not possible.  A general rule is no numbered components in a list item.  Computational components, such as <tag>sage</tag> are also banned from list items due to the difficulty of converting them into electronic computational notebooks with a relatively flat structure.</p>

            <p>A list item of a description list must have a <tag>title</tag> element, to provide the text of the label.  Now that the list item has some structure, the remainder must also be structured, typically with some paragraphs, as discussed above.  In other words, the earlier option of employing an <tag>li</tag> element just like a <tag>p</tag> element is not available in a description list.  Further, given the complexity of presenting a description list, it can <em>only be a top-level list</em>.  It can contain the two other types nested within its list items.</p>

            <p>For ordered and unordered lists, you may optionally include a <tag>title</tag> when you have structured the <tag>li</tag>.  This will be rendered as a heading of sorts for the list item, though the only distinction might be a change to an italic or oblique font.  As an example, this might be a good way to author a Frequently Asked Questions (<init>FAQ</init>).</p>

            <p>Note that a list item holding <em>only</em> an <tag>m</tag> element will get special treatment.  See <xref ref="math-list-items"/>.</p>
        </subsection>

        <subsection xml:id="topic-list-item-target">
            <title>Cross-References to List Content</title>

            <p>Note that a list is a container, so it cannot be the target of a cross-reference, and so the three types of lists cannot have an <attr>xml:id</attr> attribute.  But you may well be able to point at some other structure (<eg />, a <tag>remark</tag>) with a paragraph containing a list of interest.  If this seems overly restrictive, read below about named lists.</p>

            <p>By contrast, a list item, <tag>li</tag>, is not a container, and does contain content.  Further, a list item of an ordered list has a label that is natural text for a cross-reference.  So in this situation, the list item can have an <attr>xml:id</attr> attribute.  But note that the <q>number</q> of a list item of an ordered list, which is nested inside a list item of an unordered list, is not defined, so a cross-reference by number can fail.</p>

            <p>The <q>number</q> of a list item, mostly for the purposes of a cross-reference, is the concatenation of all of the individual labels in the containing lists, outermost first.  For example, from the example lists below, the list item with content <q>Walleye</q> has number <xref ref="walleye" text="local" />.  These are indivisible, there is no way to get a component, excepting leading subsequences obtained by using an <attr>xml:id</attr> on a containing list item.  Note that the format codes never become part of the number.</p>
        </subsection>

        <subsection>
            <title>Lists in Columns</title>
            <idx><h>list</h><h>columns</h></idx>

            <p>You can control the number of columns used to layout an ordered or unordered list (but not a description list).  On the <tag>ol</tag> or <tag>ul</tag> use a <attr>cols</attr> attribute with values <c>2</c> through <c>6</c>.  (<c>1</c> is the default.)</p>

            <p>We do not yet (2018-03-28) have enough technical confidence to allow an author to specify a row-major order versus a column-major order for the layout.  So understand that this is can be an implementation choice for a particular conversion, and can vary across implementations.  If this is critical to conveying <em>meaning</em>, and not an aesthetic preference, then maybe consider using a <tag>table</tag> or <tag>tabular</tag> (<xref ref="topic-tabular" />).</p>

            <note>
                <title>Use Only a Few Columns for Lists</title>

                <p>Anything more than three columns tends to get very crowded horizontally.  Think twice about using more than that, and realize that six columns should be a ridiculously generous upper limit, and not a promise of good behavior in final output.</p>
            </note>
        </subsection>

        <subsection xml:id="topic-named-list">
            <title>Named Lists</title>
            <idx><h>list</h><h>named</h></idx>
            <idx><h>named list</h></idx>
            <idx><h>list</h><h>anonymous</h></idx>
            <idx><h>anonymous list</h></idx>

            <p>As mentioned above, it is not possible to have a list be the target of a cross-reference.  Should an entire list be <em>so important</em> that you need to point to it from elsewhere, then make it a <term>named list</term> by wrapping it in the <tag>list</tag> tag.</p>

            <p>This element can begin with an optional <tag>introduction</tag>, then has a single, required list, which may be any of the three types.  It concludes with an optional <tag>conclusion</tag>.  It can have an <attr>xml:id</attr> attribute, which in a way is the whole <foreign xml:lang="fr-FR">raison d'être</foreign> for this construction.  It will be numbered when rendered, and so also requires a <tag>title</tag>.  You might think of this as similar to a <tag>table</tag><mdash/>bits of information organized spatially.</p>

            <p>Since this element associates a number, title, to an entire list, we call it a <q>named list</q>.  What should we call a list that is authored within a paragraph and cannot be the target of a cross-reference?  We call it an <term>anonymous list</term> when we want to make the distinction.</p>
        </subsection>

        <subsection>
            <title>Exceptional Lists</title>

            <p>We use the tags for lists in a few situations outside of anonymous lists inside paragraphs and named lists.  These include the items within an objectives, subparts of an exercise, and within panels of a side-by-side.  See those topics to learn about subtle differences in use.</p>
        </subsection>

        <subsection>
            <title>Examples of Lists</title>

                <p>To illustrate this section, we offer three too-elaborate examples.  Take these as compact examples of what is possible, and not best practice in your writing.  We also use these to illustrate cross-references to list items, see <xref ref="topic-cross-reference-list-item" />.</p>

                <p>We have a paragraph that begins with anonymous list of species that live in water (maybe partially), which necessarily is placed inside a paragraph.  The roman numerals purposely do not have any extra adornment in the <latex /> version (but may for <init>HTML</init> output).
                <ol label="1)">
                    <li>
                        <p>Amphibians
                            <ol label="a.">
                                <li>Frog</li>
                                <li>Salamander</li>
                                <li>Newt</li>
                                <li>Toad</li>
                            </ol>
                        </p>
                    </li>
                    <li>
                        <p>Freshwater Sport Fish
                            <ol label="I">
                                <li xml:id="walleye">Walleye</li>
                                <li>Bass</li>
                                <li xml:id="anon-list-target">
                                    <title>Exquisite Fish</title>
                                    <p>Trout</p>
                                </li>
                            </ol>
                        </p>
                    </li>
                    <li>
                        <p>Saltwater Sport Fish
                            <ol label="(A)">
                                <li>Salmon</li>
                                <li>Halibut</li>
                                <li>Marlin</li>
                            </ol>
                        </p>
                    </li>
                </ol>
                Within the same paragraph, we transition to an unordered, two-column, list of some germs:
                <ul cols="2">
                    <li>
                        <p>Bacteria
                            <ul>
                                <li><taxon>Staphylococci</taxon></li>
                                <li><taxon>Streptococci</taxon></li>
                                <li><taxon>Salmonella</taxon></li>
                            </ul>
                        </p>
                    </li>
                    <li>
                        <p>Viruses
                            <ul>
                                <li><taxon>Varicellovirus</taxon></li>
                                <li><taxon>Orthopoxvirus</taxon></li>
                            </ul>
                        </p>
                    </li>
                </ul>
                This sentence concludes our (small) paragraph on small and large organisms.</p>

                <p>A named list, only to test cross-references.</p>

                <list xml:id="named-list">
                    <title>A two-deep ordered list</title>
                    <ol label="A:">
                        <li>
                            <p>
                                <ol label="i.">
                                    <li>A and i</li>
                                    <li>A and ii</li>
                                </ol>
                            </p>
                        </li>
                        <li>
                            <p>
                                <ol label="(a)">
                                    <li>B and a</li>
                                    <li>B and b</li>
                                    <li xml:id="named-list-target">
                                        <title>A Test Title</title>
                                        <p>B and c</p>
                                    </li>
                                </ol>
                            </p>
                        </li>
                        <li>
                            <p>
                                <ol label="&lt;I&gt;">
                                    <li>C and I</li>
                                    <li>C and II</li>
                                    <li>C and III</li>
                                </ol>
                            </p>
                        </li>
                    </ol>
                </list>

                <p>An example of a description list, anonymously in a paragraph.
                <dl width="narrow">
                    <li>
                        <title>Red</title>
                        <p>The color of the sun at sunset.</p>
                    </li>
                    <li>
                        <title>Blue</title>
                        <p>The color of a clear sky.</p>
                    </li>
                    <li>
                        <title>Aqua</title>
                        <p>The color of shallow tropical waters.</p>
                    </li>
                    <li xml:id="description-list-math-title">
                        <title><m>x^2 + y^2</m></title>
                        <p>Definitely not a color</p>
                    </li>
                </dl></p>
        </subsection>

        <conclusion>
            <remark>
                <title>Best Practice</title>

                <p>Lists are a very attractive device.  Hopefully the discussion above has convinced you that they are more complicated than they first appear.  Think carefully before using one, and consider if some other structure (<tag>paragraphs</tag>, <tag>sidebyside</tag>, a subdivision) might do a better job of organizing and communicating your meaning.  And if a list is really necessary, consider if it should be named or anonymous, heavily-nested or nearly-flat, with columns, or with long or short content in the items.  Cross-references <em>from</em> the items of a list <em>to</em> more complicated structures is another device that works well.</p>
            </remark>
        </conclusion>

    </section>

    <section xml:id="topic-exercises-solutions">
        <title>Exercises and their Solutions</title>

        <introduction>
            <p>As described in <xref ref="overview-exercises"/> an <tag>exercise</tag> can be placed in many different locations, and a <tag>project</tag> has similar features.  It is critical to understand that you want to author any hints, answers, or solutions immediately following the statement of an exercise.  If your <pretext/> source is public, and you would like to keep some aspects of the solutions private, then read the <pubtitle>Publisher's Guide</pubtitle> for some practical advice.  See the <pubtitle>Publisher's Guide</pubtitle> as well for information on creating a standalone <pubtitle>Solutions Guide</pubtitle>.  We concentrate here on techniques for controlling visibility and location of the components of exercises within your primary output.</p>
        </introduction>

        <subsection>
            <title>Exercises, Original Versions</title>

            <p>A <tag>hint</tag> to an <tag>exercise</tag> renders nicely in a knowl, right below the exercise statement, as part of a conversion to <init>HTML</init>.  For a conversion to <latex/>/<init>PDF</init>/print, you might wish to display a hint, visibly, as part of the exercise, or you may wish to park the hint in a <pubtitle>Hints to Exercises</pubtitle> division in the back matter.  To control visibility of the components of exercises (and projects) there are fifteen switches you can use as string parameters on the command line, or in an extra <init>XSL</init> file.  Each takes values of <c>yes</c> or <c>no</c>.</p>

            <table>
                <title>Exercise Component Switches, Original Versions</title>

                <tabular>
                    <row>
                        <cell><c>exercise.inline.hint</c></cell>
                        <cell><c>exercise.inline.answer</c></cell>
                    </row>
                    <row>
                        <cell><c>exercise.inline.solution</c></cell>
                        <cell/>
                    </row>
                    <row>
                        <cell><c>exercise.divisional.hint</c></cell>
                        <cell><c>exercise.divisional.answer</c></cell>
                    </row>
                    <row>
                        <cell><c>exercise.divisional.solution</c></cell>
                        <cell/>
                    </row>
                    <row>
                        <cell><c>exercise.worksheet.hint</c></cell>
                        <cell><c>exercise.worksheet.answer</c></cell>
                    </row>
                    <row>
                        <cell><c>exercise.worksheet.solution</c></cell>
                        <cell/>
                    </row>
                    <row>
                        <cell><c>exercise.reading.hint</c></cell>
                        <cell><c>exercise.reading.answer</c></cell>
                    </row>
                    <row>
                        <cell><c>exercise.reading.solution</c></cell>
                        <cell/>
                    </row>
                    <row>
                        <cell><c>project.hint</c></cell>
                        <cell><c>project.answer</c></cell>
                    </row>
                    <row>
                        <cell><c>project.solution</c></cell>
                        <cell/>
                    </row>
                </tabular>
            </table>

        </subsection>

        <subsection>
            <title>Exercises, Solutions Versions</title>

            <p>Exercises, and their components may be duplicated easily, to provide a back matter appendix with solutions, or within each division.  For example, you can easily create an end-of-chapter division with solutions to every inline exercise throughout the chapter and solutions to all the divisional exercises from each section of the chapter.</p>

            <p>The <tag>solutions</tag> element will create an entire division, semi-automatically.  You can provide a <tag>title</tag>, an <tag>introduction</tag>, and <tag>conclusion</tag>.  The remaining content is statements, hints, answers, and solutions to exercises (and projects).</p>

            <p>If <tag>solutions</tag> is a child of <tag>backmatter</tag>, then an appendix will be generated, and covering <tag>exercise</tag> from the entire <tag>book</tag> or <tag>article</tag>.  If <tag>solutions</tag> is a child of a division, then a new subdivision is created and the scope is all <tag>exercise</tag> for the division.  So, for example, a <tag>solutions</tag> placed inside a <tag>chapter</tag> will render as a division that looks like a <tag>section</tag> and will include components of all the exercises (at any level) contained within the <tag>chapter</tag>.</p>

            <p>An optional attribute is <attr>scope</attr>, whose value is the <attr>xml:id</attr> of a division.  Then it is this division which is scanned for exercises and their solutions (rather than defaulting to the enclosing parent of the <tag>solutions</tag>).  This allows for much greater flexibility.  For a simple example, suppose a <tag>chapter</tag> contains two <tag>exercises</tag>, and you want to have two <tag>solutions</tag> within the chapter, each covering just one of the <tag>exercises</tag>.  This can be accomplished with <attr>scope</attr>, and you can arrange the four divisions (two <tag>exercises</tag> and two <tag>solutions</tag>) however you wish within the chapter.</p>

            <p>An author filters the types of exercises, and their components, through attributes of the <tag>solutions</tag> element.  For example<cd>
                <cline>reading="hint answer"</cline>
            </cd>would cause every <tag>exercise</tag> within each <tag>reading-questions</tag> to have its <tag>hint</tag> and <tag>answer</tag> displayed, but not its <tag>statement</tag> nor its <tag>solution</tag>.  These are the attribute names and the possible values.</p>

            <table>
                <title>Attributes (left) and Values (right) for <tag>solutions</tag> element</title>

                <tabular>
                    <row>
                        <cell><c>inline</c></cell>
                        <cell><c>statement</c></cell>
                    </row>
                    <row>
                        <cell><c>divisional</c></cell>
                        <cell><c>hint</c></cell>
                    </row>
                    <row>
                        <cell><c>reading</c></cell>
                        <cell><c>answer</c></cell>
                    </row>
                    <row>
                        <cell><c>worksheet</c></cell>
                        <cell><c>solution</c></cell>
                    </row>
                    <row>
                        <cell><c>project</c></cell>
                        <cell/>
                    </row>
                </tabular>
            </table>

            <p>So, <pretext/> source like<cd>
                <cline>&lt;section&gt;</cline>
                <cline>  &lt;title&gt;Tropical Bird of Paradise&lt;title&gt;</cline>
                <cline>  ...</cline>
                <cline>  &lt;solutions worksheet="hint solution" project="hint solution"&gt;</cline>
                <cline>    &lt;title&gt;Hints and Solutions to Worksheets and Projects&lt;title&gt;</cline>
                <cline>  &lt;/solutions&gt;</cline>
                <cline>&lt;/section&gt;</cline>
            </cd>would generate an entire subsection with hints and solutions to every worksheet and every project, located anywhere (including in subsections and subsubsections) in the section on Birds of Paradise.</p>
        </subsection>
    </section>

    <section xml:id="topic-images">
        <title>Images</title>
        <idx>image</idx>

        <subsection xml:id="topic-images-raster">
            <title>Raster Images</title>

            <p>A <term>raster image</term><idx>raster image</idx><idx><h>image</h><h>raster image</h></idx> is an image described pixel-by-pixel, with different colors and intensities.  Photographs are good examples.  Common formats are Portable Network Graphics (PNG) and Joint Photographic Experts Group (JPEG, JPG), which will both work with <c>pdflatex</c> and modern browsers.  JPEG are a good choice for photographs since they are compressed on the assumption they will be viewed by a human, while PNG is a lossless format and good for line art, diagrams and similar images (if you do not have vector graphics versions, see below).</p>

            <p>To use these images, you simply provide the filename, with a relative path.  A subdirectory such as <c>images</c> is a good choice for a place to put them.  It is your responsibility to place these images where the <latex /> output will find them or where the HTML output will find them.  The XML would look like:</p>

            <pre>
            <![CDATA[<image source="images/crocodiles.png" width="50%" />]]>
            </pre>

            <p>Typically you would wrap this in a <tag>figure</tag> that might have an <attr>xml:id</attr> attribute for cross-references, with or without a caption.  There is no <attr>height</attr> attribute, so the aspect ratio of your image is your responsibility outside of <pretext />.  The <attr>width</attr> attribute is a percentage of the available width of the text (outside of a <tag>sidebyside</tag> panel).  Default width is typically 90%.</p>

            <p>You may also provide a <tag>description</tag> which will aid accessibility for electronic formats.  Keep such readers in mind and provide as much description as possible.  Keep the markup simple, since this will typically migrate to an HTML attribute that cannot contain any structure.  Be careful to avoid double-quotes.  For example,</p>

            <pre>
            <![CDATA[
            <image source="images/crocodiles.jpeg" width="50%">
                <description>Five crocodiles partially submerged in the shallows.</description>
            </image>
            ]]>
            </pre>
        </subsection>

        <subsection xml:id="topic-images-vector">
            <title>Vector Graphics</title>

            <p>An image is a <term>vector graphic</term><idx>vector graphic</idx><idx><h>image</h><h>vector graphic</h></idx> if the file describes the geometric shapes that constitute the image.  So a simple diagram would be a good candidate, but a photograph would not.  Popular formats are Portable Document Format (PDF) and Scalable Vector Graphics (SVG).  You will get the best results with PDF images in <latex /> output and SVG images for HTML.  The principal advantage of these formats is that they scale (big or small) smoothly, along with fonts.  This is critical when you cannot predict the screen size for a reader of an electronic version.</p>

            <p>Unless you describe these images with a language (see next subsection), you are responsible for providing the PDF and SVG versions.  The <c>pdf2svg</c> utility is very useful if you have PDF images only.  To use these images, you simply follow the instructions above, but do not include a file extension.  This alerts the conversion to use the best possible choice.  So presuming we had files <c>images/toad-life-cycle.pdf</c> and <c>images/toad-life-cycle.svg</c>, an example would be:</p>

            <pre>
            <![CDATA[
            <image source="images/toad-life-cycle" width="85%">
                <description>Diagram of the four stages of a toad's life.</description>
            </image>
            ]]>
            </pre>

            <p>Vector graphics images can be created with source code in different languages (<xref ref="topic-images-source"/>) or with applications, such as Inkscape (<xref ref="processing-images-inkscape"/>).</p>
        </subsection>

        <subsection xml:id="topic-images-source">
            <title>(*) Images Described by Source Code</title>

            <introduction>
                <p>To be written once elements and tags solidify, see sample article for examples.</p>
            </introduction>

            <subsubsection>
                <title>(*) Asymptote</title>

                <p>Two temporary notes:<ol>
                    <li>The <c>pretext</c> script will run the Asymptote executable with the <c>-norpc</c> switch.  So <q>rotatable</q> 3D images rendered by the proprietary viewer, Adobe Acrobat, are not created.</li>

                    <li>The <c>pretext</c> script can request the Asymptote executable to create <init>SVG</init> images supplying the <c>-svg</c> switch.  These may be unsuitable, especially for 3D images.  An alternative is to produce <init>PDF</init> images and use a utility like <c>pdf2svg</c> to convert to <init>SVG</init>.</li>
                </ol></p>
            </subsubsection>
        </subsection>

        <subsection>
            <title>Image Formats</title>

            <note>
                <title>Preferred Image Formats</title>

                <p>The best formats for images, in order, are:<dl width="narrow">
                    <li>
                        <title>SVG</title>
                        <p>Vector graphics format ideal for <init>HTML</init> output formats.  Scalable and compact.  Converts to other formats, such as <init>PDF</init>.</p>
                    </li>

                    <li>
                        <title>PDF</title>
                        <p>Vector graphics format ideal for print and <init>PDF</init> output formats.  Good tools exist to convert back-and-forth between <init>SVG</init> and <init>PDF</init>.</p>
                    </li>

                    <li>
                        <title>PNG</title>
                        <p>Lossless and compressible format for raster images.  May be used for both <init>HTML</init> and <init>PDF</init> outputs.</p>
                    </li>

                    <li>
                        <title>JPEG</title>
                        <p>Compressed lossy format which works well for photographs.  May be used for both <init>HTML</init> and <init>PDF</init> outputs.  <init>PNG</init> should be preferred when there is a choice, except in the case of a photograph.  Converting between these formats is unlikely to be an improvement.</p>
                    </li>
                </dl></p>
            </note>
        </subsection>

        <subsection xml:id="topic-images-archive">
            <title>Image Archives</title>

            <p>As an instructor, you might want to recycle images from a text for a classroom presentation, a project handout, or an examination question.  As an author, you can elect to make images files available through links in the HTML version, and it is easy and flexible to produce those links automatically.</p>

            <p>First, it is your responsibility to manufacture the files.  For making different formats, the <c>pretext</c> script can sometimes help (<xref ref="pretext-script" />).  The Image Magick <c>convert</c> command is a quick way to make raster images in different formats, while the <c>pdf2svg</c> executable is good for converting vector graphics <init>PDF</init>s into <init>SVG</init>s.  Also, to make this easy to specify, different versions of the same image must have identical paths and names, other than the suffixes.  Finally, the case and spelling of the suffix in your <pretext/> source must match the filename (<eg /> <c>jpg</c> versus <c>JPEG</c>).  OK, those are the ground rules.</p>

            <p>For links for a single image, add the <attr>archive</attr> attribute to the <tag>image</tag> element, such as<cd>
                <cline>&lt;image  ...  archive="pdf svg"&gt;</cline>
            </cd>to get two links for a single image.</p>

            <p>To have every single image receive an identical collection of links, in <c>docinfo/images</c> place an <tag>archive</tag> element whose content is the space-separated list of suffixes/formats.<cd>
                <cline>&lt;archive&gt;png JPEG tex ods&lt;/archive&gt;</cline>
            </cd>will provide four links on every image, including a link to an OpenDocument spreadsheet.</p>

            <p>For a collection of images that is contained within some portion of your document, you can place an <attr>xml:id</attr> on the enclosing element and then in <c>docinfo/images</c> place<cd>
                <cline>&lt;archive from="the-xml-id-on-the-portion"&gt;svg png&lt;/archive&gt;</cline>
            </cd>to get two links on every image <em>only</em> in that portion (chapter, subsection, side-by-side, <etc />).  The <attr>from</attr> attribute is meant to suggest the root of a subtree of your hierarchical document.  If you use this, then <em>do not</em> use the global form that does not have <attr>from</attr>.</p>

            <p>You may accumulate several of the above semi-global semi-local forms in succession.  An image will receive links according to the last <tag>archive</tag> whose <attr>from</attr> subtree contains the image.  So the strategy is to place general, large subtree, specifications early, and use refined, smaller subtree specifications later.  For example,<cd>
                <cline>&lt;archive from="the-xml:id-on-a-chapter"&gt;svg png&lt;/archive&gt;</cline>
                <cline>&lt;archive from="the-xml:id-on-the-introduction"&gt;jpeg&lt;/archive&gt;</cline>
                <cline>&lt;archive from="the-xml:id-on-a-section-within" /&gt;</cline>
            </cd>will put two links on every image of a chapter, but just one link on images in the introduction, and no links at all on every image image within one specific section.  Again, do not mix with the global form.  You can use the root document node (<eg /> <tag>book</tag>) for <attr>from</attr> to obtain a global treatment, but it is unnecessary (and inefficient) to provide empty content for the root node as first in the list<mdash />the same effect is the default behavior.</p>

            <p>Notice that this facility does not restrict you to providing files of the same image, or even images at all.  You could choose to make data files available for each data plot you provide, as spreadsheets, or text files, or whatever you have, or whatever you think your readers need.</p>

            <p>Finally, <q>archive</q> may be a bit of a misnomer, since there is no historical aspect to any of this.  Maybe <q>repository</q> would be more accurate.  Though for a history textbook, it might be a perfect name.</p>
        </subsection>
    </section>

    <section xml:id="topic-tabular">
        <title>(*) Tables and Tabulars</title>

        <!-- Reprise:  <title>Bully Pulpit: Vertical Rules in Tables</title> -->

        <p>This section needs much more work.</p>

        <p>Note that tables may be constructed using the <url href="http://www.latex-tables.com/"><latex /> Complex Table Editor</url> tool online at <c>latex-tables.com</c>and then exported in <pretext /> syntax.</p>
    </section>

    <section xml:id="topic-program-listings">
        <title>(*) Program Listings</title>
        <p></p>
    </section>

    <section xml:id="topic-sage">
        <title>Sage</title>

        <p>Until we can expand this section, get some ideas from <xref ref="overview-sage"/>.  We will also collect a few items here, to be cleaned-up later.</p>

        <p>For online output formats, sometimes the output of a Sage command can be overwhelming, and a bit complicated to parse.  Many objects in Sage also have a <latex/> representation, which can be used to create a superior output format (for some purposes).  Begin a cell with the <q>magic</q>:<cd>
            <cline>%display latex</cline>
        </cd>Experiment with the following Sage code on the next line<cd>
            <cline>integral(x^9*cos(x), x)</cline>
        </cd>Boom!  Very nice.  Try replacing <c>latex</c> with <c>None</c>, <c>plain</c>, <c>ascii_art</c>, or <c>unicode_art</c>.</p>
    </section>

    <section xml:id="topic-sidebyside">
        <title>Side-by-Side Panels</title>
        <idx>side-by-side panel</idx>

        <p>Documents, pages, and screens tend to run vertically from top to bottom.  But sometimes you want to control elements laid out horizontally.  A <tag>sidebyside</tag> is designed to play this role.  It is best thought of as a container, enclosing <term>panels</term><idx><h>panel</h><see>side-by-side panel</see></idx><idx><h>side-by-side panel</h><h>panel</h></idx>, and specifying their layout.  Examples include three images, all the same size and equally spaced.  Or a poem occupying two-thirds of the available width, with commentary adjacent in the remaining third.  Or an image next to a table.  But the most common use may be a single image (with no caption, and hence no number), whose width and horizontal placement are controlled by the layout.</p>

        <p>See the schema for the exact items that are allowed in a <tag>sidebyside</tag>.  To author, just place these items within <tag>sidebyside</tag> in the order they should appear, left to right.  Then you add attributes to the <tag>sidebyside</tag> element to affect placement.</p>

        <p>Instead of placing a <attr>width</attr> attribute on each item, instead place this on the <tag>sidebyside</tag> element.  A single <attr>width</attr> will use the same value for each panel.  For different widths, use the plural form <attr>widths</attr> and provide a space-separated list of percentages.  The default is to give each panel the same width, and as large as possible, which will result in no gap between panels.</p>

        <p>The margins can be specified with the <attr>margins</attr> attribute, which if given as a single percentage will be used for both the left and right sides.  You may also specify asymmetric left and right margins with two percentages, separated by a space, in the same attribute.  An additional option is to use the value <c>auto</c> which will set each margin to half of the (common) space between panels.  This is also the default.  In the case of a single panel, the left margin, right margin, and panel width should all add up to 100%.</p>

        <p>Once the widths and margins are known, any additional available width is used to create a common distance separating panels.  (Which is not possible when there is just a single panel.)</p>

        <p>Independent of horizontal positioning, individual panels may be aligned vertically.  The attribute is <attr>valigns</attr> and its value is a space-separated list of <c>top</c>, <c>middle</c>, and <c>bottom</c>.  The singular version, <attr>valign</attr>, is used to give every panel the same alignment, using the same keywords.  The default is to have every panel at the <c>top</c>.</p>

        <p>We could give lots of examples, but instead it might be best to just experiment.  Error-checking is very robust, so it is hard to get it too wrong.  OK, we will do just one to help explain.  Suppose a <tag>sidebyside</tag> contains three panels and has layout parameters given by<cd>
            <cline>&lt;sidebyside widths="20% 40% 25%" margins="auto" valign="middle"&gt;</cline>
        </cd>Then there will be 15% of the width left to space out the panels.  The two gaps are each 5% of the width, and the remaining 5% is split between the margins at 2.5% each.  And the vertical midlines of each panel are all aligned.</p>

        <p>For a single panel with no attributes, the panel will occupy 100% of the width.  A single panel with a specified width will get equal (auto) margins, resulting in a centered panel.</p>

        <p>Captioned items<idx><h>side-by-side panel</h><h>panel</h><h>captioned item</h></idx> as panels deserve special mention.  These will continue to be numbered consecutively, with one exception.  If you place a <tag>sidebyside</tag> inside of a <tag>figure</tag>, then the <tag>figure</tag> will be numbered, and the captioned items inside the <tag>sidebyside</tag> will be <term>sub-captioned</term><idx><h>side-by-side panel</h><h>panel</h><h>sub-captioned item</h></idx>.  In other words, the second captioned panel of a <tag>sidebyside</tag> inside Figure 5.2 would be referenced as Figure 5.2.b.</p>

        <p>An <tag>sbsgroup</tag> (<q>side-by-side group</q>) contains only <tag>sidebyside</tag>, which are displayed in order.  However, all of the layout parameters allowed on a <tag>sidebyside</tag> may be used on an <tag>sbsgroup</tag>.  This might allow a collection of fifteen images to be laid out in three rows of five images each, with widths and spacing identical for each row because the parameters are specified on the <tag>sbsgroup</tag> element.  In this way, simple grids can be constructed.  Note that any layout parameters given on an enclosed <tag>sidebyside</tag> will take priority over those given on the <tag>sbsgroup</tag>.  Captioning behavior extends to an entire <tag>sbsgroup</tag>.</p>

        <p>Since <tag>sidebyside</tag> and <tag>sbsgroup</tag> are containers they cannot be referenced and so do not have an <attr>xml:id</attr>.  However, you can reference their individual contents if they are captioned, and you can reference an enclosing <tag>figure</tag>.</p>

        <p>Generally, a <tag>sidebyside</tag> or <tag>sbsgroup</tag> can be placed as a child of a division, or within various blocks, such as <tag>proof</tag> for example.  See the schema for (evolving) specifics.</p>

        <p>It should be clear now that a <tag>sidebyside</tag> is more about presentation than most <pretext /> elements, though there is some semantic information being conveyed by grouping the panels with one another.</p>
    </section>

    <section xml:id="topic-front-matter">
        <title>(*) Front Matter</title>

         <introduction>
            <p></p>
        </introduction>

        <subsection>
            <title>(*) Title Page</title>

            <p></p>
        </subsection>

        <subsection>
            <title>(*) Abstract</title>

            <p></p>
        </subsection>

        <subsection>
            <title>(*) Colophon</title>

            <p></p>
        </subsection>

        <subsection>
            <title>(*) Biography</title>

            <p></p>
        </subsection>

        <subsection>
            <title>(*) Dedication</title>

            <p></p>
        </subsection>

        <subsection>
            <title>(*) Acknowledgement</title>

            <p></p>
        </subsection>

        <subsection>
            <title>(*) Prefaces</title>

            <p></p>
        </subsection>

    </section>

    <section xml:id="topic-back-matter">
        <title>(*) Back Matter</title>

        <introduction>
            <p></p>
        </introduction>

        <subsection>
            <title>(*) Appendices</title>

            <p></p>
        </subsection>

        <subsection>
            <title>(*) Glossary</title>

            <p></p>
        </subsection>

        <subsection>
            <title>(*) References</title>

            <p></p>
        </subsection>

        <subsection>
            <title>(*) Automatic Lists</title>

            <p></p>
        </subsection>

        <subsection>
            <title>(*) Solutions</title>

            <p></p>
        </subsection>

        <subsection>
            <title>(*) Index</title>

            <p></p>
        </subsection>

        <subsection>
            <title>(*) Colophon</title>

            <p></p>
        </subsection>
    </section>

    <section xml:id="topic-index">
        <title>Index</title>

        <introduction>
            <p>Continuing our basic discussion from <xref ref="overview-index-notation"/>, we discuss some details of making and using index entries.  We will begin with how you <em>procedurally</em> author an index entry with <pretext/> syntax, and then move to general principles about how to use these constructions to create an effective index.  So these two subsections are intimately linked.</p>
        </introduction>

        <subsection>
            <title>Syntax and Placement of Index Entries</title>

            <note>
                <title>Capitalization of Index Entries</title>

                <p>The headings (entries) of an index are authored entirely in lower-case, unless it is a proper noun (name, place, <etc/>) which would normally be capitalized in the middle of a sentence.  We are not able to provide any enforcement of this advice, nor any assistance.  It is the author's responsibility to provide quality source material in this regard.  We do sort entries so that an entry with an initial capital letter arrives at the right location in the index.</p>
            </note>

            <p><em>Where</em> you place an <tag>idx</tag> entry is critical.  With <latex/> output, you will get the traditional page number as a locator in your index.  With <init>HTML</init> output we can be more careful.  We will look to see which sort of structure contains the <tag>idx</tag>.  Maybe it is an <tag>example</tag> or a <tag>subsection</tag>.  If so, the index will contain a locator that is a knowl of the example, or a link to the subsection.  The distinction is the size of the object, we do not knowl divisions.  The exception is a paragraph (<tag>p</tag>) that is a child of a division, and then the locator is a knowl of the entire paragraph.  Remember that a knowl contains an <q>in-context</q> link which can take the reader to the original location of the content in the knowl.</p>

            <p>A lot happens in a <pretext/> paragraph, especially when producing <init>HTML</init>.  Sometimes an <tag>idx</tag> can get in the way.  Our recommendation is to put <tag>idx</tag> entries <em>between</em> sentences, and not at the start or end of the paragraph.  They can be authored with each on their own line.  If you do not need the specificity of a paragraph, then locate the appropriate structure and author the <tag>idx</tag> right after the <tag>title</tag> (or where one would be).</p>

            <p>A <term>cross-reference</term> in an index is a pointer to another index entry.
                <idx><h>cross-reference</h><h>index</h></idx>
                <idx><h>index</h><h>cross-reference</h></idx>
            These are rendered as <q>See</q> and <q>See also.</q>  You can add <tag>see</tag> and <tag>seealso</tag> elements within an <tag>idx</tag>, so long as it is structured with <tag>h</tag>.  Then it is placed after the last <tag>h</tag>.  A <q>see</q> cross-reference is a direct pointer to another entry in the index.  It cannot have a locator as well.  When you build the <init>HTML</init> output, we will recognize this situation and produce a warning.  A <q>see also</q> cross-reference is an additional pointer, and so it must have a locator to go with it (you will author two <tag>idx</tag> with identical headings, the first without a <tag>seealso</tag> to create the locator, the second with the <tag>seealso</tag> to create the cross-reference.  Again, when you build the <init>HTML</init> output, we will recognize a <tag>seealso</tag> without a locator and produce a warning.</p>

            <p>Follow these directions and <pretext/> will format cross-references for you, in the style suggested by the <pubtitle>Chicago Manual of Style</pubtitle> (<acro>CMOS</acro>) for <init>HTML</init> output, and according to <latex/>'s style for print and <init>PDF</init>.</p>

            <p>(2019-03-04) We have consciously not said anything specific about what to place inside a <tag>see</tag> or <tag>seealso</tag> element.  At this writing, you need to supply the text.  Of course, this is error-prone and you will need to consult <acro>CMOS</acro> for formatting guidance.  But we have plans to do this the <pretext/> way.  First, the <c>ref/xml:id</c> mechanism will be used to automatically create the correct text for the cross-reference, both content and format.  Second, these will become live links in electronic formats.</p>

            <p>Certain index entries do not sort very well, especially entries that begin with mathematical notation.  Our first advice is to avoid this situation, but sometimes it is necessary.  The <attr>sortby</attr> attribute on an <tag>h</tag> element can contain simple text that will be used to override the content shown to the reader during the sorting of the index.</p>
        </subsection>

        <subsection xml:id="topic-index-advice">
            <title>Advice on Indexing</title>
            <idx><h>index</h><h>advice on</h></idx>

            <p>
              An index is a navigational aid for your readers (and you).
              We do not assume that a reader remembers where anything is,
              nor that the Table of Contents is a replacement for part of the index.
              Some readers of the index may not have even read your book yet,
              and are looking to get a feel for the range of topics as part of the decision of whether or not to read your book at all,
              or if it will be useful to have.
              It should be comprehensive, including everything substantive.</p>

            <p>
              Indexing is a job for a skilled professional, and most authors produce poor indexes.
              The tips in this section will help you avoid the most common pitfalls.
              We follow recommendations from the <pubtitle>Chicago Manual of Style</pubtitle>
              (specifically Chapter 18, 15th Edition),
              <pubtitle>Indexing for Editors and Authors: A Practical Guide to Understanding Indexes</pubtitle>
              <xref ref="indexing-guide"/>,
              and Pilar Wyman of <url href="http://www.wymanindexing.com/">Wyman Indexing</url><fn><c>www.wymanindexing.com</c></fn>.
            </p>

            <paragraphs><title>Terminology</title>
              <p>The basic element of an index is an <term>entry</term>, which consists of
                 a piece of information and its <term>locator</term>.  For example:
                 </p>
                 <pre>
                     normal subgroup,  37
                 </pre>
                 <p>
                 is an entry indicating that information about <q>normal subgroup</q>
                 can be found on page 37.
                 Indexes are (usually) organized alphabetically, with a
                 <term>main heading</term>
                 aligned with the left margin, and progressively indented <term>subheading</term>s below
                 the main heading.
              </p>

              <p>Often it is desirable to place the same locator under more than one heading,
                known as <term>double posting</term>.  For example, a desirable addition to the
                sample entry above is
                </p>
                <pre>
                subgroup,  28
                   normal,  37 .
                </pre>
                <p>
                An alternative to double posting is <term>cross referencing</term>, using
                <em>see</em> and <em>see also</em>.  Typically cross references are used to
                avoid repeating a large number of entries, or to direct the reader to related topics.
              </p>

              <p>An index may start with a <term>headnote</term> giving advice about using the index.
                Typically a headnote is not necessary unless the index has some unusual features.
              </p>
            </paragraphs>

            <paragraphs><title>Basic principles</title>
              <p>The purpose of an index is to point the reader to information.
                 Point to, not repeat.
                 For example, acronyms should be indexed at the location where they are defined,
                 not at every place they appear, and it is not necessary to define the acronym within the index.
                 People and places should be indexed when information is given about them,
                 not every time they are mentioned.
              </p>

              <p>A good index has multiple ways to find the same information.  Being redundant is desirable,
                 because it increases the chance the reader finds what they seek in the first place they look.
              </p>

              <p>Indexing is best done after the text has been written.  Adding index entries while writing
                 the text may seem to be a labor-saving device, but if you are not an experienced indexer,
                 those entries will only be a small fraction of the final index.
              </p>

              <p>Topics should be indexed in multiple ways.  If a term is defined, you should also think
                 of other words the reader might search for.  For example, you may define <q>limit point</q>
                 and consistently use only that term, but an index entry for <q>accumulation point</q> with a
                 <q><em>see</em> limit point</q> locator would be appropriate.
              </p>
              <p>Use <term>disambiguation</term> to distinguish identical terms with different meanings.
                For example
                </p>
                <pre>
                    isomorphism (of groups),  55
                    isomorphism (of rings),  123
                </pre>
                <p>
                Both of those entries should also be double posted under the main headings of <q>group</q>
                and <q>ring</q>, respectively.  No disambiguation is needed for those entries.
              </p>
              <p>
                Singular or plural forms of nouns should reflect the language in the text.
                So if a chapter is titled <articletitle>Mammals</articletitle>,
                then use a heading <c>mammals</c>.
                And if the chapter is titled <articletitle>The Mammal Class</articletitle>,
                then use a heading <c>mammal</c>.
              </p>
              <p>
                An index is typically as long as 5% of the main text.
                With many figures, or other structures creating additional whitespace,
                the percentage may be lower.  If your primary output is online,
                length may not be an issue.  For print, there are strategies for pruning an index.
              </p>
              <p>
                Once you have finished the text, and then finished the index,
                it is time for a thorough review of the index.
                There will be places for consolidation, often due to using variants of particular words.
                You may wish to remove subheadings which all appear within the range given in the heading.
                For example,
              </p>
              <pre>
                fish, 204-212
                   bass, 208-209
                   salmon, 210
                   trout, 207
              </pre>
              <p>
                could have all of its subheadings removed, especially if space is an issue.
              </p>
            </paragraphs>

            <paragraphs><title>Common pitfalls</title>
              <p>Sometimes it takes less than one second to determine that an index is poor.
                 If a quick glance reveals that the index consists mostly of main headings
                 with very few subheadings, then few readers will find it to be useful.
                 Double posting, which may mean more than literally two entries with the same locator,
                 will help readers find what they are looking for.  Most of those entries will
                 be in subheadings.
              </p>

              <p>Another instantly recognizable problem is too many locators in one entry.  This entry
              </p>
              <pre>
                  asymptote,  37, 48
              </pre>
              <p>
              is probably fine.  But once you have three or more locators in an entry, then
              your index may be improved by adding some subheadings.  If the locators in the above
              example refer separately to <q>horizontal</q> and <q>vertical</q>, then probably two subheadings
              would be more useful than two undifferentiated locators in one entry.
              </p>

              <p>An additional problem which can be seen at a glance if you know what to look for,
              is the absence of any main headings with a large number of subheadings.  On almost
              any subject there are topics which are addressed repeatedly.  This should be
              reflected in the structure of the index.  For example, in a group theory textbook
              there should be several entries under <q>group, examples</q>.  In an introductory
              calculus book the index should help the reader locate the derivative of many
              different elementary functions.
              </p>

              <p>
                Index headings should be nouns, not adjectives.  An adjective may be important,
                and you should use it, but it should not be the entire content of a heading
                since it is not an idea by itself.  But it may be a subheading. For example,
                suppose you have a paragraph on <q>highland sheep.</q>
                Then <em>both</em> of the following should appear in your index,
                since a reader might consult both locations.
              </p>
              <pre>
                highland sheep, 45
              </pre>
              <pre>
                sheep
                   highland, 45
              </pre>


<!-- Discuss pointing to entire section/chapter -->

<!-- singular plural -->


            </paragraphs>
        </subsection>
    </section>


    <section xml:id="topic-notation">
        <title>(*) Notation</title>
        <p>TODO</p>
    </section>

    <section xml:id="topic-automatic-lists">
        <title>(*) Automatic Lists</title>
        <p></p>
    </section>

    <section xml:id="topic-url">
        <title><init>URL</init>s and External References</title>
        <idx>URL</idx>
        <idx>external reference</idx>

        <subsection>
            <title><init>URL</init>s to External Web Pages</title>

            <p>The <tag>url</tag><idx>URL</idx> tag can be used to point to external items (as distinct from other internal portions of your current document, which is accomplished with the <tage>xref</tage> element, <xref ref="overview-cross-references" />).  It always needs a value for the <attr>href</attr> attribute, most likely a <init>URL</init>.  Most of this time, this will point to some resource available on the Internet but it could be a file on the system hosting your document, perhaps using a relative address (but see the rest of this section for some cautions).  Here are three scenarios:<ul>
                <li><p>The <tag>url</tag> element is empty.  Then the value of the <attr>href</attr> is also used for the visible text of the link, verbatim, and usually in a monospace font.  Use <term>percent-encoding</term><idx>percent encoding</idx><idx><h>percent encoding</h><seealso>URL encoding</seealso></idx> (aka <term>URL encoding</term><idx><h>URL</h><h>URL encoding</h></idx>) for the <attr>href</attr> attribute to include special characters, such as spaces.</p></li>

                <li><p>The <tag>url</tag> element has content.  Now the content should be authored as you would any other text in a sentence.  Potentially problematic characters, such as a tilde should be authored with provided empty elements (as distinct from being authored literally in the <attr>href</attr> attribute).</p></li>

                <li><p>The <tag>url</tag> element has content, but you want this content to look like a <init>URL</init>.  Use the <tag>c</tag> element around the content, and follow the rules for verbatim text.  I do this often for simple <init>URL</init>s that point to the top level of a website.  The <attr>href</attr> is a complete <init>URL</init> like <c>https://pretextbook.org/</c> but for content I use a less-imposing reader-friendly version like <c>pretextbook.org</c>.</p></li>
            </ul></p>

            <p>You can place an external reference into a <tag>title</tag> element, but conversions may choose to simply render it as text, and not as an active link.</p>

            <p>For <latex /> output it gets quite tricky to handle all the various meanings of certain escape characters in <init>URL</init>s in more complicated contexts (such as tables, footnotes, and titles), so there may be some special cases where the formatting is off or you get an error when compiling your <latex />.  We handle most of these situations, but we always appreciate reports of missed cases.</p>
        </subsection>


        <subsection xml:id="topic-url-characters">
            <title>Characters in <init>URL</init>s</title>
            <idx><h>URL</h><h>query string</h></idx>

            <p>A <init>URL</init> can have a <term>query string</term>, which has a list of parameters following a question-mark.  The parameters are separated by ampersands (&amp;), which will need to be escaped, so as to not confuse the <init>XML</init> processor.  So use <c>&amp;amp;</c> anywhere the ampersand <em>character</em> is necessary, such as a <attr>source</attr> attribute, or a monospace version of a <init>URL</init> achieved with a <tag>c</tag> element.  Also, the question-mark character should <em>not</em> be <init>URL</init>-encoded (<c>%3F</c>) (despite advice just given above), so if necessary edit it to be the actual character.  General advice about exceptional characters in <init>XML</init> source can be found in <xref ref="overview-exceptional-characters"/>.</p>
        </subsection>

        <subsection xml:id="topic-external-data-file">
            <title><init>URL</init>s to External Data Files</title>

            <p>The <tag>url</tag> element can be used to make data files available to your reader.  Consider the example of a spreadsheet containing a large data set that a reader needs to analyze as part of an exercise.  Here are our recommendations on how to accomplish this:<ul>
                <li><p>If the file is hosted on some server unassociated with your project, and does not have a license compatible with your project, then just set the <attr>href</attr> to the complete address.  Be sure to include enough of the address for the reader of a a print version to be able to type in the <init>URL</init>, either as the content of the <tag>url</tag> or in close vicinity.</p></li>

                <li><p>If you authored the spreadsheet, or you are allowed to legally copy and distribute it, then place it on your server where you host your book project.  Then do as above and use the full <init>URL</init> for the <attr>href</attr> attribute, with a visible version available for <init>PDF</init> and print versions.</p></li>

                <li><p>If you have control over the placement of the file, you can host it on your server, and use a <init>URL</init> relative to the location of your <init>HTML</init>, <init>PDF</init>, or other files that comprise your document.  This might be a good choice if your book will be posted many places and you can give it to others as an archive, like a <c>*.zip</c> file.  It is a bad idea if a reader downloads a PDF without the data file following along and remaining in the same relative location.  It is an impossible idea if your document gets printed on paper and there is no idea what a relative <init>URL</init> means and there is not even a link to click on.</p></li>
            </ul></p>

            <p>Consider your audience and think about how much guidance they need about using context menus or helper/viewer applications to make use of the file formats you are providing. This advice may be different depending on the type of files and the types of output for your document.</p>
        </subsection>
    </section>

    <section xml:id="topic-video">
        <title>Video</title>
        <idx>video</idx>

        <introduction>
            <p>A video is a natural way to enhance a document when rendered in an electronic format, such as <init>HTML</init> web pages.  It might be additional information that is hard to communicate with text (marine invertebrates swimming), a lecture or presentation that augments your text, or even some artistic work, such as a symphony legally hosted on YouTube, when you could never hope to get copyright clearance yourself.</p>

            <p><pretext /> supports videos you own and distribute with your source, videos shared openly on the Internet via stable <init>URL</init>s, and videos available on YouTube.  Go straight to to the end of this section to see how easy it is to incorporate a YouTube video.</p>

            <p>HTML5 web browsers are able to play video files in three formats, summarized in the following table.</p>

            <table xml:id="table-video-formats">
                <title>HTML5 video formats</title>

                <tabular>
                    <row>
                        <cell>Format</cell>
                        <cell>Extension</cell>
                        <cell>Reference</cell>
                    </row>
                    <row>
                        <cell>Ogg, Theora</cell>
                        <cell><c>.ogg</c></cell>
                        <cell>Free and open, <url href="https://en.wikipedia.org/wiki/Ogg">Wikipedia</url></cell>
                    </row>
                    <row>
                        <cell>WebM</cell>
                        <cell><c>.webm</c></cell>
                        <cell>Royalty-free, <url href="https://en.wikipedia.org/wiki/WebM">Wikipedia</url></cell>
                    </row>
                    <row>
                        <cell>MPEG-4</cell>
                        <cell><c>.mp4</c></cell>
                        <cell>Patent encumbered, <url href="https://en.wikipedia.org/wiki/MPEG-4_Part_14">Wikipedia</url></cell>
                    </row>
                </tabular>
            </table>
        </introduction>

        <subsection>
            <title>Video Element</title>

            <p>The <tag>video</tag><idx>video</idx> element is used to embed a video in output formed from <init>HTML</init>.  Subsections below describe the different ways to indicate the source of the video.  The video may be placed inside a <tag>figure</tag> or can be a panel of a <tag>sidebyside</tag>.  The former will have a caption, be numbered, and hence can be the target of a cross-reference (<tag>xref</tag>).  The latter is anonymous, but allows for horizontal layout, and combinations with other panels.</p>

            <p>Size is controlled by a <attr>width</attr> attribute expressed as a percentage (on the <tag>video</tag> element when used in a figure, or as part of the <tag>sidebyside</tag> layout parameters).  Height is controlled by giving the <term>aspect ratio</term><idx>aspect ratio</idx><idx><h>aspect ratio</h><seealso>video</seealso></idx><idx><h>video</h><h>aspect ratio</h></idx> with the <attr>aspect</attr> attribute on the <tag>video</tag> element.  The value can be a ratio expressed like <c>4:3</c> or a decimal number computed from the width divided by the height, such as <c>1.333</c>.  The default for videos is a 16:9 aspect ratio, which is very common, so you may not need to specify this attribute.</p>

            <p>Options include specifying a <attr>start</attr> and an <attr>end</attr> in seconds as integers (no units) if you only want to highlight a key portion of a video.  The <attr>play-at</attr> attribute can take the following values<dl width="narrow">
                <li>
                    <title><c>embed</c></title>
                    <p>Play in place (the default action).</p>
                </li>
                <li>
                    <title><c>popout</c></title>
                    <p>Play in new window or tab, at 150% width.</p>
                </li>
                <li>
                    <title><c>select</c></title>
                    <p>Provide the reader the choice of the other two options.</p>
                </li>
            </dl>In an educational setting, sometimes the preview images provided by YouTube can be distracting, or for an author-provided video you may wish to provide your own preview image.  The <attr>preview</attr> attribute can take on the following values<dl width="narrow">
                <li>
                    <title><c>generic</c></title>
                    <p><pretext /> supplies a Play-button image.</p>
                </li>
                <li>
                    <title><c>default</c></title>
                    <p>Whatever the video playback provides.  This is identical to simply not including <attr>attribute</attr> at all</p>
                </li>
                <li>
                    <title>Path to an image file</title>
                    <p>Typically, this will be a relative path, starting with <c>images/</c>.  This image will be used as preview for the online version and the print version.</p>
                </li>
            </dl></p>
        </subsection>

        <subsection>
            <title>Author-Provided Videos</title>

            <p>If you own and possess your video content, then you can distribute it with your <pretext /> source, and it can be hosted as part of your <init>HTML</init> output.  Then the <attr>source</attr> should be a relative file name that points to the file containing the video.  If you are able to provide more than one of the three formats in <xref ref="table-video-formats" />, then you can provide the filename <em>without an extension</em>.  If a browser cannot play one format, it may be able to play another.  <pretext /> will write the code to make that happen, preferentially in the order of the table (more open formats first!).  In other words, you can provide files in more than one format and increase the likelihood that a reader's browser will find a format it can playback.</p>
        </subsection>

        <subsection>
            <title>Network-Hosted Videos</title>

            <p>If a video is shared openly on the Internet, you can simply provide the full <init>URL</init> for the <attr>source</attr> attribute.  All the other attributes are the same as for the author-provided case, above.  Read <xref ref="topic-url-characters" /> for some considerations when authoring a <init>URL</init>, since there are a few gotchas.</p>

            <p>You can frequently discover the <init>URL</init> of a video by first playing it, and then using a context menu (<eg /> via a right-click) to reveal an option to copy the video's location.  However, note that there are various techniques sites use to make such a <init>URL</init> temporary, or otherwise unusable.  So do some research about potential uses and test carefully.  Our example below is provided from a United States government site.</p>

            <figure>
                <caption>Sea Hares, Flower Garden Banks National Marine Sanctuary</caption>
                <video xml:id="video-sea-hares" source="https://flowergarden.noaa.gov/image_library/video/seaharew.mp4" width="80%" preview="images/sea-hare.jpg" />
            </figure>
        </subsection>

        <subsection>
            <title>YouTube Videos</title>

            <p>For a video hosted at YouTube, find the 11-character identification string in the address of a video you are viewing.  It will look something like <c>hAzdgU_kpGo</c>.  Then, instead of the <attr>source</attr> attribute, simply provide this identification string as the <attr>youtube</attr> attribute, such as<cd>
                <cline>youtube="hAzdgU_kpGo"</cline>
            </cd>That's it.  All of the options above are then implemented and realized with YouTube's embedded player.</p>

            <p>This can be a great way to incorporate popular or artistic content, legally, which might be difficult or costly to acquire through copyright clearance.</p>

            <figure>
                <caption>The Eagles, <articletitle>Hotel California</articletitle></caption>
                <video xml:id="video-hotel-california" youtube="YW4dzWE1SUs" width="60%" start="12" preview="images/hotel-california.jpg" />
            </figure>

            <figure>
                <caption>Mozart, Piano Sonata in C Major, K. 545, II</caption>
                <video xml:id="mozart-piano-sonata" youtube="1Yv_AINhVn4" width="80%" preview="images/mozart-piano.jpg" />
            </figure>

            <p>The <c>pretext</c> script (<xref ref="pretext-script" />) may be used to download the provided preview images for YouTube videos (only).  Filenames will be formed from the <attr>xml:id</attr> of the <tag>video</tag> element.  These will be used in static versions of output, such as print.  Once custom preview images are implemented for author-hosted video, their static representation will improve.</p>

            <p>Additionally, a YouTube <term>playlist</term> can be included in one of two ways. You may set the <attr>youtube</attr> attribute to be a space-separated list of several video IDs (an <q>itemized</q> playlist). Alternatively, you may set the <attr>youtubeplaylist</attr> attribute to a YouTube playlist ID (a <q>named</q> playlist). At present, a named playlist will not get a thumbnail image from Youtube, and either the <q>generic</q> thumbnail will be used or you can supply your own <attr>preview</attr>.</p>

            <figure>
                <caption>YouTube Playlist</caption>
                <video youtubeplaylist="PLGRecdYLYDNdX5NEkS3KH-ZtCqc2f8lJ_" />
            </figure>

            <p>Make a feature-request if a scheme similar to the one for YouTube, but for some other video-hosting service, would be useful for your project.</p>
        </subsection>
    </section>

    <section xml:id="topic-music">
        <title>(*) Music</title>

        <p>TODO: Scholarly works discussing music may use notes and chords in text, and displays of sheet music are easily supported. (TODO: add some discussion to <xref ref="overview" />.)</p>

    </section>

    <section xml:id="topic-units-measure">
        <title>(*) Units of Measure</title>
        <p></p>
    </section>

    <section xml:id="topic-unicode">
        <title>Unicode Characters</title>
        <idx>Unicode characters</idx>

        <introduction>

            <p><pretext /> supports (and encourages) the use of Unicode characters.  Here are some relevant comments.<ul>
                <li><p>Unicode characters will migrate well to any output format based on <init>HTML</init>.  Most browsers will have a variety of fonts with glyphs to realize these characters.</p></li>

                <li><p><latex /> will not always behave as smoothly.  For openers, you definitely will want to use the <c>xelatex</c> engine to build a <init>PDF</init>.  Then you need to be sure your system has a font with the necessary characters and you make the font known to <c>xelatex</c>.  We are working out the details of the best way to accomplish this.</p></li>

                <li><p>How do you get a Unicode character into your source?  In part this is specific to your operating system and editor, so is outside the scope of this guide, but we have hints below for popular operating systems.</p></li>

                <li><p>You can always place a Unicode character in your source using <init>XML</init> syntax.  The first thing an <init>XML</init> parser will do is convert this syntax into a character.  The number of the <c>SECTION SIGN</c> in hexadecimal is <c>A7</c>, so the syntax <c>&amp;#xA7;</c> is identical to the  character &#xA7;.  Of course, this will get tedious fast.</p></li>

                <li><p>The <url href="https://www.cs.tut.fi/~jkorpela/fui.html8">Full Unicode Input</url> utility at <c>www.cs.tut.fi/~jkorpela/fui.html8</c> will allow you to specify a chunk of 256 consecutive Unicode numbers and then you can click on characters to make a string of several or many.  You can cut/paste these into your source, or convert the whole lot to <init>XML</init> syntax all at once.</p></li>

                <li><p>Unicode characters have standardized names.  You can find these, and more information, including font support, at the Unicode section of <url href="http://www.fileformat.info/info/unicode/">FileFormat.info</url>, <c>www.fileformat.info/info/unicode/</c>.  If you are struggling to find a specific character, then using this site's name in a search will often quickly locate what you need.  Be sure to experiment with the test pages there for browser and font support (including checking your local configuration).</p></li>

                <li>
                    <p><alert>Warning</alert>: do not use Unicode characters as a way to get mathematical symbols (that is delegated to our use of <latex /> syntax).  And do not use Unicode when we have provided an empty element for a character.  These empty elements are conveniences, which spare you from looking up Unicode numbers and make your source more readable.  We also sometimes fine-tune these characters in ways that are not possible if you embed them as Unicode.  An example is <c>&lt;times /&gt;</c>, for use outside of a strictly mathematical setting:  <q>I bought a 2<times />4 at the lumberyard.</q></p>
                </li>
            </ul></p>
        </introduction>

        <subsection>
            <title>Unicode Support in OSX</title>

            <p>Mitch Keller reports on 2017-01-12 a way to get some popular characters with OSX.  Use the Keyboard preference pane under System Preferences. In there, you can enable <cd>
                <cline>Show Keyboard, Emoji, &amp; Symbols Viewers in menu bar</cline>
            </cd>Once you activate the keyboard viewer, you get a keyboard on your screen. When you hold down <c>opt</c>, it shows you what other symbol you would get if you push <c>opt+letter</c>. For instance, <c>opt+w</c> gives an upper-case Greek sigma and <c>opt+=</c> gives a not-equals sign (neither of which we can handle when processing the latex version of this guide). To get ä, you type <c>opt+u</c> and then hit <c>a</c>. This is illustrated by the keys for diacritical marks being highlighted in orange while holding opt.  The shift key can have an effect to produce variations of some characters, such as quote marks (dumb versus smart).</p>
        </subsection>

        <subsection>
            <title>(*) Unicode Support in Linux</title>
            <p></p>
        </subsection>

        <subsection>
            <title>(*) Unicode Support in Windows</title>
            <p></p>
        </subsection>
    </section>

    <section xml:id="topic-doctest-sage">
        <title>(*) Testing Sage Examples</title>
        <p></p>
    </section>

    <section xml:id="topic-xinclude">
        <title>Xinclude Modularization</title>

        <p>The <c>xinclude</c><idx><c>xinclude</c></idx> mechanism is not part of <pretext />, <foreign>per se</foreign>.  It is of some use for organizing your authoring, so you do not have mammoth files open in your text editor.  As discussed in <xref ref="processing-modular" /> there is very little value in modularizing so much that you have many very small files, and also almost no benefit whatsoever to using directory structure to duplicate the inherent tree-like structure of <init>XML</init>.  Many small files, or deeply-nested directories, seem to be of little help and can cause more headaches than they are worth.</p>

        <p>The <c>xinclude</c> mechanism automatically introduces a <attr>xml:base</attr> attribute, which we need to account for in the RELAX-NG schema (<xref ref="schema" />).  So we limit which <pretext /> elements may be the root element of an included file.  The rough, general rule is that if an element <em>can</em> have a title, then it can be the root element of an included file.  So in particular each of the divisions (<tag>chapter</tag>, <tag>section</tag>, <etc />) is a candidate.</p>

        <p>One special exception to this restriction is the use of text files, containing absolutely no markup at all.  Two good examples are the <tag>input</tag> child of a <tag>program</tag> or the <tag>latex-image</tag> element used to describe an <tag>image</tag> by source code that <latex /> understands.</p>

        <p>In both cases you can put the text content of these elements in a separate file, use the <attr>href</attr> attribute of <tag>xi:include</tag> to point to the file, and then the twist is to set the <attr>parse</attr> attribute to the value <c>text</c>.  This has two general benefits.  First, you now <em>cannot</em> have any <init>XML</init> in the file, so you do not have to have a single root element for the file (and so the schema imposes no restrictions).  Second, you do not need to escape any problematic characters like ampersands and angle brackets (<xref ref="topic-verbatim-literal" />), nor use the misunderstood <init>CDATA</init> mechanism.</p>

        <p>Additionally, in the case of <tag>latex-image</tag> you can park unsightly code away in files so you do not have to look at it, or you can create a small driver <latex /> program to test each one, or even better, you may want to use the same image more than once (maybe in different figures?) and can just include it repeatedly, while only ever editing the single copy.</p>

        <p>Finally, the <tag>input</tag> and <tag>output</tag> children of <tag>program</tag>, <tag>sage</tag>, and <tag>console</tag> are also candidates for this device.  In particular, you may want to have the code for a program in its own file where you can test it easily with an interpreter or compiler.  There is one gotcha.  If you were to put a newline between <tag>input</tag> and <tag>xi:include</tag> there is the very real potential of unwanted whitespace bleeding into your <pretext /> output.  Our suggested remedy uses an example from Bob Plantz.  Convert</p>

        <pre>
        &lt;program language="c">
            &lt;input>
                &lt;xi:include parse="text" href="intAndFloat.c"/>
            &lt;/input>
        &lt;/program>
        </pre>

        <p>to</p>

        <pre>
        &lt;program language="c">
            &lt;input>&lt;xi:include parse="text" href="intAndFloat.c"/>&lt;/input>
        &lt;/program>
        </pre>

        <p>There are some fancy <init>XSLT</init> tricks you can employ to use more complicated content repeatedly.  Your source will be less portable, and we do not support or recommend these techniques.  But if you want a go anyway, see hints at <url href="http://www.sagehill.net/docbookxsl/DuplicateIDs.html"><c>www.sagehill.net/docbookxsl/DuplicateIDs.html</c></url>.  Note the reliance on <c>xpointer()</c>, and that the final technique is restricted to DocBook, a different <init>XML</init> vocabulary.</p>
    </section>

    <section xml:id="topic-localization">
        <title>Localization</title>
        <idx>localization</idx>
        <idx>internationalization</idx>

        <introduction>
          <p>We briefly introduced <pretext/> support for authoring documents in multiple languages in <xref ref="overview-localization"/>.  Here are some more details.</p>

          <p>First, authors are encouraged to write the actual text of their documents using the language of their choice.  See <xref ref="topic-unicode"/> for details. For <init>HTML</init> this should be straightforward, for other output formats (especially <init>PDF</init>) the publisher may need to have various fonts installed (see <xref ref="latex-fonts"/>).</p>

          <p>Localization for <pretext/> itself is restricted to the items <pretext/> names for you.  This includes things like <tag>theorem</tag>, but also items such as the labels of navigation buttons.  To have this in your language requires two things, described in the following subsections.</p>
        </introduction>

        <subsection>
          <title>Localization Files</title>

          <p>The prerequisite is that a localization file for your language exists.  A number are already supported, such as <c>es-ES</c> (Peninsular Spanish), <c>pt-BR</c> (Brazilian Portuguese), and <c>hu-HU</c> (Hungarian/Magyar); the default language code is <c>en-US</c> (American English).  For a up-to-date list of which languages are available, see <url href="https://github.com/rbeezer/mathbook/tree/dev/xsl/localizations">the localization stylesheet folder on GitHub</url><fn><c>xsl/localizations</c></fn>.</p>

          <p>If such a file does not exist, you will need to create one or find someone to help you do so. Brief instructions for this <url href="https://github.com/rbeezer/mathbook/blob/dev/xsl/localizations/README.md">are in the README file</url><fn><c>xsl/localizations/README.md</c></fn> for this directory.  These instructions suggest using the <c>en-US</c> file as a template and as a source of more detailed instructions.  We highly encourage anyone who creates such a file to contribute it to our growing list of localization stylesheets; see <xref ref="contributing"/> in the Appendices for details.</p>
        </subsection>

        <subsection>
          <title>Changing the Language</title>

          <p>In order to use a localization, simply place <c>xml:lang="es-ES"</c> (with language code as appropriate for your project) as an attribute on your <tag>pretext</tag> element.  For example:<cd>
            <cline>&lt;pretext xml:lang="hu-HU"/></cline>
          </cd>Then you can process your source as usual.  Be sure to check that the translations look appropriate in your output.</p>

          <p>While processing your source, you may encounter warnings for missing translations, like this:<cd>
            <cline>MBX:WARNING: could not translate string with id</cline>
            <cline>"hypothesis" into language for code "pt-PT"</cline>
          </cd>In this case, the localization stylesheet is missing a translation for this tag, and it will remain in <c>en-US</c>.  We welcome contributions to keep stylesheets fully complete; see <xref ref="contributing"/> for details.</p>
        </subsection>

    </section>

    <section xml:id="topic-accessibility">
        <title>Accessibility</title>
        <idx>accessibilty</idx>
        <idx>web accessibilty</idx>

        <p>Continuing our discussion from <xref ref="overview-accessibility" /> we begin by listing features of our conversion to <init>HTML</init> which happen automatically.  These come in part from the recommendations at the <url href="https://www.w3.org/WAI/standards-guidelines/wcag/">Web Content Accessibility Guidelines</url><fn><c>www.w3.org/WAI/standards-guidelines/wcag/</c></fn> of the Web Accessibility Initiative.<dl width="narrow">
            <li>
                <title>HTML</title>
                <p>Wherever possible we supply <init>HTML</init> elements and attributes that will be interpreted sensibly by a screen reader in the absence of the visual styling provided by <init>CSS</init>.  This means we are cognizant of the role of headings (<c>h1</c> through <c>h6</c>), provide HTML that passes validation checks, and so on.  Employing attributes from the <url href="https://www.w3.org/WAI/standards-guidelines/aria/">Accessible Rich Internet Applications</url><fn><c>www.w3.org/WAI/standards-guidelines/aria/</c></fn> suite of web standards (<init>ARIA</init>) will go a long way to improving accessibility.  This work is in-progress as of 2018-05-31.</p>
            </li>
            <li>
                <title>Mathematics</title>
                <idx><h>accessibility</h><h>mathematics</h></idx>
                <idx><h>web accessibility</h><h>mathematics</h></idx>
                <p>MathJax (<url href="https://www.mathjax.org/"><c>mathjax.org</c></url>) is the JavaScript library we use to render mathematics within the <init>HTML</init> output.  It provides extensive capabilities for screen readers to render the mathematics audibly, and by default your project's output is configured to take advantage of these features.  We refer the reader to the MathJax documentation of <url href="http://docs.mathjax.org/en/latest/misc/accessibility-features.html">Accessibility Features</url><fn><c>docs.mathjax.org/en/latest/misc/accessibility-features.html</c></fn> for details.  But here is a simple experiment you can do yourself right now to simulate how a blind reader could experience mathematics with the combination of <pretext />, MathJax, and a screen reader.<ol>
                    <li>Find some moderately complicated mathematics, such as in the <q>Mathematics</q> section of the sample article, or your own project, or the sample from MathJax copied below.</li>
                    <li>Bring up the context menu on that display (a mouse right-click for most).</li>
                    <li>Turn on the <c>Accessibility > Explorer > Activate</c> menu item.  The page will reload, and the <c>Explorer</c> menu item will earn many more menu items.  This setting is reasonably sticky, so you should not have to do this repeatedly.  Having this on will incur some processing time as part of each page load, so you may want to turn it off later.</li>
                    <li>Turn on the <c>Accessibility > Explorer > Speech Output</c> menu item.</li>
                    <li>Turn on the <c>Accessibility > Explorer > Subtitles</c> menu item.  (If <c>Subtitles</c> is <q>greyed out</q>, try toggling <c>Speech Output</c>.)</li>
                    <li><c>TAB</c> until some mathematics is given focus (a discrete border appears).</li>
                    <li><c>SHIFT-SPACE</c> will activate exploration of the mathematics with the Explorer.  A subtitle, with an aural rendering of the mathematics, will appear below the display.</li>
                    <li>You can navigate (explore) the expression tree with the up, down, left, and right arrow keys.  The subtitles will change as you do this.</li>
                </ol></p>
                <p>From the MathJax demonstration page, Maxwell's equations for practice:<idx>Maxwell's equations</idx><md>
                    <mrow>\nabla \times \vec{\mathbf{B}} -\, \frac1c\, \frac{\partial\vec{\mathbf{E}}}{\partial t} &amp; = \frac{4\pi}{c}\vec{\mathbf{j}}</mrow>
                    <mrow>\nabla \cdot \vec{\mathbf{E}} &amp; = 4 \pi \rho</mrow>
                    <mrow>\nabla \times \vec{\mathbf{E}}\, +\, \frac1c\, \frac{\partial\vec{\mathbf{B}}}{\partial t} &amp; = \vec{\mathbf{0}}</mrow>
                    <mrow>\nabla \cdot \vec{\mathbf{B}} &amp; = 0</mrow>
                </md><notation><usage>\nabla</usage><description>gradient operator</description></notation></p>

            </li>

            <li>
                <title>3D Images</title>
                <p>Asymptote is a language for describing 2D and 3D images, which we support as much as possible.  The 3D images produced are rotatable for exploration via a mouse or finger.  For those with motor limitations, the images may also be manipulated with keyboard controls.  (Many assistive technologies rely on, or emulate, keyboards.)</p>
            </li>

            <li>
                <title>Skip to Main Content</title>
                <p>Repeatedly pressing the <c>Tab</c> key will move a reader from one location to the next in a web document.  Since your Table of Contents in the left sidebar is a series of many links, a reader will need to tab through <em>all</em> of these to eventually reach the interesting content on a page.</p>

                <p>However, we support a common device.  The first link on every page is hidden from all readers, but an initial <c>Tab</c> will present a link labeled <c>Skip to Main Content</c> which when executed will take the reader past the Table of Contents and to the start of the content at the top of the page.</p>
            </li>

            <li>
                <title>Links</title>
                <p>Hyperlinks have colors, styles (such as underlining), and effects (such as mouse hover) which are consistent with <init>WCAG</init> recommendations.  Rather than being underlined by default, we instead use high-contrast color choices.</p>
            </li>

            <li>
                <title>Colors</title>
                <p>We are sensitive to the fact that some readers have difficulty distinguishing between certain colors.  So we do our best to distinguish text, or other elements, without relying exclusively on color.  For example, the <tag>delete</tag> and <tag>insert</tag> elements may render text with strike-through and underlining (respectively) to show the distinction.</p>
            </li>
        </dl></p>

        <p>Here are features which are provided, but require your participation as the author.<dl width="narrow">
            <li>
                <title>Image Description</title>
                <p>Images you author or supply will be invisible to some readers.  Within every <tag>image</tag> element you can use a <tag>description</tag> element.  The content here will migrate to places like the <init>HTML</init> <attr>alt</attr> attribute to be picked up by screen readers.</p>

                <p>Make the content very expressive and detailed, but not overly verbose.  Also, do not use any markup whatsoever, just simple characters, and avoid quotation marks.  You can learn more at sites such as the one provided by the Web Accessibility Initiative (<init>WAI</init>) at <url href="https://www.w3.org/WAI/fundamentals/accessibility-principles/#alternatives">Text alternatives for non-text content</url>.</p>

                <p>We cannot do this one for you, this is for the author only.  But we can give you the tools do it as easily and as correctly as possible.</p>
            </li>

            <li>
                <title>Image Formats</title>
                <p>University offices that provide services for students with disabilities are often interested in the images themselves from a text, as standalone files.  For example, they might be able to manufacture tactile versions.  You could use the <c>pretext</c> script to produce a variety of different formats and bundle these up in a single archive file for distribution at your book's website.  Or you can make each image available through adjacent links placed automatically.  We call these <q>image archives.</q>  See <xref ref="topic-images-archive" />.</p>

                <p>Futhermore, as described above, a 3D image authored with Asymptote code can be superior for those with motor disabilities.  So this functionality begins with an author's choice to employ Asymptote.</p>
            </li>

            <li>
                <title>Cross-References</title>
                <p><xref ref="topic-cross-referencing" /> describes a variety of ways to customize the look and content of a cross-reference.  You can create a larger target for clickable items by making the text as long as possible.  So for example an <tag>xref</tag> authored as<cd>
                    <cline>&lt;xref ref="theorem-FTC" text="type-global" /&gt;</cline>
                </cd>would cause the clickable portion to be something like <q>Theorem 5.16</q>, whereas<cd>
                    <cline>&lt;xref ref="theorem-FTC" text="global" /&gt;</cline>
                </cd>would then cause the clickable portion to be simply the much shorter <q>5.16</q>.  Of course, you can set a default style for your entire document, so it is not necessary to continually provide the <attr>text</attr> attribute.</p>
            </li>

            <li>
                <title>Link Text</title>
                <p>Default link text, such as <q>Theorem 4.15</q> has been chosen to be informative.  But for internal links (<tag>xref</tag>) or external links (<tag>url</tag>) you can choose alternative content for the clickable portion of the text.  Think carefully about your choices here and try to avoid text like <q>here</q> or <q>click here.</q>  For a <tag>url</tag>, the default content is the <attr>href</attr>, which can always be improved by providing content.</p>

                <p>Here is a device which we now use more frequently.  Despite our aversion to footnotes, create a <tag>url</tag> element and provide meaningful content, such as the title of the web page you are referencing.  Then immediately afterwards add a footnote (<tag>fn</tag>) which contains only the actual <init>URL</init>, perhaps wrapped in a <tag>c</tag> element.  Since this is mostly meant for print, it is safe to drop things like the <c>https://</c> protocol specification and therefore <em>not</em> make it active (for a second time).  This is in use within this section.</p>
            </li>

            <li>
                <title>Commutative Diagrams</title>
                <p>Whenever possible, author commutative diagrams using the syntax of the <c>amscd</c> <latex/> package.  Then online and braille output will be more accessible.  See <xref ref="commutative-diagrams"/> for more.</p>
            </li>

            <li>
                <title>Punctuation after Mathematics</title>
                <p>Periods, commas, and semi-colons that follow directly after mathematics are handled differently by <pretext/> for visual formats versus non-visual ones (e.g. braille, audio).   But this only happens if you author the punctuation in the <em>logically</em> correct location and let <pretext/> do the rest for you.  See <xref ref="authoring-math-punctuation"/> and <xref ref="punctuation-display-math"/> for details.</p>
            </li>

        </dl></p>

        <p>Watching a blind reader navigate a web page can be a very enlightening experience.  Or you might even undertake learning one yourself.  Here are some suggestions for getting started (current on 2018-05-31).<ul>
            <li><init>NVDA</init>, <url href="https://www.nvaccess.org/"><c>www.nvaccess.org</c></url>, Windows, open source via GPL</li>
            <li>Orca, <url href="https://help.gnome.org/users/orca/stable/"><c>help.gnome.org/users</c></url>, Linux, open source via LGPL</li>
            <li>VoiceOver, included with Apple's macOS and iOS</li>
            <li>ChromeVox, <url href="http://www.chromevox.com/"><c>www.chromevox.com</c></url>, ChromeOS, free from Google</li>
            <li><acro>JAWS</acro>, <url href="https://www.freedomscientific.com/Products/Blindness/JAWS"><c>www.freedomscientific.com</c></url>, Windows, commercial</li>
        </ul></p>

        <p>Much of the technical work for accessibility is accomplished by <pretext/> developers.  But authors have responsibilities, too.  So testing can be part of your workflow.  One free tool is <url href="https://www.deque.com/axe/">axe</url><fn><c>www.deque.com/axe/</c></fn> from <url href="https://www.deque.com">Deque Systems</url><fn><c>www.deque.com</c></fn>.</p>

        <p>We have concentrated on making <init>HTML</init> output accessible, since that seems the most natural and best supported.  But we are aware of efforts for other formats.<dl>
            <li>
                <title>PDF/<latex/></title>
                <p>A <init>PDF</init> may not lend itself naturally to providing an accessible format.  But there have been efforts.  The <url href="https://tug.org/twg/accessibility/"><tex/> Users Group on PDF Accessibility and PDF Standards</url><fn><c>tug.org/twg/accessibility/</c></fn> is an excellent resource to start with.  There is also a <url href="https://github.com/rbeezer/mathbook/issues/1046"><pretext/> issue #1046</url><fn><c>github.com/rbeezer/mathbook/issues/1046</c></fn>.</p>
            </li>
            <li>
                <title>EPUB</title>
                <p>The International Digital Publishing Forum has information on <url href="http://idpf.org/a11y">EPUB Accessibility</url><fn><c>idpf.org/a11y</c></fn>.</p>
            </li>
        </dl></p>
    </section>
    <section xml:id="topic-slides">
        <title>Slides</title>
        <idx>slides</idx>
        <p>
Slideshows may be authored in <pretext/> by using the following tags.
        </p>
        <ul>
          <li>
<c>slideshow</c> replaces the usual <c>article</c> or <c>book</c> tag to
let <pretext/> know you are authoring a set of slides. As usual, you may then
define your <c>title</c>, <c>subtitle</c>, and <c>frontmatter</c>.
          </li>
          <li>
Similar to articles, your content should be organized into several
<c>section</c>s.
          </li>
          <li>
And within each section, a <c>slide</c> represents a full screen of information.
Within a slide, you may author <pretext/> content as usual, such as paragraphs
(<c>p</c>), lists (<c>ul</c>), and so on.
          </li>
          <li>
Several elements support setting the <attr>pause</attr> attribute to the
value <c>yes</c> to allow stepping through
parts of a slide (e.g. it inserts a Beamer <c>\pause</c>).
          </li>
        </ul>
        <p>
A minimal working example may be found in the
<url href="https://github.com/rbeezer/mathbook/blob/dev/examples/sample-slideshow/sample-slideshow.xml">
  Examples folder of the PreTeXt repo on GitHub
</url><fn><c>examples/sample-slideshow/sample-slideshow.xml</c></fn>.
        </p>
    </section>
</chapter>
