<?xml version="1.0" encoding="UTF-8"?>

<!--   This file is part of the documentation of PreTeXt      -->
<!--                                                          -->
<!--      PreTeXt Publisher's Guide                           -->
<!--                                                          -->
<!-- Copyright (C) 2013-2017  Robert A. Beezer, David Farmer  -->
<!-- See the file COPYING for copying conditions.             -->

<chapter xml:id="conversions">
    <title>Conversions, Generally</title>

    <introduction>
        <p>A main goal of <pretext /> is to provide a language for describing a scholarly document by its structure, with contained content, and with no description of the presentation.  It then becomes possible to use software to produce different formats, where the presentation takes advantage of that format and enhances the meaning of the content through the expression of the structure.</p>

        <p>But different output formats have different capabilities.  For example, a conversion to <init>HTML</init> can take advantage of knowls to organize smaller chunks of content, while a conversion to <init>PDF</init> can take advantage of page numbers for cross-references.  And in these two examples, the capability of the one output format is mostly impossible or silly in the other.  Look here in this chapter for notes about options that are largely <em>independent</em> of the particular conversion.  Subsequent chapters contain notes about options that are largely <em>specific</em> to a particular conversion.</p>
    </introduction>

    <section xml:id="publisher-file">
        <title>Publisher File</title>

        <p>As of 2019-07-10 we are transitioning to providing options a publisher would choose via an <init>XML</init> <term>publisher file</term>.  Here we describe how to create and employ this file.  Details on actual options can be found throughout this guide.  Note too, that <xref ref="processing-parameters"/> describes the current method.</p>

        <p>Create a separate <init>XML</init> file the same way you always would.  Include the usual <init>XML</init> declaration as the first line.  Now, instead of the overall element being <tag>pretext</tag>, use <tag>publication</tag>.  That's it.  Various elements within <tag>publication</tag> will be used to specify options, typically attributes.  Name the file something that reminds you of its purpose, such as <c>pod.xml</c> for a print-on-demand version.</p>

        <p>To employ the file, you specify its filename on the <c>xsltproc</c> command line using a string parameter (<xref ref="processing-parameters"/>) named <c>publisher</c>.  This should have a path that is relative to the main file for the document.  For example, assuming <c>pod.xml</c> and <c>fauna.xml</c> are in the same directory<cd>
            <cline>xsltproc -stringparam publisher pod.xml mathbook-html.xsl fauna.xml</cline>
        </cd>This file should reduce the many other string parameters in use, and reduce the need for extra <init>XSL</init> files (<xref ref="processing-thin-xsl"/>).</p>
    </section>

    <section xml:id="processing-parameters">
        <title>Processing Parameters</title>

        <p>Many of the options for different conversions are accomplished by command-line options, which are fed to <c>xsltproc</c> by what that program calls <term>string parameters</term>.  Here are two examples:<cd>
            <cline>xsltproc -stringparam html.knowl.example no mathbook-html.xsl fauna.xml</cline>
            <cline>xsltproc -stringparam latex.font.size 14pt mathbook-latex.xsl fauna.xml</cline>
        </cd>The first will make <tag>example</tag> content render on a page, rather than hidden in a knowl, which is the default for a conversion to <init>HTML</init>.  And the second will use a larger overall font size, while trying to preserve the same number of characters per line (with consequent smaller margins).</p>

        <p>Notice that these two examples do nothing to change the <em>words</em> that a conversion produces, which is why you do not specify them in your source, and why they are documented here in the <pubtitle>Publisher's Guide</pubtitle>.  They are conversion options that do not affect your content in significant ways, and are related to the particular output format.</p>
    </section>

    <section>
        <title>Watermarks</title>

        <p>Output can contain a <term>watermark</term><idx>watermark</idx>, which is prominent text in the background of a document.  You might use it to make a draft version (with a date?), or a CONFIDENTIAL version, or a document intended for limited distribution, such as an instructor's solution manual.</p>

        <p>To use, specify the text, and an optional scaling factor to adjust the size.  If your text has spaces, you may need to enclose the string in quote marks so that it passes correctly into <c>xsltproc</c>.  For example, all on one line,<cd>
            <cline>xsltproc -stringparam watermark.text "DRAFT 2034-05-25"</cline>
            <cline>  -stringparam watermark.scale 0.5 mathbook-latex.xsl fauna.xml</cline>
            <cline>         </cline>
        </cd></p>
    </section>
</chapter>
