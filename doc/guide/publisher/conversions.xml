<?xml version="1.0" encoding="UTF-8"?>

<!--   This file is part of the documentation of PreTeXt      -->
<!--                                                          -->
<!--      PreTeXt Publisher's Guide                           -->
<!--                                                          -->
<!-- Copyright (C) 2013-2017  Robert A. Beezer, David Farmer  -->
<!-- See the file COPYING for copying conditions.             -->

<chapter xml:id="conversions">
    <title>Conversions, Generally</title>

    <introduction>
        <p>A main goal of <pretext /> is to provide a language for describing a scholarly document by its structure, with contained content, and with no description of the presentation.  It then becomes possible to use software to produce different formats, where the presentation takes advantage of that format and enhances the meaning of the content through the expression of the structure.</p>

        <p>But different output formats have different capabilities.  For example, a conversion to <init>HTML</init> can take advantage of knowls to organize smaller chunks of content, while a conversion to <init>PDF</init> can take advantage of page numbers for cross-references.  And in these two examples, the capability of the one output format is mostly impossible or silly in the other.  Look here in this chapter for notes about options that are largely <em>independent</em> of the particular conversion.  Subsequent chapters contain notes about options that are largely <em>specific</em> to a particular conversion.</p>
    </introduction>

    <section xml:id="publication-file">
        <title>Publication File</title>
        <idx><h>publication file</h></idx> <idx><h>publisher file</h><see>publication file</see></idx>

        <p>A key concept when using <pretext/> to describe your writing project is that an author should concentrate on <em>content</em> and then <em>later</em> a publisher can concentrate on <em>presentation</em>.  (Of course, many <pretext/> authors are also their publisher, making this distinction more difficult than when a professional publisher was a necessity).</p>

        <p>We isolate these publisher decisions in a file we call a <term>publication file</term>.  Generally, use of this file will change <em>how</em> words look, or are arranged, on the page, but will not change the author's words <em>themselves</em>.  some software might call this a <q>configuration file</q>, but we think it is very important to indicate its role in the publication process.</p>

        <p>In tnis section, we describe how to create and employ this file.  Details on actual options can be found throughout this guide, with terse comprehensive reference material in <xref ref="publication-file-reference"/>.</p>

        <p>Create a separate <init>XML</init> file the same way you always would.  Include the usual <init>XML</init> declaration as the first line.  Now, instead of the overall element being <tag>pretext</tag>, use <tag>publication</tag>.  That's it.  Various elements within <tag>publication</tag> will be used to specify options, typically attributes.  Name the file something that reminds you of its purpose, such as <c>pod.xml</c> for a print-on-demand version.  Avoid using spaces in the filename, even if your operating system encourages it.</p>

        <p>Entries that control aspects of the output are often attributes of various elements, but may also be the content of elements.  When you read the reference material in <xref ref="publication-file-reference"/> be aware that we use a sort of shorthand to describe these entries, modeled on a specification called XPath.  For example, if we say to set<cd>
            <cline>/publication/foo/bar/@bazz</cline>
        </cd>to possible values of <c>yes</c>, <c>no</c>, or <c>maybe</c> then the following will be the guts of a legitimate publication file that would somehow adjust your output in some way.  In particular, note that the <q>at sign</q>, <c>@</c>, indicates an attribute of the preceding element.</p>

        <pre><![CDATA[
            <publication>
                <foo>
                    <bar bazz="maybe"/>
                </foo>
            </publication>]]>
        </pre>

        <p>When using the CLI (<xref ref="processing-CLI"/>), the path to a publication file must be specified in the project manifest in the <tag>publication</tag> element for each <tag>target</tag>.</p>
    </section>

    <section xml:id="publisher-levels">
        <title>Levels Explained</title>
        <idx>levels</idx>

        <p>Every <pretext/> document has a hierarchy, even if it might not be very deep.  As an extreme example, for a sub-sub-section of a book, the <tag>subsubsection</tag> is contained in a <tag>subsection</tag>, that <tag>subsection</tag> is contained in a <tag>section</tag>, that <tag>section</tag> is contained in a <tag>chapter</tag>, and that <tag>chapter</tag> is contained in the <tag>book</tag>.  Each division of a document has a <term>level</term>, and the overall <term>root</term> element is always at level 0 (the <tag>book</tag> in the example).  Each other division is at some <term>depth</term>, computed by counting from the root.  So the <tag>subsubsection</tag> in the example is at level 4.</p>

        <p>Many aspects of the different outputs produced can be customized, typically via the publication file (<xref ref="publication-file"/>), based on how much of the hierarchy is used or made visible.  A good example is the Table of Contents.  If the level of the Table of Contents of a book is set to 2, then the Table of Contents will be <q>two-deep</q> or have <q>two levels</q> of entries.  More precisely, there will be titles (and maybe page numbers) for every <tag>chapter</tag> and every <tag>section</tag>.</p>

        <p>When hierarchical numbering is customized by specifying a level, the number of an object will have as many separators (periods, typically) as the level given.  Here's why.  Suppose equations are set to be numbered at level 2.  Then two levels of the hierarchy will be used to create the initial part of the number.  So in an <tag>article</tag>, Equation 5.2.34 will be in Subsection 2, of Chapter 5, and then will be the 34th equation of that sub-section.  Two levels: one separator to describe the division, one less that the number of levels (this is the <term>structure number</term>) and a second separator to set off the count within the division (the <term>serial number</term>).  So, <m>(2 - 1) + 1 = 2</m> separators.  See more on numbering at <xref ref="publisher-numbering"/>.</p>

        <p>Notice that you make no assumptions or decisions in your source about the depth of the Table of Contents, nor the numbering of equations.  At any time, right up to the completion of your project (or later!), you can change this aspect of your output with nearly trivial edits in the publication file.  Nice.</p>
    </section>

    <section xml:id="publisher-numbering">
        <title>Numbering Explained</title>
        <idx>numbering</idx>

        <p><pretext/> targets the production of <q>structured scholarly documents</q><mdash/>not novels, not magazine articles, not menus, and not travel brochures.  (Though a novel could work well?)  A research monograph might only be consulted for a portion of its content.  A good textbook should be useful to a reader after a course is over, and it should be easy to locate certain portions of the material.  A good textbook will foreshadow later material, and reinforce earlier material.  So we provide tools that lead to a quality index, reduce the overhead of making an accurate cross-reference, and make an automatic Table of Contents.  Page numbers can be a useful way to locate information for print output, but are less useful in an electronic <init>PDF</init> with hyperlinks, and are totally useless for online <init>HTML</init> and reflowable <init>EPUB</init>.  So we rely on copious hierarchical numbering to assist with locating discrete pieces of content.</p>

        <p>A <pretext/> document, like most any scholarly document has a hierarchy of <term>divisions</term>.  These are always numbered to reflect that hierarchy.  So Subsection 4.7.2 of a <tag>book</tag> is the second sub-section of the seventh section of the fourth chapter of the book.  It is possible to specify that the numbering stops at some level, but that will limit how you can number smaller units of content.</p>

        <p><term>Blocks</term> are units of content held in a division.  An <tag>example</tag> is a good example.  These are always numbered, so that cross-references are as useful as possible in all output formats.  The number begins with a <term>structure number</term> that is the number of a division.  The division will contain the block, but does not need to be the closest containing division.  For example, Example 5.2.65 of a book has structure number 5.2, indicating it is in Section 2 of Chapter 5.  But this section might be structured as a sequence of sub-sections and Example 5.2.65 would be contained in one of these sub-sections.  But if we started counting all the examples in this <em>section</em> we would find Example 5.2.65 as the sixty-fifth numbered block of the whole <em>section</em>, even if it might only be the twenty-second example of its sub-section.  This final number is known as the <term>serial number</term>.  The granularity of the structure number may be configured.  This is a good place to suggest the complementary <xref ref="publisher-levels"/> on the meaning of the term <term>level</term>.</p>

        <p>Numbering of equations and footnotes may be configured in a manner entirely similar to that of blocks.  See <xref ref="publication-file-numbering"/> for details on how to control this.</p>

        <p>As mentioned above, a number is a kind of <term>locator</term><mdash/>it should help a reader locate content, via a cross-reference, an index entry (a specialized cross-reference), or a Table of Contents.  It should also help a reader (teacher) tell another reader (student) where to find content, perhaps as part of a citation to a smaller item within a larger work.  How would you locate Example 5.2.65?  A Table of Contents, in any output format should get you to Section 5.2 quite easily.  We claim that the <tag>remark</tag> immediately preceding Example 5.2.65 should be Remark 5.2.64.  In other words, it will easier to scan the section and quickly home in on the example if the serial numbers count <em>all</em> the numbered blocks, rather than having one sequence of serial numbers counting examples, and a second sequence counting remarks.  Not convinced?  Suppose there were two such sequences of serial numbers.  When you see Remark 5.2.23, should you move forward or backward in your search for Example 5.2.65?</p>

        <p>If it is so important to not have separate sequences of serial numbers, then why do equations and footnotes get their own sequences?  These items are substantially different visually, and even their numbers are formatted quite differently, so scanning for blocks or equations or footnotes should be very distinct visually.  Notice that it is their <em>distinctive appearance</em> that is the criteria for an independent sequence of serial numbers.</p>

        <p>We have implemented some flexibility for figures and tables, and for projects.  This work is in flux, so we have not yet documented the possibilities.  Our view is that figures and tables can be considered visually different enough to merit a separate sequence of serial numbers.</p>

        <p>Divisions that are <tag>chapter</tag>s, and only <tag>chapter</tag>s, may begin with a number other than one.  Primarily this is to accommodate books that need to be printed in multiple physical volumes, so numbering in a second (or subsequent) volume can be correct.  We also understand the instructive value of a computer science text that wants to start counting from zero.  We do not mean to encourage a Chapter 0 that is an introduction (go ahead and title Chapter 1 <articletitle>Introduction</articletitle>) or background preparatory material (make that an appendix).  Understand that a <tag>preface</tag>, or multiple <tag>preface</tag>s, is the place to talk about how, or why, you wrote your book, and/or a place to instruct a reader or instructor about the best ways to use your book.  See <xref ref="publication-file-numbering"/> for details on how to accomplish this.</p>

        <note xml:id="best-practice-chapter-zero">
            <title>Use Chapter Zero Carefully</title>

            <p>Chapter numbering may start with a number other than one, and zero is a popular choice.  This should not be simply because the first chapter is introductory or preparatory, nor should it be a replacement for a preface, which has a well-defined purpose (see <xref ref="best-practice-preface"/>).</p>
        </note>
    </section>

    <section xml:id="exercise-component-visibility">
        <title>Exercise Component Visibility</title>

        <p>The <tag>statement</tag>, <tag>hint</tag>, <tag>answer</tag>, and <tag>solution</tag> elements are collectively the <term>components</term> of exercises, projects (and similar), and tasks they may contain.  When you author an exercise, you may only want to have a solution appear at the end of a book, or in a solution manual, and not right where the exercise is born.  There are twenty yes/no settings (four components for each of five types of exercises), which control visibility <em>at the location where the content is born</em>.  The default value for each is <c>yes</c>, which means the component is visible.  See <xref ref="common-exercise-visibility"/> for complete details.</p>

        <p>This is a good example of settings you may wish to employ differently for different output.  Since <init>HTML</init> output automatically puts these components into knowls (<xref ref="knowled-content"/>), you may be less concerned about having them visible as part of the exercise itself.  Conversely, for PDF/print output, you may wish exercise components to only be visible at the end of a book.  Note that migrating solutions to another location is accomplished with a <tag>solutions</tag> specialized division (<xref ref="topic-solutions-division"/>).</p>

        <p>Finally, these settings are observed by the stylesheet which creates a solution manual (see <xref ref="solution-manual"/>).  This might explain why controlling the visibility of a <tag>statement</tag> is of interest.</p>
    </section>

    <section xml:id="watermarks">
        <title>Watermarks</title>

        <p>Output can contain a <term>watermark</term><idx>watermark</idx>, which is prominent text in the background of a document.  You might use it to make a draft version (with a date?), or a CONFIDENTIAL version, or a document intended for limited distribution, such as an instructor's solution manual.</p>

        <p>In <init>PDF</init> output this text will render as large, light grey text, at an angle across the page.  <init>HTML</init> output will have repeated <init>SVG</init> images of the text below/behind the usual text.</p>

        <p>To use, a publication file entry can be used to specify the text itself, along with a scaling factor that can be used to fill the page and prevent overruns.  Note that the text is assumed to be simple (e.g.<nbsp/>no markup) and when used with <latex/> output certain characters (e.g.<nbsp/>a percent sign) may cause problems.  Make a feature request if the handling of this text needs to be more robust.  See <xref ref="common-watermark-options"/> for exact syntax.</p>

        <p>Here is an example of a specification in the publication file.<cd>
            <cline>&lt;common&gt;</cline>
            <cline>  &lt;watermark scale="1.2"&gt;DRAFT 2034-05-25&lt;/watermark&gt;</cline>
            <cline>&lt;/common&gt;</cline>
        </cd></p>
    </section>
</chapter>
