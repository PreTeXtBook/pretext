<?xml version="1.0" encoding="UTF-8"?>

<!--   This file is part of the documentation of PreTeXt      -->
<!--                                                          -->
<!--      PreTeXt Publisher's Guide                           -->
<!--                                                          -->
<!-- Copyright (C) 2013-2017  Robert A. Beezer, David Farmer  -->
<!-- See the file COPYING for copying conditions.             -->

<chapter xml:id="pdf-print">
    <title>Conversion to PDF and Print</title>
    <idx><h>print option</h><h>LaTeX, PDF</h></idx>
    <idx><h>electronic option</h><h>LaTeX, PDF</h></idx>
    <idx><h>LaTeX</h><h>print option</h></idx>
    <idx><h>LaTeX</h><h>electronic option</h></idx>
    <idx><h>PDF</h><h>print option</h></idx>
    <idx><h>PDF</h><h>electronic option</h></idx>

    <introduction>
        <p>This chapter describes ways a publisher can adjust the presentation of <pretext/> content for a print format, or an electronic facsimile (i.e. <init>PDF</init>).</p>
    </introduction>

    <section xml:id="electronic-or-print">
        <title>Electronic versus Print</title>

        <p>The stylesheet <c>pretext-latex.xsl</c> can produce two very similar outputs.  Each is a file in <latex/> syntax, which can be converted to a <init>PDF</init> with a <latex/> executable (<q>engine</q>).  However, there are two purposes for such a <init>PDF</init>.  The first is a document which is meant to be read on a screen.  We call this an <term>electronic PDF</term>.  The second is meant to be printed as a physical book, so it would be the file you provide to a copy shop, campus bookstore, or print-on-demand service (see <xref ref="print-on-demand"/>).  We call this a <term>print PDF</term>.  So as you read this, keep in mind that the <latex/> conversion is really two-converters-in-one.</p>

        <p>As an illustration of the difference, an electronic <init>PDF</init> will contain cross-references that are active, and colored to be obvious to the reader.  For the print <init>PDF</init> the same cross-reference will be black, inactive, and by default contain the page number of the target.</p>

        <p>The publication file entry <c>latex/@print</c> controls the selection of the two output modes of this single stylesheet.  The default is <c>no</c> for the electronic version, and <c>yes</c> will change to the print version.  See <xref ref="latex-print-options"/> for the specifics of this entry.</p>

        <p>In this chapter, we describe both of these two conversions together, since they are only slightly dissimilar.</p>
    </section>

    <section xml:id="traditional-publishing">
        <title>Traditional Publishing</title>

        <p>Suppose that you have engaged a publisher to help you manufacture a physical copy of your book or research article.  Publishers vary greatly in their expectations for what you provide to them.  (And maybe you are your own publisher, see <xref ref="print-on-demand"/>.)</p>

        <p>If your publisher wants to run with <term>camera-ready copy</term> from you as a <init>PDF</init>, you should be in good shape.  With the print option (versus electronic, see <xref ref="electronic-or-print"/>) and a bit of effort to control widows, orphans, and figure placement, you should be able to produce something very good by yourself.</p>

        <p>In mathematics, computer science, physics, or economics, a publisher might want to work from your <latex/> files, which they will assume you have written from scratch.  And they may expect to be able to swap in their house class or style file to achieve the look they want.  A <pretext/> <latex/> file will look a bit unusual, see <xref ref="latex-file"/>.  On 2022-11-22 we have a report of a very extensive <url href="https://arxiv.org/abs/2211.11671">research article</url> written in <pretext/> and uploaded to the <url href="https://arxiv.org/">arXiv</url> preprint server, where it was successfully processed by <c>pdflatex</c> on the server, with only minimal hand-edits to the intermediate <latex/> file.  We can always improve in this area, so we welcome reports, good and bad, about the robustness of our <latex/> output when delivered to publishers.</p>
    </section>

    <section xml:id="print-justification">
        <title>Text Block Alignment</title>

        <p><latex/> is engineered around placing boxes on the page.  Characters in boxes are built up to be words, then words in boxes become lines, and then lines in boxes become pages.  Or something close to that.  As a consequence <latex/> excels at right-justified text.  For this reason, and also because we think it looks more like a commercial published book and therefore more professional, right-justified text is the default.  If your opinions on this come from experience with some other word processor, keep an open mind.  Note too, that paradoxically, sometimes a ragged-right alignment can lead to greater amounts of hyphenation.</p>

        <p>Similarly, <latex/> can make the bottom of the text block <em>always</em> land at exactly the same place.  This is especially pleasing if you are targeting two-sided printing, since you can have the two text blocks on either side of a single piece of paper match up <em>exactly</em>.  But this comes at a cost<mdash/>sometimes a page can have huge gaps between paragraphs just to place the bottom edge of the last paragraph at the bottom of the space meant for the text blocks.  Further, <latex/> defaults to a flush bottom or ragged bottom, depending on if the document is a book or an article, or if it is one-sided or two-sided.  Instead, we default to a ragged bottom for better out-of-the-box formatting, with an option to elect a flush bottom when you understand the risks and can watch out for them.</p>

        <p>See details on specifying these options at <xref ref="latex-page-options"/>.  See <xref ref="styling-justification"/> for greater control over some aspects of right-justified text and also read about justified text in <xref ref="topic-accessibility"/>.</p>
    </section>

    <section xml:id="print-sides">
        <title>One-Sided or Two-Sided</title>

        <p>An electronic <init>PDF</init> will default to page layout appropriate for a document printed single-sided, which makes the most sense for a document that may not ever be printed, or which possibly might be printed on a personal printer.</p>

        <p>A print <init>PDF</init> will default to page layout appropriate for a document printed two-sided, which makes the most sense for a document that may be sent to a print-on-demand service or printed on a printer that will print on both sides of a sheet of paper.</p>

        <p>These defaults may be overridden with the publisher entry <c>latex/@sides</c> switch with values <c>one</c> and <c>two</c>.  See <xref ref="latex-sides-options"/> for the specifics of this entry.</p>

        <p>One-sided layout will default to symmetric left/right margins, and page headers with the page numbers <em>always</em> placed in the upper-right corner as part of default page headers.  There will be no blank pages between chapters of a book.</p>

        <p>Two-sided layout will have asymmetric margins with the ratio of inner (adjacent to spine) to outer at <c>2:3</c>.  You need some extra space at the spine to compensate for the binding, but when a book is open, the two pages are separated by two inner margins, so these do not need to be as wide as the outer margin to give some distance between the pages.  And readers will want more space to write in the outer margins, perhaps providing simple proofs of important results.  (This ratio may be changed with the <c>hmarginratio</c> key of the <c>geometry</c> package.)  Page headers will have page numbers on the outside of the page, with odd numbers on the right-side page.  Chapters will possibly have a blank page between them, so they begin on a right/odd page.  Behavior is similar in the front matter and back matter.</p>
    </section>

    <section xml:id="font-size">
        <title>Font Size</title>

        <p>The overall (document-wide) font size may be given as one of eight different values, ranging from 8 points to 20 points.  The default is 10 points.  These values influence multiple settings within <latex/> itself, and <pretext/> will also adjust some default values, such as the line-width (in order to preserve an optimal number of characters per line for reading ease).  See <xref ref="latex-font-size-options"/> for precise details.</p>
    </section>

    <section xml:id="page-shape">
        <title>Page Shape</title>

        <p>The conversion to <latex/> defaults to US Letter paper with reasonable margins.  However, the <latex/> <url href="https://ctan.org/pkg/geometry" visual="ctan.org/pkg/geometry"><c>geometry</c> package</url> has numerous options for paper sizes and margins.  The publication file can be used to insert any configuration the package supports.  See <xref ref="latex-page-options"/> for the exact syntax.</p>

        <p>Note that if you change the paper size, you may want to change the text width computed by <pretext/>, and the more changes you make, the more default settings you may need to adjust.  However, if you are producing your book for print-on-demand (<xref ref="print-on-demand"/>) getting the page size and margins just right is a key step of the process.</p>

        <p>Note also that when you use the <tag>geometry</tag> element of the publication file, the <emc>content</emc> of the element (text between the opening and closing tags) will be duplicated <em>exactly</em> into a <latex/> source file.  Being careless here is a good explanation for the <latex/> compilation step to fail.</p>

        <p>Here is an example:<cd>
            <cline>&lt;latex&gt;</cline>
            <cline>  &lt;page&gt;</cline>
            <cline>    &lt;geometry&gt;a4paper,total={16cm,25cm}&lt;/geometry&gt;</cline>
            <cline>  &lt;/page&gt;</cline>
            <cline>&lt;/latex&gt;</cline>
        </cd>twhich will produce in the <latex/> output<cd>
            <cline>\geometry{a4paper,total={16cm,25cm}}</cline>
        </cd></p>

        <p>An electronic <init>PDF</init> may be printed on physical paper, but perhaps you want to make a version that works well on a portable device that naturally supports a portrait orientation, such as an Android tablet, an iPad, a Kindle (device or application), smart phone, Sony Digital Paper, or a ReMarkable tablet.  Aspect ratios vary across these devices, but once you settle on a target ratio, we have had good luck with the following algorithm and parameters:<ol>
            <li>Specify 10 point text</li>
            <li>Text width of about 4.5 inches</li>
            <li>Add quarter-inch left/right margins to compute text width</li>
            <li>Use aspect ratio to compute an overall height (about 6.5 inches)</li>
            <li>Subtract quarter-inch top and bottom margins to obtain text height</li>
        </ol>Then you can provide the <c>geometry</c> package the overall size as the <c>papersize</c> and the text width and text height as the <c>total</c> size of the body, resulting in equal (tight) margins all around, and good use of limited screen real estate.  These parameters create a <init>PDF</init> that is very legible on a larger smart phone, and for fine detail, rotating the device to landscape works well.  Really.</p>

        <note xml:id="best-practice-too-much-text">
            <title>Avoid Too Much Text on a Printed Page</title>
            <p>With freedom comes responsibility.  Resist the temptation to pack in as much text on the page as you can.  <pretext/> varies the width of the text in reaction to the font size and is already very close to the maximum number of characters per line for comfortable reading by humans.  Similarly, very narrow margins can be uncomfortable for reading (or holding a printed book).</p>
        </note>
    </section>

    <section xml:id="latex-asymptote-links">
        <title>Asymptote Links</title>

        <p>An image described by an <tag>asymptote</tag> element will produce standalone <init>HTML</init> files as part of the convversion to <init>HTML</init> output.  For 3D images, these are interactive (rotate, scale).  If you set a base <init>URL</init> for your project (<xref ref="online-base-url"/>) and request this feature through a publisher switch, then each image in an electronic <init>PDF</init> (<xref ref="electronic-or-print"/>) will be a link to the <init>HTML</init> version. See <xref ref="latex-asymptote-link-options"/> for the specifics of this entry.  This feature is off by default.</p>
    </section>

    <section xml:id="latex-xref-page-numbers">
        <title>Cross-References</title>

        <p>In an electronic <init>PDF</init>, cross-references will be hyperlinks that take the reader to the target.  Color is used to make them visible, in addition to whatever indication a <init>PDF</init> viewer will provide on hover.  The publication file entry controlling the use of numbers in cross-references (<xref ref="latex-xref-page-number-options"/>) is by default <c>no</c> in this case, but may be set to <c>yes</c> to include the page number of the target in the cross-reference.</p>

        <p>In a print <init>PDF</init>, cross-references will not be active hyperlinks and will be the same color as the adjoining text.  The publication file entry controlling the use of numbers in cross-references (<xref ref="latex-xref-page-number-options"/>) is by default <c>yes</c> in this case, but may be set to <c>no</c> to not include the page number of the target in the cross-reference.</p>

        <p>See <xref ref="latex-xref-page-number-options"/> for the syntax of specifying the use of page numbers in cross-references.</p>
    </section>

    <section>
        <title>Page Number Fidelity</title>

        <p>If you use a print <init>PDF</init> to produce a physical book, the page numbers may be important to you and your readers.  Thus, you may desire that an electronic <init>PDF</init> have faithful page numbers.  You may have noticed from the discussion about page numbers in cross-references (<xref ref="latex-xref-page-numbers"/> that because the default behavior puts page numbers in the print <init>PDF</init>, and not in the electronic <init>PDF</init>, content will not always appear on the same page for the two conversions.  The solution is simple<mdash/>use a publication file to have the two conversions behave identically in this regard.</p>
    </section>

    <section>
        <title>Nested Lists</title>

        <p><latex /> can fail if lists are nested too deeply.  Maximums may be up to four nested ordered lists, and up to six overall (mixing in unordered lists).  If you hit these limits, ask yourself if your situation is really that complicated, or ask us to consider a feature request adding a technical fix.</p>
    </section>

    <section>
        <title>Multi-Column List Order</title>

        <p>Lists with several columns are rendered in column-major order, as of 2018-02-28.  In other words, the first list items (<tag>li</tag>) in your source will populate the first column.</p>
    </section>

    <section>
        <title>Footnotes</title>

        <p>Footnotes are the farthest thing imaginable from structured authoring.  You can put them anywhere, and conceivably they can contain anything.  But they do work great in <init>HTML</init> presentations as knowls.  However, we do not let the tail wag the dog, and so have to make some <em>compromises</em> for footnotes output in print formats.<ul>
            <li>As of 2019-01-04 we are fairly restrictive about content.  No paragraphs, more like a few sentences, max.  If you have more content, consider the <tag>aside</tag> element, and send feature requests for that.</li>
            <li>Many blocks, such as <tag>example</tag> and <tag>remark</tag>, are implemented with the <latex/> <c>tcolorbox</c> package, to make styling and layout much more capable and reliable.  But footnotes get trapped within these boxes and render at the end of the box (not the bottom of the page) and have a different scheme for the marks (letters, not numbers).  We have mitigated much of this behavior, but the cost is that these footnotes are delayed until the box finishes.  So if you have a 4-page example, and use a footnote early, it may appear at the bottom of a page that is 3 or 4 pages away.</li>
            <li>Another consequence of the above is that hyperlinks in electronic <init>PDF</init>s, from the mark to the text, need to be disabled (they will never work within a <c>tcolorbox</c>).  Cross-references to a footmark's text will still be active in an electronic <init>PDF</init>.</li>
        </ul></p>
    </section>

    <section xml:id="latex-cover-images">
        <title>Cover Images</title>
        <idx><h>PDF</h><h>covers</h></idx>
        <idx><h>LaTeX</h><h>covers</h></idx>
        <idx><h>covers</h><h>PDF</h></idx>
        <idx><h>covers</h><h>LaTeX</h></idx>

        <p>The publication file may be used to specify the filenames of a front-cover image and a back-cover image.  The image must be a single-page <init>PDF</init>, and it will be scaled to fit an entire page.  So it is your responsibility to supply an image which has the correct aspect ratio and sufficient resolution.  These are only supported for the <latex/> conversion.  See <xref ref="latex-covers-options"/> for exact syntax.  Implementation is via the <latex/> <c>pdfpages</c> package.</p>

        <p>This is meant to help you create a professional electronic <init>PDF</init>.  A print-on-demand service (<xref ref="print-on-demand"/>) will likely want a standalone image (possibly with the front and back, plus a spine, all rolled into one <term>wrap</term> image).  So build your <em>real</em> cover images first (<xref ref="cover-design"/>), and then modify them for this use.</p>
    </section>

    <section xml:id="latex-icons">
        <title>Icons</title>

        <p>The <tag>icon</tag> element is built around the <term>Font Awesome</term> font collection.  The <latex/> <c>fontawesome</c> package contains all the necessary font files (for use with both <c>pdflatex</c> and <c>xelatex</c>), and a style file that interfaces, in a semi-elaborate way, with the font files.  If you have installed this <latex/> package, and the fonts still seem unavailable, figure out how to adjust your <latex/> setup or your system configuration.  Simply installing a font file, such as the more recent <term>Font Awesome 5</term> is not going to work.  See <xref ref="latex-fonts"/> for more about fonts in <latex/>.</p>
    </section>

    <section xml:id="latex-index-style">
        <title>Index Style</title>

        <p>Start at <xref ref="overview-index-notation"/> to learn how to create an index.  The realization of the index is under the influence of the <latex/> <c>imakeidx</c> package, which results in certain stylistic choices, such as a two-column format.  It also means that any options supported by this package could be easily implemented as the result of a feature request.</p>

        <p>Also, there can be significant differences between how <pretext/> implements the index for <init>HTML</init> and how the <c>imakeidx</c> package creates an index for <latex/>.  See <xref ref="online-index-style"/> and <xref ref="indexing-guide"/>.</p>
    </section>

    <section>
        <title>Styling</title>
        <idx><h>style</h><h>print</h></idx>

        <p>Note that some of these switches are about <em>style</em>.  There are many more ways to influence the style of the <latex/> output, see <xref ref="latex-styles"/>.</p>
    </section>

    <section xml:id="latex-file">
        <title><latex /> File</title>

        <p>The <latex/> file created by <pretext/> will contain the majority of your content in a form that you could use it in a new standalone <latex/> document, in accordance with Principle <xref ref="principle-open" text="global"/>.  However some constructions which are not natural in <latex/>, such as a <tag>sidebyside</tag>, may be cumbersome to reuse.  We continue to improve and refine these situations, though.</p>

        <p>Our philosophy is to create and use many new <latex/> environments, allowing styling and fine-tuning to occur in the preamble.  This makes the body look more like simple <latex/> and allows for much greater flexiblity in styling, along with greater reliability for successful <latex/> compilation.</p>

        <p>The existence, variety, and quality of <latex/> packages changes continuously.  We can, and will, swap out some packages for replacements, as needed or desirable.  This is to your advantage, as you are absolved of the need to evaluate competing packages, and to insure that they do not clash with each other.  So resist the temptation to modify the <latex/> output significantly prior to compilation, as it will inevitably lead to frustration.  The <latex/> file is a means to an end<mdash/>it allows us to create a <init>PDF</init> with excellent typography, and especially for the demands of technical discplines, such as <acro>STEM</acro> and music.  It is meant to ephemeral, not archival.</p>

        <p>If some other variety of <latex/> (or <tex/>) file is desired, a new conversion could be created.  Many of the more complicated aspects of any conversion are purposely isolated in the <c>pretext-common.xsl</c> file so that they can be easily re-purposed and there is consistency across output formats.</p>

        <note xml:id="edit-latex">
            <title>Only Edit <latex/> Files Rarely</title>

            <p>We want to stress that the <latex/> file created by various conversions is mean to be an <em>intermediate</em> format.  In other words, it is <em>ephemeral</em>.   We try to make it clean and organized, but it is not the <latex/> a human would write.  You might be able to recycle a paragraph or two in other documents you create without <pretext/>.  But it is not meant to be stable or archival and no long-term use is supported in any way.  In other words, it is not a supported output format, beyond compiling to a <init>PDF</init> without errors.</p>

            <p>Having said all that, you may find it necessary to manually adjust a file to control widows or orphans, or maybe the placement of a graphics file, or similar adjustments.  We view this as the final step before making a new edition, which might be a <init>PDF</init> that you submit to a print-on-demand service (<xref ref="print-on-demand"/>).  So this might be an annual exercise, at the most frequent.</p>
        </note>
    </section>

    <section xml:id="latex-snapshot-record">
        <title>Snapshot Record</title>
        <idx><h>LaTeX</h><h>snapshot</h></idx>

        <p>We are careful about which <latex/> packages we use, trying to stick with well-established packages with active maintainers.  But it can be useful to have a record of <em>exactly</em> which packagees are in play, and better still, which versions of those packages are being used.  So you can use a publication entry to request loading the <url href="https://ctan.org/pkg/snapshot"><c>snapshot</c></url> package, which will then automatically generate such a record into a <c>&lt;job&gt;.dep</c> file.  See <xref ref="latex-snapshot-record-options"/> for details on electing this feature.</p>

        <p>If you suspect some packages are not playing well with each other, this record might be helpful for debugging this (rare) situation.  It can aslo be useful if you wish to have a perfect archive of how some publication was produced.  See the package documentation for more on the format and use.</p>
    </section>
</chapter>
