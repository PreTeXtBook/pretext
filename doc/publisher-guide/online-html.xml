<?xml version="1.0" encoding="UTF-8"?>

<!--   This file is part of the documentation of PreTeXt      -->
<!--                                                          -->
<!--      PreTeXt Publisher's Guide                           -->
<!--                                                          -->
<!-- Copyright (C) 2013-2017  Robert A. Beezer, David Farmer  -->
<!-- See the file COPYING for copying conditions.             -->

<chapter xml:id="online-html">
    <title>Conversion to Online HTML</title>

    <introduction>
        <p>Similar to the case for <latex /> conversion (<xref ref="pdf-print"/>) there is a variety of command-line processing parameters available (<xref ref="processing-parameters" />).  Until we are ready to document these carefully, open <c>xsl/mathbook-html.xsl</c> and poke around to see what is available.</p>
    </introduction>

    <section xml:id="knowled-content">
        <title>Knowled Content</title>

        <p>A <term>knowl</term> is a feature of the online conversion. It is text that you can click on, and nearby some content is revealed. You can click it again to hide that content.  You can find a variety of examples in the Sample Article, or other <pretext/> projects.</p>

        <p>Knowls come in two different types:<ul>
            <li>A <term>born-hidden knowl</term> or <term>born-as knowl</term> is content that is contained in a knowl at the location where it first appears.  Typical examples are footnotes, hints to exercises, or proofs of theorems.  In other words, these small units of content are <q>hidden</q> behind knowls in the location where they naturally belong.  Some content (e.g. footnotes) are always <term>knowled</term>, while other content (e.g. an inline exercise) can be knowled, or not, as a choice made by the publisher.</li>

            <li>By contrast, a <term>cross-reference knowl</term> or an <term>xref knowl</term> is content that is a duplicate of some other content, in another location, as a result of an author making an <tag>xref</tag> cross-reference in their source.  So a cross-reference in Chapter<nbsp/>8 to Example<nbsp/>4.6 will open the content of the example in the knowl, rather than transporting the reader backwards four chapters.  If the reader <em>does</em> want to see the example in its original context in Chapter 4, then the knowl finishes with an <term>in-context</term> link that functions as a traditional hyperlink.  Almost every cross-reference is a knowl, except when the target is a division<mdash/>then a traditional hyperlink is used, since rendering an entire division as a knowl is unwieldy.</li>
        </ul>The presence of the in-context link is one way to tell the difference between the two.  Locators in the index (<xref ref="online-index-style"/>) are mostly cross-reference knowls.  Knowls are used a few other places, such as in a list of notation.</p>

        <p>An author does not need to be conscious of knowls. The structure and content of the document should not <q>be aware</q> that there will be knowls in the online output.  But the publisher has some control over whether or not certain medium-sized pieces of content (examples, exercises, figures, etc.) are born as knowls or not.   While these processing parameters (<xref ref="processing-parameters" />) are in flux, we do not list them here, but instead suggest you open <c>xsl/mathbook-html.xsl</c> and search on <c>html.knowl</c> to see what is available.</p>

        <p>Note that some of these switches are for broad categories of items, for example, <c>html.knowl.theorem</c> will also knowl <tag>lemma</tag>s, <tag>corollary</tag>s, <tag>fact</tag>s, and more.  This choice applies document-wide, there is no plan to support electing this on a case-by-case basis.</p>
    </section>

    <section>
        <title>Lists</title>

        <p>On a description list (<tag>dl</tag>), only <attr>width</attr> values of <c>narrow</c> and <c>medium</c> are implemented. (2018-03-28)</p>

        <p>Lists with several columns are rendered in row-major order, as of 2018-02-28.  In other words, the first list items (<tag>li</tag>) in your source will populate the first row.</p>

    </section>

    <section xml:id="online-index-style">
        <title>Index Style</title>

        <p>The <pubtitle>Author's Guide</pubtitle> explains how to create an index.  The realization of the index for online output is implemented within <pretext/>.  We have made certain stylistic choices, in addition to taking advantage of certain features of the online format.<ul>
            <li>A one-column format.</li>
            <li>Indented subheadings (not run-in).</li>
            <li>Maximum two levels of subheadings.</li>
            <li>Word-by-word sort order on headings.</li>
            <li>Locators for divisions are hyperlinks.</li>
            <li>Locators for smaller units are knowls.</li>
            <li><q>Page ranges</q> use the initial location.</li>
            <li>No running heads (yet).</li>
            <li>A <term>headnote</term> can be accomplished with an <tag>introduction</tag>.</li>
        </ul>Some of these choices would be easy to adjust or extend as the result of a feature request.</p>

        <p>Also, there can be significant differences between how <pretext/> implements the index for <init>HTML</init> and how the <c>imakeidx</c> package creates an index for <latex/>.  See <xref ref="latex-index-style"/> and <xref ref="indexing-guide"/>.</p>
    </section>

    <section>
        <title>Styling</title>

        <introduction>
            <p>The PreTeXt conversion to <init>HTML</init> creates standard <init>HTML</init> elements, with styles controlled by <init>CSS</init> via class names (and not so much via the element names).  As evidence of this, building <init>HTML</init> without the accompanying Javascript and <init>CSS</init> renders in a readable fashion, albeit quite plain (as one would expect).  This section describes ways that a publisher can influence the style.</p>
        </introduction>

        <subsection>
            <title>Colors</title>

            <p>The processing parameter <c>html.css.colorfile</c> can be provided as the name of a file describing a color theme for <init>HTML</init> output.  It presumes the same server which serves the remainder of the <init>CSS</init> (<c>pretextbook.org</c> by default).  So for example,<cd>
                <cline>-stringparam html.css.colorfile colors_pastel_blue_orange.css</cline>
            </cd>will provide a softer look.  The default colors are contained in <c>colors_default.css</c>.  It is easy to inspect and compare these files to see what is involved in designing a color theme.  In particular, <c>colors_default.css</c> contains documentation on how to design a theme.</p>
        </subsection>
    </section>

    <section>
        <title>Analytics</title>
        <idx>analytics</idx>

        <p><pretext/> makes it as easy as possible to have services provide data about visitors to the <init>HTML</init> version of your book.  We support <url hef="https://analytics.google.com/analytics/web/">Google Analytics</url><fn><c>analytics.google.com/analytics/web/</c></fn> and <url hef="https://statcounter.com/">StatCounter</url><fn><c>statcounter.com/</c></fn>.</p>

        <p>In each case, use is similar.  Begin at the service's site and follow their instructions for enabling data collection for your book's site.  We will not document those instructions here.  When completed, you can request (or will be shown) sample Javascript code to add to pages on your site.  Except, <pretext/> is going to do that part for you.  You only need to provide the unique identifiers used by the service that identify your project.  Because these sign-ups are dependent on your site, this is a publisher activity, and hence configured with command-line parameters (<xref ref="processing-parameters"/>).</p>

        <p>StatCounter uses two identifiers, a <c>project</c> ID and a <c>security</c> code.  You can find them in your <q>Project Config</q> under <q>Settings</q>.  Or the code provided will contain lines such as<cd>
            <cline>var sc_project=11538430;</cline>
            <cline>var sc_invisible=1;</cline>
            <cline>var sc_security="72e1390a";</cline>
        </cd>In which case you would use both command-line switches:<cd>
            <cline>-stringparam html.statcounter.project 11538430</cline>
            <cline>-stringparam html.statcounter.security 72e1390a</cline>
        </cd></p>

        <p>Google Analytics comes in two flavors, Classic and Universal.  You will be given a single ID, which Google calls a tracking ID, which may also be called a property ID.  An example looks like <c>UA-6836004-1</c>.  In this case, you would use just one of the following two examples on your <c>xsltproc</c> command-line,<cd>
            <cline>-stringparam html.google-classic UA-6836004-1</cline>
            <cline>-stringparam html.google-universal UA-6836004-1</cline>
        </cd></p>

        <p>We would be happy to provide support for additional major services.  Just make a feature request.</p>
    </section>

    <section xml:id="add-on-search">
        <title>Search</title>
        <idx>search</idx>

        <p>Search facilities are enabled through <url href="https://cse.google.com/cse">Google Custom Search Engine</url><fn><c>cse.google.com/cse</c></fn><idx>Google Custom Search Engine</idx>.  Please, please report any discrepancies in the following instructions as the setup interface at Google changes out from underneath us.  These instructions are accurate as of 2016-12-12.</p>

        <p>Besides being useful for search facilities, setting up a search engine might be a good way to alert Google of something newly available, and initiate your book's rise up the search results rankings.</p>

        <list>
            <caption>Configuring Google Custom Search</caption>

            <ol>
                <li><p>Create an account with Google (GMail, YouTube, <etc />) and make sure you are signed in.</p></li>

                <li><p>Visit <url href="https://cse.google.com/cse">GCSE</url> and <c>Add</c> a new search engine of follow <c>New Search Engine</c>.</p></li>

                <li><p>Provide a <init>URL</init> for the top-level domain name/directory for your book/document.  Everything below this will be indexed.  We have taken some care to mark knowl content in a way compatible with the search facility, but there is more work to do here.</p></li>

                <li><p>Give the engine a GCSE-specific name, so you can tell later which one it is when you have several.</p></li>

                <li><p>Under <c>Edit Search Engine > Setup > Basics > Details > Search engine ID</c> find a string which uniquely identifies your new search engine.  Save this, you'll need to make it part of your <init>MBX</init> document.</p></li>

                <li><p>Under <c>Edit Search Engine > Setup > Admin</c> add co-authors or trusted backup personnel.</p></li>

                <li><p>Under <c>Edit Search Engine > Business > Settings</c> set your <c>Advertising status</c> to the non-profit setting if you qualify (most universties should).</p></li>

                <li><p>Fiddle with <c>Edit Search Engine > Look and Feel</c> at your own risk!  Only the defaults are tested and supported.</p></li>

                <li><p><c>Edit Search Engine > Setup > Indexing</c> sends you to Google Search Console to see if your book is already being indexed.  You may need to go through a confirmation process to establish that you are the owner of the website being indexed.  If you see that your book is not yet being indexed, you may want to wait as long as a week before your material does get indexed and you make a search box available.</p></li>
            </ol>
        </list>

        <list>
            <caption>Configuring <pretext/> for Google Search</caption>

            <ol>
                <li><p>The <c>Search engine ID</c> you saved from above is referenced in Google's code as a <c>cx</c> number.  An example looks like <c>002673997130187229905:qjo2y0jplyu</c>.  In this case, you would use on your <c>xsltproc</c> command-line,<cd>
                    <cline>-stringparam html.google-search 002673997130187229905:qjo2y0jplyu</cline>
                </cd></p></li>

                <li><p>The <c>html.google-search</c> switch will alert the <pretext/> conversion and fully enable and implement search.  You are done, and everything should just work.  You should see a Google-branded search box to the top right of each of your pages.  (We have no control over the branding.)</p></li>

                <li><p>Time to rebuild your <init>HTML</init> output and make the improved version available.</p></li>
            </ol>
        </list>
    </section>
</chapter>
