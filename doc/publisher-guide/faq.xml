<?xml version="1.0" encoding="UTF-8"?>

<!--   This file is part of the documentation of PreTeXt      -->
<!--                                                          -->
<!--      PreTeXt Author's Guide                              -->
<!--                                                          -->
<!-- Copyright (C) 2013-2016  Robert A. Beezer                -->
<!-- See the file COPYING for copying conditions.             -->

<appendix xml:id="faq">
    <title>FAQ: Frequently Asked Questions</title>

     <p>This is a list of answers to frequent questions, in no particular order.</p>

    <dl>
        <li>
            <title>Why does your conversion to HTML use a fixed width for the text?</title>
            <p>There is an optimal number of characters per line for human readers, based on research and centuries of book design.  So we set a fixed width such that that the default font comes close to achieving this optimal value.  We also use responsive design to accomodate the constraints of a small screen as best as possible.  A reader will not want to have to carefully resize a browser window to achieve the optimal width, nor should a line of text spread to many, many characters across a very expansive screen.  See <xref ref="principle-good-design" /> in the <xref ref="list-principles" text="title" />.</p>
        </li>

        <li>
            <title>I do not want my examples in knowls.</title>
            <p>You can change that!  See the section on conversions in the Publisher's Guide.</p>
        </li>

        <li>
            <title>Why are my knowls empty?</title>
            <p>When viewing the HTML version on your laptop or local computer as files, do not expect knowls to render properly.  This is a known bug/feature, and there is nothing to be done about it, unless you run a web server on your own machine, which fortunately is a very easy thing to do (see <xref ref="processing-testing-html" />). Think of it this way: the knowl content comes from a server, but on your laptop there is no web server.  You are just looking at files.</p>
        </li>

        <li>
            <title>How can I change the colors in the HTML version?</title>

            <p>
              There are several colors schemes available.
              They (currently) have a name in the form <c>mathbook-X.css</c>,
              where <m>X \in \{0,1,2,3,4,5,6,7,ups,manitoba,bucknell\}</m>.
            </p>

            <p>
              The options for colors are currently being revised,
              and soon it will be easier to create your own color scheme.
            </p>

            <p>
              To use one of the above color schemes,
              you can use a <c>stringparam</c> on the command line, like this:
                <code>
                  --stringparam html.css.file "mathbook-X.css"
                </code>
              where <m>X</m> is chosen from the list above.
              Or in your thin XSL stylesheet you can add the line
              <code>
                &amp;lt;xsl:param name="html.css.file" select="'mathbook-X.css'" /&amp;gt;
              </code>
            </p>
        </li>


        <li>
            <title>I'd like to make one small adjustment in my output.</title>
            <p>There are no plans to make it easy to change one thing in the layout (such as changing the title of all sub-sub-sections from flush-left to centered).  If you know enough, then you can hack such things yourself.  But doing so is inadvisable, except in the case where you are the rare person who has done a lot of studying and put a lot of effort into learning book design.  If that is the case, then it would be better to make a completely new layout and then share it so it is an option for other people to use.  See <xref ref="principle-output-styles" text="type-local">Principle</xref>.</p>
        </li>

        <li>
            <title>Why does the HTML output load so many external resources?</title>
            <p>The subtext perhaps being, <q>Why shouldn't I host these on my own server?</q>  A main goal for <pretext /> is to spare authors the headaches of learning new technologies just so they can get their content in front of readers.  That knowledge should be built into software, so an author can work at a higher level, explaining the intricacies of their discipline.  So we only assume an author can place locally-built HTML output onto some public server they have permission to use.  Any extra enabling techology we do not want to create ourselves gets pulled from other public servers.  MathJax, both code and fonts, is a good example, as one of the enabling projects.  Perhaps it is <em>the</em> enabling project.</p>

            <p>This way,<ul>
                <li>Authors can concentrate on their writing, not updating services on their server.</li>
                <li>Servers that are hostile to ad-hoc configurations (think <q>learning management systems</q>) are not an impediment to hosting projects.</li>
                <li>For the most part, updates to external resources happen automatically.  This allows authors and <pretext /> developers to concentrate on other aspects of their work.</li>
            </ul></p>

            <p>We get MathJax from a <term>content delivery network</term> (CDN).  Once we have that dependency, then fonts and search from Google, CSS and Javascript from the American Institute of Mathematics, and other components, all have the same dependency: a decent internet connection.  Our experience over several years is that these resources have good uptimes and good bandwidth, and so are not a source of problems.  A good offline version, with resources packaged via a script, would be a good long-term project.</p>

            <p>Finally, we do not load minor resources indiscriminately.  Something in your source should suggest they are necessary and we perform those checks, document-wide.  However, since a cross-reference is usually implemented as a knowl, and we cannot be sure what a knowl might contain, we do tend to load resources on <em>every</em> page, even if only needed once.  We hope to improve this situation.  And you are enouraged to help if you have technical skills in these areas.</p>
        </li>

        <li>
            <title>Searching my <init>PDF</init> output is broken.</title>
            <p><pretext /> goes to great lengths to make a high-quality <init>PDF</init>, but if you manipulate it by adding in new pages, or adjust the intermediate <latex /> to use other fonts, you run the risk of breaking some of the features.</p>

            <p>A ligature is a combination of two characters into one, like a lower-case <q>f</q> followed closely by a lower-case <f>i</f> without a dot.  These can confuse a search.  Verbatim text sometimes ends up with <q>smart</q> quotes, where left and right versions are inverted.  This frustrates copying source code into an actual program.  And so on.  If you see problems like this with un-customized <init>PDF</init> output, we would like to hear about it.</p>
        </li>
    </dl>

</appendix>


