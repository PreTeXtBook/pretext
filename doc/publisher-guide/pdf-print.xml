<?xml version="1.0" encoding="UTF-8"?>

<!--   This file is part of the documentation of PreTeXt      -->
<!--                                                          -->
<!--      PreTeXt Publisher's Guide                           -->
<!--                                                          -->
<!-- Copyright (C) 2013-2017  Robert A. Beezer, David Farmer  -->
<!-- See the file COPYING for copying conditions.             -->

<chapter xml:id="pdf-print">
    <title>Conversion to PDF and Print</title>

    <introduction>
        <p>
            <idx><h>PDF</h><h>electronic</h></idx>
            <idx><h>PDF</h><h>print</h></idx>
            The stylesheet <c>mathbook-latex.xsl</c> can produce two very similar outputs.  Each is a file in <latex/> syntax, which can be converted to a <init>PDF</init> with a <latex/> executable (<q>engine</q>).  However, there are two purposes for such a <init>PDF</init>.  The first is a document which is meant to be read on a screen.  We call this an <term>electronic PDF</term>.  The second is meant to be printed as a physical book, so it would be the file you provide to a copy shop, campus bookstore, or print-on-demand service (see <xref ref="print-on-demand"/>).  We call this a <term>print PDF</term>.  As you read this, keep in mind that that <latex/> conversion is really two-converters-in-one.
        </p>

        <p>As an illustration of the difference, an electronic <init>PDF</init> will contain cross-references that are active, and colored to be obvious to the reader.  For the print <init>PDF</init> the same cross-reference will be black, inactive, and by default contain the page number of the target.</p>

        <p>The <c>latex.print</c> switch controls the selection of the two output modes of this single stylesheet.  The default is <c>no</c> for the electronic version, and <c>yes</c> will change to the print version.  In this chapter, we describe both of these two, slightly dissimilar, conversions together.</p>
    </introduction>

    <section>
        <title>Text Justification and Alignment</title>

        <p>The <c>text.alignment</c> switch will control how text is aligned (such as in paragraphs).  The value <c>justify</c> is the default, and <c>raggedright</c> will cause alignment on the left, with an uneven right edge, employing less hypenation.</p>
    </section>

    <section>
        <title>One-Sided or Two-Sided</title>

        <p>An electronic <init>PDF</init> will default to page layout appropriate for a document printed single-sided, which makes the most sense for a document that may not be printed, or which might be printed on a personal printer.</p>

        <p>A print <init>PDF</init> will default to page layout appropriate for a document printed two-sided, which makes the most sense for a document that may be sent to a print-on-demand service or printed on a printer that will print on both sides of a sheet of paper.</p>

        <p>These defaults may be overridden with the <c>latex.sided</c> switch with values <c>one</c> and <c>two</c>.</p>

        <p>One-sided layout will default to symmetric left/right margins, and page headers with the page numbers <em>always</em> placed in the upper-right corner as part of default page headers.  There will be no blank pages between chapters of a book.</p>

        <p>Two-sided layout will have asymmetric margins with the ratio of inner (adjacent to spine) to outer at <c>2:3</c>.  You need some extra space at the spine to compensate for the binding, but when a book is open, the two pages are separated by two inner margins, so these do not need to be as wide as the outer margin to give some distance between the pages.  And readers will want more space to write in the outer margins, perhaps providing simple proofs of important results.  (This ratio may be changed with the <c>hmarginratio</c> key of the <c>geometry</c> package.)  Page headings will have page numbers on the outside of the page, with odd numbers on the right-side page.  Chapters will possibly have a blank page between them, so they begin on a right/odd page.  Behavior is similar in the front matter and back matter.</p>
    </section>

    <section>
        <title>Page Shape</title>

        <p>The <c>latex.geometry</c> switch can be used to supply a single string composed of any options to the <c>\geometry{}</c> command of the <latex/> <c>geometry</c> package, and these will override any defaults supplied by <pretext/>.  Resist the temptation to pack in as much text on the page as you can.  <pretext/> varies the width of the text in reaction to the font size and is already very close to the maximum number of characters per line for comfortable reading by humans.</p>

        <p>An electronic <init>PDF</init> may be printed on physical paper, but perhaps you want to make a version that works well on a portable device that naturally supports a portrait orientation, such as an Android tablet, an iPad, a Kindle (device or application), smart phone, Sony Digital Paper, or a ReMarkable tablet.  Aspect ratios vary across these devices, but once you settle on a target ratio, we have had good luck with the following algorithm and parameters:<ol>
            <li>Specify 10 point text</li>
            <li>Text width of about 4.5 inches</li>
            <li>Add quarter-inch left/right margins to compute text width</li>
            <li>Use aspect ratio to compute an overall height (about 6.5 inches)</li>
            <li>Subtract quarter-inch top and bottom margins to obtain text height</li>
        </ol>Then you can provide the <c>geometry</c> package the overall size as the <c>papersize</c> and the text width and text height as the <c>total</c> size of the body, resulting in equal (tight) margins all around, and good use of limited screen real estate.  These parameters create a <init>PDF</init> that is very legible on a larger smart phone, and for fine detail, rotating the device to landscape works well.  Really.</p>
    </section>

    <section>
        <title>Cross-References</title>

        <p>In an electronic <init>PDF</init>, cross-references will be hyperlinks that take the reader to the target.  Color is used to make them visible, in addition to whatever indication a <init>PDF</init> viewer will provide on hover.  The parameter <c>latex.pageref</c> is by default <c>no</c> in this case, but may be set to <c>yes</c> to include the page number of the target in the cross-reference.</p>

        <p>In a print <init>PDF</init>, cross-references will not be active hyperlinks and will be the same color as the adjoining text.  The parameter <c>latex.pageref</c> is by default <c>yes</c> in this case, but may be set to <c>no</c> to not include the page number of the target in the cross-reference.</p>
    </section>

    <section>
        <title>Page Number Fidelity</title>

        <p>If you use a print <init>PDF</init> to produce a physical book, the page numbers may be important to you and your readers.  Thus, you may desire that an electronic <init>PDF</init> have faithful page numbers.  You may have noticed from the discussion about page numbers in cross-references that because the default behavior puts page numbers in the print <init>PDF</init>, and not in the electronic <init>PDF</init>, content will not always appear on the same page for the two conversions.  The solution is simple<mdash/>use <c>latex.pageref</c> to have the two conversions behave identically in this regard.</p>
    </section>

    <section>
        <title>Nested Lists</title>

        <p><latex /> can fail if lists are nested too deeply.  Maximums may be up to four nested ordered lists, and up to six overall (mixing in unordered lists).  If you hit these limits, ask yourself if your situation is really that complicated, or ask us to consider a feature request adding a technical fix.</p>
    </section>

    <section>
        <title>Multi-Column List Order</title>

        <p>Lists with several columns are rendered in column-major order, as of 2018-02-28.  In other words, the first list items (<tag>li</tag>) in your source will populate the first column.</p>
    </section>

    <section>
        <title>Footnotes</title>

        <p>Footnotes are the farthest thing imaginable from structured authoring.  You can put them anywhere, and conceivably they can contain anything.  But they do work great in <init>HTML</init> presentations as knowls.  However, we do not let the tail wag the dog, and so have to make some <em>compromises</em> for footnotes output in print formats.<ul>
            <li>As of 2019-01-04 we are fairly restrictive about content.  No paragraphs, more like a few sentences, max.  If you have more content, consider the <tag>aside</tag> element, and send feature requests for that.</li>
            <li>Many blocks, such as <tag>example</tag> and <tag>remark</tag>, are implemented with the <latex/> <c>tcolorbox</c> package, to make styling and layout much more capable and reliable.  But footnotes get trapped within these boxes and render at the end of the box (not the bottom of the page) and have a different scheme for the marks (letters, not numbers).  We have mitigated much of this behavior, but the cost is that these footnotes are delayed until the box finishes.  So if you have a 4-page example, and use a footnote early, it may appear at the bottom of a page that is 3 or 4 pages away.</li>
            <li>Another consequence of the above is that hyperlinks in electronic <init>PDF</init>s, from the mark to the text, need to be disabled (they will never work within a <c>tcolorbox</c>).  Cross-references to a footmark's text will still be active in an electronic <init>PDF</init>.</li>
        </ul></p>
    </section>

    <section>
        <title>Watermarks</title>

        <p>You can add a watermark to your <init>PDF</init> which will render as large, light grey text, at an angle across teh page.  Use <c>latex.watermark</c> to set the text (avoid obscure characters or symbols, and do not use any <init>XML</init> markup).  Use <c>latex.watermark.scale</c> to adjust for long or short text.  The <latex/>-only <q>\\</q> will survive in the text to create multiple lines of text.  Submit a feature request if this is not flexible enough to meet a special need.</p>
    </section>

    <section xml:id="latex-cover-images">
        <title>Cover Images</title>

        <p>The <c>docinfo/covers</c> element may be used to specify the filenames (with relative paths) of a front-cover image and a back-cover image via the <attr>front</attr> and <attr>back</attr> attributes.  The image must be a single-page <init>PDF</init>, and it will be scaled to fit an entire page.  So it is your responsibility to supply an image which has the correct aspect ratio and sufficient resolution.  These are only supported for the <latex/> conversion.</p>

        <p>This is meant to help you create a professional electronic <init>PDF</init>.  A print-on-demand service (<xref ref="print-on-demand"/>) will likely want a standalone image (possibly with the front and back, plus a spine, all rolled into one <term>wrap</term> image).  So build your <em>real</em> cover images (<xref ref="cover-design"/>), and then modify them for this use.</p>
    </section>

    <section>
        <title>Fill-Ins</title>

        <p>The <tag>fillin</tag> element can be rendered as a line near the baseline of the current line of text, or as a complete rectangle (<q>box</q>).  Set <c>latex.fillin.style</c> to the values <c>underline</c> or <c>box</c>.</p>
    </section>

    <section xml:id="latex-index-style">
        <title>Index Style</title>

        <p>The <pubtitle>Author's Guide</pubtitle> explains how to create an index.  The realization of the index is under the influence of the <latex/> <c>imakeidx</c> package, which results in certain stylistic choices, such as a two-column format.  It also means that any options supported by this package could be easily implemented as the result of a feature request.</p>

        <p>Also, there can be significant differences between how <pretext/> implements the index for <init>HTML</init> and how the <c>imakeidx</c> package creates an index for <latex/>.  See <xref ref="online-index-style"/> and <xref ref="indexing-guide"/>.</p>
    </section>

    <section>
        <title>Experimentation</title>

        <p>Two hooks are provided to allow for arbitrary additions to the <latex/> preamble.  It should go without saying that this is for experimenting with new features and is no way supported, including, but not limited to, interactions with current <latex/> packages in use, or those added in the future.</p>

        <p>Arbitrary text (<latex/>) used as the values of <c>latex.preamble.early</c> and <c>latex.preamble.late</c> will be added to the very beginning, or very end (respectively), of the generated preamble.</p>
    </section>

    <section>
        <title>Styling</title>

        <p>Note that some of these switches are about <em>style</em>.  There are many more ways to influence the style of the <latex/> output, see <xref ref="latex-styles"/>.</p>
    </section>

    <section>
        <title>Switch Reference</title>

        <p>The following switches can be provided on the command-line, or perhaps more conveniently in a simple <init>XSL</init> file.  See <xref ref="processing-parameters"/> for more detail.</p>

        <table>
            <caption>Options for <latex/> Conversion</caption>

            <tabular>
                <row bottom="medium">
                    <cell>Switch</cell>
                    <cell>Default</cell>
                    <cell>Values</cell>
                </row>
                <row>
                    <cell><c>latex.print</c></cell>
                    <cell><c>no</c></cell>
                    <cell><c>yes</c>, <c>no</c></cell>
                </row>
                <row>
                    <cell><c>latex.sides</c></cell>
                    <cell>Varies</cell>
                    <cell><c>one</c>, <c>two</c></cell>
                </row>
                <row>
                    <cell><c>latex.font.size</c></cell>
                    <cell><c>10pt</c></cell>
                    <cell><c>8pt</c> to <c>20pt</c> (8 steps)</cell>
                </row>
                <row>
                    <cell><c>latex.geometry</c></cell>
                    <cell></cell>
                    <cell>Any options to <c>\geometry{}</c></cell>
                </row>
                <row>
                    <cell><c>text.alignment</c></cell>
                    <cell><c>justify</c></cell>
                    <cell><c>raggedright</c>, <c>justify</c></cell>
                </row>
                <row>
                    <cell><c>latex.pageref</c></cell>
                    <cell>Depends</cell>
                    <cell><c>yes</c>, <c>no</c></cell>
                </row>
                <row>
                    <cell><c>latex.watermark</c></cell>
                    <cell></cell>
                    <cell>Simple text, no markup</cell>
                </row>
                <row>
                    <cell><c>latex.watermark.scale</c></cell>
                    <cell><c>2.0</c></cell>
                    <cell>Positive rational number</cell>
                </row>
                <row>
                    <cell><c>latex.fillin.style</c></cell>
                    <cell><c>underline</c></cell>
                    <cell><c>underline</c>, <c>box</c></cell>
                </row>
                <row>
                    <cell><c>latex.preamble.early</c></cell>
                    <cell></cell>
                    <cell>Arbitrary <latex/></cell>
                </row>
                <row>
                    <cell><c>latex.preamble.late</c></cell>
                    <cell></cell>
                    <cell>Arbitrary <latex/></cell>
                </row>
            </tabular>
        </table>
    </section>

    <section>
        <title><latex /> File</title>

        <p>The <latex/> file created by <pretext/> will contain the majority of your content in a form that you could use it in a new standalone <latex/> document, in accordance with Principle <xref ref="principle-open" text="global"/>.  However some constructions which are not natural in <latex/>, such as a <tag>sidebyside</tag>, may be cumbersome to reuse.  We continue to improve and refine these situations, though.</p>

        <p>Our philosophy is to create and use many new <latex/> environments, allowing styling and fine-tuning to occur in the preamble.  This makes the body look more like simple <latex/> and allows for much greater flexiblity in styling, along with greater reliability for successful <latex/> compilation.</p>

        <p>The existence, variety, and quality of <latex/> packages changes continuously.  We can, and will, swap out some packages for replacements, as needed or desirable.  This is to your advantage, as you are absolved of the need to evaluate competing packages, and to insure that they do not clash with each other.  So resist the temptation to modify the <latex/> output significantly prior to compilation, as it will inevitably lead to frustration.  The <latex/> file is a means to an end<mdash/>it allows us to create a <init>PDF</init> with excellent typography, and especially for the demands of technical discplines, such as <acro>STEM</acro> and music.  It is meant to ephemeral, not archival.</p>

        <p>If some other variety of <latex/> (or <tex/>) file is desired, a new conversion could be created.  Many of the more complicated aspects of any conversion are purposely isolated in the <c>mathbook-common.xsl</c> file so that they can be easily re-purposed and there is consistency across output formats.</p>
    </section>
</chapter>
