<?xml version="1.0" encoding="UTF-8"?>

<!-- This file is part of the documentation of MathBook XML   -->
<!--                                                          -->
<!--    MathBook XML Author's Guide                           -->
<!--                                                          -->
<!-- Copyright (C) 2013-2016  Robert A. Beezer                -->
<!-- See the file COPYING for copying conditions.             -->

<chapter xml:id="topics">
    <title>(*) Topics</title>

    <introduction>
        <p>Careful descriptions arranged into topics.  List here is a temporary outline.</p>
    </introduction>

    <section xml:id="topic-exercises">
        <title>(*) Exercises, Inline and Sectional</title>

    </section>

    <section xml:id="topic-verbatim-literal">
        <title>Verbatim and Literal Text</title>

        <introduction>

            <p>This section expands on parts of <xref ref="overview-verbatim-literal" />.  For descriptions of more involved uses, such as program listings and console sessions, see <xref ref="topic-program-listings" />.</p>

            <p>The tags described here contain <em>only raw characters</em>.  By that we typically mean the first 128 characters of the <acro>ASCII</acro> code.  Unicode characters are likely to migrate to HTML output just fine, but results for <latex /> output will be variable.  The restriction to character data has two consequences.  First, any markup will be silently ignored.  Second, you need to observe the rules on special characters and escaped characters for <init>XML</init>, which are mercifully simple.</p>

            <blockquote>
                <p>In your source, use <c>&amp;amp;</c> for an <ampersand />, and use <c>&amp;lt;</c> and <c>&amp;gt;</c> for <less /> and <greater />.  Otherwise, every other <acro>ASCII</acro> character will render faithfully across all possible formats.</p>
            </blockquote>
        </introduction>

        <subsection xml:id="short-verbatim-text">
            <title>Short, Inline, Verbatim Text</title>

            <p>The <tag>c</tag> is a mnemonic for <q>code</q>, but is really meant to be any chunk of literal characters that you want to emphasise that way.  It is meant for use within a sentence or caption (<q>inline</q>) so its use is limited to those situations, and others that are similar, such as a title or a cell of a table.  Typically these pieces of text do not break across lines, so can bleed into right margins, or cause very short lines.  So keep the content short, and/or use early in the first sentence of a paragraph where you know it will not affect a line break.  For longer chunks, see options following.</p>

            <p>Typical presentation is a monospace font, perhaps of a slightly heavier weight.</p>

            <p>There is two caveats for use when creating <latex /> output.  We have chosen to use the <c>?</c> character as a delimiter for the start and end of a run of verbatim text.  Unfortunately, such a choice is necessary.  But if your run of characters includes a question mark, then the run will end prematurely.  So we have an attribute, <attribute>latexsep</attribute> that can be set to some other character, such as <c>!</c> or <c>|</c>, that does not appear in your content.  This choice has no effect on other output formats.</p>

            <p>The other caveat for <latex /> output is that you may use the <tag>c</tag> tag within a <tag>title</tag>, but you should avoid <latex />'s special characters (such as <c>\</c>, <c>#</c>, etc.).  Regular characters should migrate to titles as verbatim text just fine, but we do not guarantee all possibilities.</p>
        </subsection>

        <subsection xml:id="long-verbatim-text">
            <title>Longer, Inline, Verbatim Text</title>

            <p>For longer pieces of verbatim text, use the <tag>cd</tag> tag, which is short for <q>code display</q>, analogous to the <tag>md</tag> for mathematics.  It is used within sentences of a paragraph and will be presented with a vertical break above and below, but without interrupting the paragraph.  Because of the display presentation, it cannot be used other places, such as a <tag>title</tag>, where a vertical gap is not appropriate.  All of the previous discussion about special characters applies for this tag.</p>

            <p>You have two options in use.  You may author inline with the rest of a sentence, with no extra newlines or whitespace before, after, or within the content.  The result will be a single displayed line.</p>

            <p>Or you may structure the content using one, or more, of the <tag>cline</tag> tag, which is meant to be similar to the <tag>line</tag> tag used elsewhere.  You should still take care to not place any extra whitespace before or after the <tag>cd</tag> element, but inbetween the <tag>cline</tag> you may use as much visual formatting of your source as you wish, especially if you like your source to mirror your output.  For <latex /> output there is less danger that your content will inadvertenly end the verbatim text prematurely.</p>
        </subsection>

        <subsection xml:id="block-verbatim-text">
            <title>Blocks of Verbatim Text</title>

            <p>If you want to isolate large chunks of verbatim text outside of paragraphs, the <tag>pre</tag> tag is the one to use.  It can be used as a peer of paragraphs (and other structures) as a child of a subdivision, or it can be placed into a <tag>listing</tag> to receive a caption, title and number.</p>

            <p>You can structure the contents with <tag>cline</tag> in exactly the same manner as for <tag>cd</tag>.  But you may find this tedious.  Instead, you can make the content of <tag>pre</tag> a sequence of lines separated by newlines.  So that you can preserve the indentation of your source, the line closest to the left margin is taken to actually be the left margin, and a corresponding amount of leading whitespace will be removed from every line.  This will work well if you recognize two caveats.  First, results will be unpredictable if you mix spaces and tabs for indentation.  Sticking with spaces is best.  Second, if your first characters of content immediately follow the <tag>pre</tag> tag then there is no leading whitespace and it is as if that line is already at the left margin.  Then subsequent indentation may seem too severe to you.</p>

            <p>As previously mentioned, <xref ref="topic-program-listings" /> discusses the <tag>console</tag> and <tag>program</tag> tags which are more specific, and hence more capable.  Review the possibilities before you decide between <tag>pre</tag>, <tag>console</tag>, and <tag>program</tag>.</p>
        </subsection>
    </section>

    <section xml:id="topic-references">
        <title>(*) References and Citations</title>

    </section>

    <section xml:id="topic-cross-referencing">
        <title>(*) Cross-Referencing Information</title>

    </section>

    <section xml:id="topic-mathematics">
        <title>(*) Mathematics</title>

    </section>

    <section xml:id="topic-lists-and-labels">
        <title>(*) Lists and their Labels</title>

    </section>

    <section xml:id="topic-exercises-solutions">
        <title>(*) Exercises and their Answers</title>

    </section>

    <section xml:id="topic-images">
        <title>Images</title>

        <subsection xml:id="topic-images-raster">
            <title>Raster Images</title>

            <p>A <term>raster image</term> is an image described pixel-by-pixel, with different colors and intensities.  Photographs are good examples.  Common formats are Portable Network Graphics (PNG) and Joint Photographic Experts Group (JPEG, JPG), which will both work with <c>pdflatex</c> and modern browsers.  JPEG are a good choice for photographics since they are compressed on the assumption they will be viewed by a human, while PNG is a lossless format and good for line art, diagrams and similar images (if you do not have vector graphics versions, see below).</p>

            <p>To use these images, you simply provide the filename, with a relative path.  A subdirectory such as <c>images</c> is a good choice for a place to put them.  It is your responsibility to place these images where the <latex /> output will find them or where the HTML output will find them.  The XML would look like:</p>

            <pre>
            <![CDATA[<image source="images/crocodiles.png" width="50%" />]]>
            </pre>

            <p>Typically you would wrap this in a <tag>figure</tag> that might have an <attribute>xml:id</attribute> attribute for cross-references, with or without a caption.  There is no <attribute>height</attribute> attribute, so the aspect ratio of your image is your responsibility outside of MathBook XML.  The <attribute>width</attribute> attribute is a percentage of the available width of the text (outside of a <tag>sidebyside</tag> panel).  Default width is typically 90<percent />.</p>

            <p>You may also provide a <tag>description</tag> which will aid accessibility for electronic formats.  Keep such readers in mind and provide as much description as possible.  Keep the markup simple, since this will typically migrate to an HTML attribute that cannot contain any structure.  Be careful to avoid double-quotes.  For example,</p>

            <pre>
            <![CDATA[
            <image source="images/crocodiles.jpeg" width="50%">
                <description>Five crocodiles partially submerged in the shallows.</description>
            </image>
            ]]>
            </pre>
        </subsection>

        <subsection xml:id="topic-images-vector">
            <title>Vector Graphics</title>

            <p>An image is a <term>vector graphic</term> if the file describes the geometric shapes that constitute the image.  So a simple diagram would be a good candidate, but a photograph would not.  Popular formats are Portable Document Format (PDF) and Scalable Vector Graphics (SVG).  You will get the best results with PDF images in <latex /> output and SVG images for HTML.  The principal advantage of these formats is that they scale (big or small) smoothly, along with fonts.  This is critical when you cannot predict the screen size for a reader of an electronic version.</p>

            <p>Unless you describe these images with a language (see next subsection), you are responsible for providing the PDF and SVG versions.  The <c>pdf2svg</c> utility is very useful if you have PDF images only.  To use these images, you simply follow the instructions above, but do not include a file extension.  This alerts the conversion to use the best possible choice.  So presuming we had files <c>images/toad-life-cycle.pdf</c> and <c>images/toad-life-cycle.svg</c>, an example would be:</p>

            <pre>
            <![CDATA[
            <image source="images/toad-life-cycle" width="85%">
                <description>Diagram of the four stages of a toad's life.</description>
            </image>
            ]]>
            </pre>
        </subsection>

        <subsection xml:id="topic-images-source">
            <title>(*) Images Described by Source Code</title>

            <p>To be written once elements and tags solidfy, see sample article for examples.</p>
        </subsection>

    </section>

    <section xml:id="topic-tabular">
        <title>(*) Tables and Tabulars</title>

    </section>

    <section xml:id="topic-program-listings">
        <title>(*) Program Listings</title>

    </section>

    <section xml:id="topic-sidebyside">
        <title>(*) Side-by-Side Panels</title>

    </section>

    <section xml:id="topic-front-back-matter">
        <title>(*) Front and Back Matter</title>

    </section>

    <section xml:id="topic-automatic-lists">
        <title>(*) Automatic Lists</title>

    </section>

    <section xml:id="topic-units-measure">
        <title>(*) Units of Measure</title>

    </section>

    <section xml:id="topic-doctest-sage">
        <title>(*) Testing Sage Examples</title>

    </section>

    <section xml:id="topic-build-in-smc">
        <title>Building Output in SageMathCloud</title>

        <p>SageMathCloud has <em>all</em> the tools you need to author with MathBook XML.  You will need an upgrade from a subscription to allow Internet connectivity, but at a minimum a colleague with a paid plan can spare you one, they are plentiful and meant to be shared.</p>

        <ul>
            <li><p>Text editor: reasonably good, partially XML syntax-aware.</p></li>
            <li><p><c>git</c>: installed (so clone MathBook XML).</p></li>
            <li><p><latex />: installed with many additional packages.</p></li>
            <li><p>Python: installed, necessary for <c>mbx</c> script.</p></li>
            <li><p>PDF viewer: handed off to your browser.</p></li>
            <li><p>HTML viewer: convert to the <q>raw</q> URL and you can preview.</p></li>
            <li><p>HTML server: nope.  Zip up output and host elsewhere.</p></li>
        </ul>
    </section>


    <!--
    <section xml:id="topic-">
        <title></title>

    </section>

   -->

</chapter>
