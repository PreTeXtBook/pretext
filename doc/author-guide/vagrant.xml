<appendix xml:id="pretext-vagrant-box">
    <title>The <pretext/> Vagrant box</title>
    <p>In this appendix, we describe how to install and use the official <pretext/> <term>Vagrant box</term>. Vagrant is a tool that allows for the automatic provisioning and version control of <term>virtual machines</term>. What this means for the <pretext/> user is that there is a quick, simple installation process that is nearly guaranteed to result in a correctly functioning, up-to-date <pretext/> installation. Moreover, this installation simulates the behavior of a native Linux installation while providing access to important files directly to the host operating system. Therefore much of this appendix is written with the assumption that most Vagrant box users are not already running a Unix-like host<mdash/><ie/>they are running Windows. However, any <pretext/> user may benefit from a sanitized, centrally managed authoring environment.</p>
    <paragraphs>
        <title>Prerequisites for installation</title>
        <p>
            <ul>
                <li>64-bit operating system (directions for determining this)</li>
                <li>VT-X enabled in your BIOS (Intel processors only)</li>
                <li>PuTTY or other SSH client (I recommend the portable install for PuTTY)</li>
            </ul>
        </p>
        <p>All versions of Windows 10 are 64-bit. If you are running Windows 7, open Windows Explorer and select <term>This PC</term> in the left-hand pane. Right-click and select <q>Properties</q>. Examine the dialog for information about whether your Windows is 32- or 64-bit.</p>
        <p>On Linux, execute <c>lscpu</c> and look for the line marked <q>CPU op-modes</q>.</p>
        <p>Mac OS X Lion (10.7) and up are 64-bit. If you are running Snow Leopard (10.6) or earlier, launch System Profiler and click Software (in the Contents section) to check for a 64-bit kernel.</p>
        <p>VT-X may already be enabled on your machine, and it may not. If you have an AMD processor, there is nothing to do. Intel machines may need their BIOS reconfigured to run Vagrant. To enter the BIOS menu, restart your machine and watch closely. You will need to hold down a certain key during the boot sequence, often Escape, F2, or F12. As soon as you see the message, press the key and do not release until you see the BIOS menu. I usually have to restart more than once because I'm too slow.</p>
        <p>Every motherboard has a different BIOS menu. Just look through all the menus until you find the VT-X option, then enable it and use the <q>Save changes and exit</q> option from the main menu. Be careful not to make other changes unless you know what you are doing.</p>
        <p>Unix-like operating systems should have <c>ssh</c> installed. Windows users can <url href="https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe">download PuTTY here</url> (I recommend the single-file installation under <q>Alternative Binary Files</q><mdash/>just download and run, no installer).</p>
    </paragraphs>
    <paragraphs>
        <title>Installation</title>
        <list>
            <caption>Steps to install</caption>
            <ol>
                <li><url href="https://www.virtualbox.org/wiki/Downloads">Download</url> and install Virtualbox</li>
                <li><url href="https://www.vagrantup.com/downloads.html">Download</url> and install Vagrant</li>
                <li>Open a console (Windows: press Windows key, type <c>cmd</c>)</li>
                <li>
                    <p>Create a new directory <c>vagrant_demo</c> and change into it, using the command</p>
                    <sidebyside>
                        <console>
                            <prompt>$ </prompt>
                            <input>mkdir vagrant_demo</input>
                            <prompt>$ </prompt>
                            <input>cd vagrant_demo</input>
                        </console>
                    </sidebyside>
                </li>
                <li>
                    <p>Type the commands</p>
                    <sidebyside>
                        <console>
                            <prompt>$ </prompt>
                            <input>vagrant init daverosoff/pretext</input>
                            <prompt>$ </prompt>
                            <input>vagrant up</input>
                        </console>
                    </sidebyside>
                    <p>This step takes between 30 and 60 minutes to complete. There is a lot of downloading. There will be some interesting messages, but once it gets going you don't have to watch.</p>
                </li>
                <li>Open PuTTY and connect to address 127.0.0.1, port 2222.</li>
                <li>Answer <q>Yes</q> to the authentication message</li>
                <li>Login user/pass: <c>vagrant</c>/<c>vagrant</c></li>
                <li>If you see the prompt <c>[vagrant@archlinux ~] $</c>, congratulations! You have successfully installed the <pretext/> Vagrant box.</li>
                <li>Keep the PuTTY window open for use in the next section.</li>
            </ol>
        </list>
    </paragraphs>
    <paragraphs>
        <title>A first example</title>
        <p>Presumably, you already have a project underway. Use your usual file browser or command line to move or copy your project into the <c>vagrant_demo</c> directory you created earlier.</p>
        <p>In your PuTTY window, invoke the commands</p>
        <sidebyside>
            <console>
                <prompt>$ </prompt><input>cd /vagrant</input><output/>
                <prompt>$ </prompt><input>ls</input><output/>
            </console>
        </sidebyside>
        <p>and observe that your project is there, in your Vagrant box. The <c>/vagrant</c> directory in the
        Vagrant box is synced to the <c>vagrant_demo</c> directory you created earlier.</p>
        <p>Do your normal compilation dance, including steps to build images, HTML, and PDF output. For me it might look like this:</p>
        <sidebyside>
            <console>
                <prompt>$ </prompt><input>cd m101</input>
                <prompt>$ </prompt><input>mkdir -p output/images</input>
                <prompt>$ </prompt><input>~/mathbook/script/mbx -c latex-image -d output/images -f all src/index.mbx</input>
                <prompt>$ </prompt><input>xsltproc -xinclude -o output/ ~/mathbook/xsl/mathbook-html.xsl src/index.mbx</input>
                <prompt>$ </prompt><input>xsltproc -xinclude -o output/index.tex ~/mathbook/xsl/mathbook-latex.xsl src/index.mbx</input>
                <prompt>$ </prompt><input>cd output</input>
                <prompt>$ </prompt><input>xelatex index.tex</input>
            </console>
        </sidebyside>
        <p>After compilation is done, use your normal file browser to locate the output tree you created. Find some output and preview it, marveling at the simplicity of what has befallen your project.</p>
        <remark>
            <p>It is also possible to keep source in the <c>/home/vagrant</c> directory in the Vagrant box. Then the source will not be accessible from the Windows host. One possibility would be to use <c>git</c> to author in Windows and pull changes to the Vagrant box at compile time. I'm not sure why this would be better. Perhaps you don't want multiple copies of your source floating around your main disk drive.</p>
        </remark>
        <p>You can halt or suspend your Vagrant box by issuing the <c>vagrant halt</c> or <c>vagrant suspend</c> commands, and destroy all vestiges of it with <c>vagrant destroy</c>. The latter does not remove the image from which the box is cloned, so starting another box later (perhaps in a different location) is much faster.</p>
    </paragraphs>
    <paragraphs>
        <title>Known issues</title>
        <p>The current build of the Vagrant box includes Sage, Asymptote, and <webwork/> via Docker as described <url href="https://github.com/openwebwork/webwork2/wiki/Docker-newbie-instructions">at the wiki</url>. Presumably, if your compilation dance requires a <webwork/> server, then you already have access to one and your normal compilation will still work. It does not yet include <c>jing</c> for validation; this will be included in the next release.</p>
        <p>While I have tried to keep the virtual machine image as simple as possible, it is still fairly large, more than 5 GB, and any virtualization will demand a substantial amount of machine memory. Vagrant will run best if you have at least 8 GB of ram. I am interested to hear how well it works on less high-powered systems.</p>
        <p>The <c>jing-trang</c> validation tool is not included in the present version.</p>
    </paragraphs>
    <p>Thanks for your interest in the <pretext/> Vagrant box. If you encounter errors, or if you think something is missing, please <url href="https://github.com/daverosoff/pretext-vagrant/issues">open an issue on Github</url>.</p>
</appendix>
