@use '../default/shell_default.css';

:root {
  --content-margin: 32px;
  --content-width: 750px;
  --content-width-wide: 1050px;
  --page-width: 1100px;
  --xl-margin: calc((var(--content-width) - var(--content-width-wide)) / 2 - var(--content-margin));

  --content-font-size: 1.2rem;
}

html {
  font-size: 16px !important;
  /* temp override runestone injection */
}

:root {
  --questionBgColor: var(--componentBgColor) !important;
}

:root {
  --component-border-color: #bababa;
  --page-gutter-color: #c5c4c4;
  --page-border-color: #444;
  --page-color: white;
}

.pretext .ptx-masthead {
  border-bottom: 1px solid var(--component-border-color);
}

body.pretext {
  background-color: var(--page-gutter-color);
}

.pretext .ptx-page {
  position: relative;
  min-height: 100vh;
  max-width: var(--page-width);
  margin: 0 auto;
  background: var(--page-color);

  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
}

.searchresultsplaceholder {
  left: calc(50vw - 300px);
}

.pretext .ptx-page .ptx-main {
  max-width: var(--content-width);
  margin: 0 auto;
  padding-bottom: 2em;
  border: 0;
  overflow: visible;
}

.pretext .ptx-page .ptx-sidebar.hidden + .ptx-main {
  margin: 0 auto;
}

.pretext .ptx-page > .ptx-main .ptx-content {
  max-width: var(--content-width);
  font-size: var(--content-font-size);
}

.pretext .ptx-page-footer {
  max-width: var(--page-width);
  justify-content: center;
  margin: 0 auto;
  gap: 90px;
  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
  border-bottom: 0;
}

.pretext .ptx-content-footer {
  max-width: 100%;
  margin: 2em auto 0;
  padding-bottom: 2em;
  justify-content: space-evenly;
}

.pretext .ptx-page-footer a {
  --margin: 15px 45px;
}

/* components that should be wide */
.ptx-content .runestone:is(.ac_section, .codelens, .parsons_section, .hparsons_section),
/* .ptx-content pre.program, */
.ptx-content .runestone.datafile,
.ptx-content .contains-wide {
  width: var(--content-width-wide);
  max-width: unset;
  margin-left: var(--xl-margin);
  max-width: unset;
  border-width: 1px;
  border-radius: 3px;
}

/* unless nested in other runestone's */
.ptx-content .runestone .runestone:is(.ac_section, .codelens, .parsons_section, .hparsons_section),
/* .ptx-content .runestone pre.program, */
.ptx-content .runestone .runestone.datafile {
  width: 100%;
  margin-left: auto;
}

.ptx-content .runestone {
  border-width: 1px;
  border-radius: 3px;
}

.pretext .ptx-page > .ptx-main .ptx-content pre,
.pretext .ptx-page > .ptx-main .ptx-content .ptx-runestone-container :is(.ac_code_div),
.ptx-runestone-container .parsons .sortable-code-container,
.ptx-runestone-container .hparsons_section .hparsons-input {
  font-size: 1rem;
}

/* limit width of content inside ac except for actual activecode */
.ptx-content .runestone.ac_section > div > div > *:not(.ac_code_div):not(.ac_output):not(.codelens):not(.ac_actions) {
  max-width: calc(var(--content-width) - 2 * var(--content-margin));
  margin-left: auto;
  margin-right: auto;
}


/* limit width of content inside contains-wide */
.ptx-content .runestone.contains-wide .tab-content {
  max-width: var(--content-width);
  margin-left: auto;
  margin-right: auto;
}

/* but widen item that needs it */
.ptx-content .runestone.contains-wide .tab-content .runestone:is(.ac_section, .codelens, .parsons_section, .hparsons_section) {
  width: calc(var(--content-width-wide) - 20px);
  margin-left: calc(var(--xl-margin) + 8px);
}


/* limit width of content inside parsons except for actual parsons */
.ptx-content .runestone.parsons_section > .parsons {
  width: 100%;
  padding-right: 0;
}

.ptx-content .runestone.parsons_section > .parsons > div > *:not(.sortable-code-container) {
  max-width: calc(var(--content-width) - 2 * var(--content-margin));
  margin-left: auto;
  margin-right: auto;
}

.ptx-content .runestone .parsons .sortable-code-container {
  display: flex;
  flex-flow: wrap;
  justify-content: center;
  gap: 15px;
  margin: 10px auto;
}

.ptx-content .ptx-runestone-container .parsons .sortable-code {
  margin: 0;
}

.ptx-content .runestone .parsons .runestone_caption_text {
  max-width: unset;
}

.ptx-content .runestone .parsons .lines code {
  white-space: nowrap;
}

.ptx-content .runestone .parsons .lines code .token {
  background: none;
  /*fix prism overlap */
}

.ptx-runestone-container .runestone.parsons_section {
  padding-top: 15px;
}

/* whole bunch of rules to relatively gracefully handle lots of different sizes without js */
@media screen and (max-width: 1100px) {

  /* tune to match --page-width */
  :root {
    --page-width: 100%;
  }
}

@media screen and (max-width: 1100px) {
  :root {
    --content-width-wide: 1000px;
  }
}

@media screen and (max-width: 1050px) {
  :root {
    --content-width-wide: 950px;
  }
}

@media screen and (max-width: 1000px) {
  :root {
    --content-width-wide: 900px;
  }
}

@media screen and (max-width: 950px) {
  :root {
    --content-width-wide: 850px;
  }
}

@media screen and (max-width: 900px) {
  :root {
    --content-width-wide: 800px;
  }
}

@media screen and (max-width: 943px) {

  /* Override rule that adds scrollbars to program listings when not needed */
  .ptx-content .figure-like {
    overflow-x: inherit;
  }
}

@media screen and (max-width: 850px) {

  /* match to --content-width - should be that + 100 */
  :root {
    --content-width: 100%;
    --content-width-wide: calc(100% + 2 * var(--content-margin));
    --xl-margin: calc(-1 * var(--content-margin));
  }

  /* nested sizing */
  .ptx-content article:is(.theorem-like,
    .definition-like,
    .example-like,
    .project-like,
    .remark-like,
    .openproblem-like,
    .computation-like) > .ptx-runestone-container > .runestone:is(.ac_section,
    .codelens,
    .parsons_section,
    .hparsons_section),
  /* .ptx-content
    article:is(
      .theorem-like,
      .definition-like,
      .example-like,
      .project-like,
      .remark-like,
      .openproblem-like,
    .computation-like
    )
    > .ptx-runestone-container
    > pre.program, */
  .ptx-content article:is(.theorem-like,
    .definition-like,
    .example-like,
    .project-like,
    .remark-like,
    .openproblem-like,
    .computation-like) > .ptx-runestone-container > .runestone.datafile,
  .ptx-content article:is(.theorem-like,
    .definition-like,
    .example-like,
    .project-like,
    .remark-like,
    .openproblem-like,
    .computation-like) > .ptx-runestone-container > .runestone.contains-wide {
    width: calc(var(--content-width-wide) + 10px);
  }

  .ptx-content .runestone:is(.ac_section, .codelens, .parsons_section, .hparsons_section, .contains-wide) {
    border-left: 0;
    border-right: 0;
    border-top: 1px solid #aaa;
    border-bottom: 1px solid #aaa;
    border-radius: 0;
  }

  .ptx-content .code-inline {
    white-space: pre-wrap;
  }

  .ptx-runestone-container .cd_section,
  .ptx-content .ptx-runestone-container .parsons .sortable-code {
    overflow-x: auto;
  }

  .ptx-content .ptx-runestone-container .parsons .sortable-code:first-of-type {
    padding: 0 25px;
  }

  .searchresultsplaceholder {
    width: 80vw;
    left: 10vw;
    bottom: 10vh;
  }

}

@media screen and (max-width: 663px) {
  :root {
    --content-margin: 28px;
    /* based on shell_default */
  }
}